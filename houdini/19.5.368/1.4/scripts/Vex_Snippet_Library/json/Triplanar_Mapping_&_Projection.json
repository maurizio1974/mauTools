{
    "label": "Triplanar_Mapping_&_Projection",
    "context": "Points",
    "data": "// VEX colormap triplanar - Point Wrangle Example\n\n// Assign each initial variable, with controls for uv position.\nstring imgpath = chs(\"texturepath\");\nvector pos = (@P + chv(\"proj_offset\")) * chf(\"proj_freq\");\n\n// Iterate over axes, with a blank colour vector and absolute normal.\nvector imgcol; vector N = abs(@N);\nfor(int i = 0; i < 3; i++){\n    // Set the uv position as P on currently selected projection plane.\n    vector uv = set(pos[(1 + i) % 3], \n                    pos[(2 + i) % 3], 0);\n\n    // Set the up vector as the orthagonal component.\n    vector up = set(0,0,0);\n    setcomp(up, 1, (3 + i) % 3);\n    \n    // Get the relative angle of N to our plane, and convert to degrees.\n    float angle = acos(dot(up, N)) / (PI / 180.0);\n    \n    // Within a given angular threshold, create the planar mask.\n    float mask = fit(angle, 0, chf(\"proj_angle\"), 1, 0);\n    mask = chramp(\"mask_ramp\", mask, 0);\n    \n    // Apply the texture map to the planar projection uv coordinates.\n    vector projmap = colormap(imgpath, uv, \"mode\", \"repeat\");\n    imgcol = lerp(imgcol, projmap, mask);\n}\n\n@Cd = ocio_transform(\"lin_srgb\", \"acescg\", imgcol);\n"
}