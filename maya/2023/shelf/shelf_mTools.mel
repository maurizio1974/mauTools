global proc shelf_mTools () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Connect to editor" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Connect to editor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "sublime-text.png" 
        -image1 "sublime-text.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import os, sys\ncmds.commandPort(name=\":7002\", sourceType=\"python\")\ndef setPaths():\n    base = os.path.join(os.getenv('MIMMO_SW'), 'mauTools/WIN', os.getenv('MAYA_VERSION'), os.getenv('mt_V'), 'scripts')\n    print(base)\n    locs = ['mgT', 'pro', 'extra_Libs']\n    for l in locs:\n        cur = os.path.join(base, l).replace('\\\\', '/')\n        print(cur)\n        if cur not in sys.path:\n            os.sys.path.append(cur)\n\nsetPaths()\nimport mWild as mW\nmW.mSetWild()\nimport mSuperCB\nmSuperCB.superCB()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Node Editor Plus" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "from node_editor_plus import node_editor_plus\nnep = node_editor_..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "NE+" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "from node_editor_plus import node_editor_plus\nnep = node_editor_plus.NodeEditorPlus()\nnep.ui()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "MMtoKey" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "MMtoKey" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "MMK" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib, MMtoKey\nimportlib.reload(MMtoKey)\nMMtoKey.ui()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "pw_MayaToHoudiniChannelExport" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "pw_MayaToHoudiniChannelExport" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "houdini_logo.png" 
        -image1 "houdini_logo.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "cmds.confirmDialog(t='Error', m='Please right click to select action')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
        -mi "pw_MayaToHoudiniChannelExport" ( "import importlib\nimport pw_MayaToHoudiniChannelExport\nimportlib.reload(pw_MayaToHoudiniChannelExport)\npw_MayaToHoudiniChannelExport.show()" )
        -mip 0
        -mi "pw_mGeoExporter" ( "import importlib\nimport pw_mGeoExporter\nimportlib.reload(pw_mGeoExporter)\npw_mGeoExporter.show()" )
        -mip 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Print Selected List" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "print ('[\\'' + ('\\', \\'').join(cmds.ls(sl=True)) + '\\']')\n" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "pList" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "print ('[\\'' + ('\\', \\'').join(cmds.ls(sl=True)) + '\\']')\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "modelChecker" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "from modelChecker import modelChecker_UI\n\nmodelChecker_UI.UI.sho..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "modelChecker.png" 
        -image1 "modelChecker.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "from modelChecker import modelChecker_UI\n\nmodelChecker_UI.UI.show_UI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "craNodeConnections" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "craNodeConnections" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "craNodeConnections.png" 
        -image1 "craNodeConnections.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "source \"craNodeConnections.mel\";craNodeConnections();" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mok_AttributeReorder" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Mok_AttributeReorder" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Mok" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib, Mok_AttributeReorder\nimportlib.reload(Mok_AttributeReorder)\nMok_AttributeReorder.UI()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Power Search" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Power Search" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "RC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "source \"rcPowerSearch.mel\";\nrcPowerSearch()" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "mLockAttr" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "mLockAttr" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "mLockAttr.png" 
        -image1 "mLockAttr.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "# import mLockAttr;mLockAttr.mlockAttr_UI()\n# from utilsTools import vertexDefUtil;reload(vertexDefUtil);vertexDefUtil.outLockAttr_UI()\nimport sys\n\ntempdd = '/home/mau/maya/2023/extra/mauTools/1.2/scripts/pro'\nif tempdd not in sys.path: sys.path.append(tempdd)\n\nimport mLockAttr\nmLockAttr.mlockAttr_UI()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Variable FK" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Variable FK" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.3 
        -image "varfkico.png" 
        -image1 "varfkico.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import jo_varFk\nimport importlib\nimportlib.reload(jo_varFk)\njo_varFk.UI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "local space Fix" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "local space Fix" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "locF" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "source \"localSpaceFix.mel\";\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Local Space FIx" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Local Space Fix" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "mLocalSpaceFix.png" 
        -image1 "mLocalSpaceFix.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import mLocalSpaceFix;\nimport importlib\nimportlib.reload(mLocalSpaceFix)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "CV Spiral" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "CV Spiral" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CVs" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "////////////////////////////////////////\n//\n// CVSH_Tool.mel (08/2011)\n//\n// Author: Ricardo M?nch\n// Version: v1.4\n// Completion Date: 27.09.2012\n//\n// Function: The \"CVSH_Tool.mel\" script let you create Spiral / Helix nurbs curves with several settings.\n// \t\t\t In addition, you can create extrusions along the Spiral / Helix nurbs curves, create duplications along them and animate your extrusions.\n//\n// Version History: v1.0 - Completed first basic functionality with simple GUI\n//\t\t\t\t\t\t - Added extrude along path curve(Helix or Spiral) with any curve type(just curve types only)\n//\t\t\t\t\t\t - GUI (re)\"Design\"\n// \t\t\t\t \tv1.1 - Added Revolution Distance decrease/increase\n// \t\t\t\t\t\t - Save and load curve parameters\n// \t\t\t\t\tv1.2 - New GUI/New Section \"Duplication\"\n// \t\t\t\t\t\t - Duplicate objects along Spiral/Helix\n// \t\t\t\t\t\t - No selection between elliptic and circular Spiral/Helix, now controlled by Radius parameters\n// \t\t\t\t\t\t - The number of actual curve points in a Spiral/Helix was not correct. Sorry^^ But works now.\n// \t\t\t\t\t\t - Fixed Bug #1: Filedialog abortion saved a noname file\n// \t\t\t\t\tv1.3 - Duplicated objects now scalable(taper effect)\n// \t\t\t\t\t\t - Added a button to calculate the height of a Spiral/Helix\n// \t\t\t\t\t\t - Duplicate or Instance objects along Spiral/Helix\n// \t\t\t\t\t\t - Fixed Bug #2: Just the last selected object is duplicated\n// \t\t\t\t\t\t - Animate extrusion along path curve\n// \t\t\t\t\t\t - Fixed Bug #3: Error \"object not found\" (GUI problem)\n// \t\t\t\t\tv1.4 - Random translation, rotation, scale for duplicated objects\n// \t\t\t\t\t\t - Save all Parameters not just Spiral/Helix settings\n// \t\t\t\t\t\t - Created new file specification for saving files >> is now upward compatible\n// \t\t\t\t\t\t - 2 presets were added to the menu\n//\n// Bugs: v1.1 - 1. Filedialog abortion saves a noname file\n// \t\t v1.2 - 2. Just the last selected object is duplicated\n// \t\t v1.0 - 3. Error \"object not found\" (GUI problem)\n//\n// Fixed Bugs: v1.1 - 1. Filedialog abortion saved a noname file\n// \t\t\t   v1.2 - 2. Just the last selected object is duplicated\n// \t\t\t   v1.0 - 3. Error \"object not found\" (GUI problem)\n//\n// Future Plans: - Create Spiral/Helix along a curve\n// \t\t\t\t - Convert extruded profile to polygons, ...\n// \t\t\t\t - Set origin for path and profile via user input or move curve to selection\n// \t\t\t\t - Extrude along other types (not only curves)\n// \t\t\t\t - Animation tab ... let duplicated objects appear/animate duplicated objects\n// \t\t\t\t - Rebuild/Redesign GUI\n// \t\t\t\t - Add new preset bank system\n//\t\t\t\t - Boring but big TODO: optimizing and cleaning up the code -_-\n//\n////////////////////////////////////////\n\n\n//////////////////////////////////////////\n// Start/standard/reset value variables //\n//////////////////////////////////////////\n\nstring $sPathName = \"CurvePath\";\nfloat $sRadiusA = 1.000;\nfloat $sRadiusB = 0.500;\nint $sPointsPerRevolution = 10;\nint $sRevolutions = 5;\nfloat $sPitch = 0.500;\nfloat $sPitchDelay = 0.000000;\nfloat $sSpiralDecrease = 0.500;\nstring $sCalculateHeightButtonLabel = \"Spiral / Helix Height: \";\n\nstring $sProfileName = \"CurveProfile\";\nint $sProfileSections = 12;\nfloat $sProfileRadius = 0.100;\nfloat $sExtrusionScale = 1.000;\n\nint $sNumberOfDuplicates = 10;\nint $sRotationStyle = 1;\nint $sDuplicationStyle = 1;\nfloat $sDupliScaleFactor = 1.000;\nint $sRandomTranslation = 2;\nfloat $sMinTranslation = -0.200000;\nfloat $sMaxTranslation = 0.200000;\nint $sRandomRotation = 2;\nfloat $sMinRotation = -40.000000;\nfloat $sMaxRotation = 40.000000;\nint $sRandomScale = 2;\nfloat $sMinScale = -0.800000;\nfloat $sMaxScale = 0.800000;\n\nint $sAnimationStart = 1;\nfloat $sAnimationStartValue = 0.000;\nint $sAnimationEnd = 50;\nfloat $sAnimationEndValue = 1.000;\nint $sAnimationCreationStyle = 1;\n\n\n//////////////////////\n// Preset Variables //\n//////////////////////\n\n/* \n*.cvshpb file specification\nHeader:\n\t-Information on file type:\n\t\tCVSH Tool Preset Bank File\n\t-Information on number of presets\n\t\t#NumberOfPresets\n\t\t16\nData structure:\n\t#PresetID\"presetid\"Start\t\tex.: #PresetID1Start, ...\n\t#PresetName\n\t\tex.: Spiralizer247\n\tTwo lines for \t#\"descriptive name\"\n\t\t\t\t\t\"value\"\n\t\tex.:\n\t\t\t#Pitch\n\t\t\t0.5\n\t\t\t...\n\t#PresetID\"presetid\"End\t\tex.: #PresetID1End, ...\n\t\n\tin *.cvshpb file the preset id is always bigger than 0(zero)\n*/\n\n/* \n*.cvsh file specification\nHeader:\n\t\t#HEADER\n\t-Information on file type:\n\t\tCVSH Tool Preset File v1.4 and above\n\t-Information on number of presets\n\t\t#NumberOfPresets\n\t\talways 1\nData structure:\n\t#PresetID\"presetid\"Start\t\tex.: #PresetID0Start, ...\n\t#PresetName\n\t\tex.: Spiralizer247\n\tTwo lines for \t#\"descriptive name\"\n\t\t\t\t\t\"value\"\n\t\tex.:\n\t\t\t#Pitch\n\t\t\t0.5\n\t\t\t...\n\t#PresetID\"presetid\"End\t\tex.: #PresetID0End, ...\n\t\n\tin *.cvsh file the preset id is always 0 (zero)\n*/\n\n// Possible Values (descriptive name = DN)\n// Header\nstring $DNHeader = \"#HEADER\";\nstring $DNFileInformationBank = \"CVSH Tool Preset Bank File\";\nstring $DNFileInformationFile = \"CVSH Tool Preset File v1.4 and above\";\nstring $DNNumberOfPresets = \"#NumberOfPresets\";\n\n// Data\nstring $DNData = \"#DATA\";\nstring $DNPresetEntryID = \"#PresetID\";\nstring $DNPresetEntryEnd = \"Start\";\nstring $DNPresetName = \"#PresetName\";\nstring $DNPresetTailID = \"#PresetID\";\nstring $DNPresetTailEnd = \"End\";\n\n// Possible Values extendable\nstring $DNPathName = \"#PathName\";\nstring $DNRadiusA = \"#RadiusA\";\nstring $DNRadiusB = \"#RadiusB\";\nstring $DNPointsPerRevolution = \"#PointsPerRevolution\";\nstring $DNRevolutions = \"#Revolutions\";\nstring $DNPitch = \"#Pitch\"; // old: RevolutionDistance\nstring $DNPitchDelay = \"#PitchDelay\"; // old: DecreaseRevolution\nstring $DNSpiralDecrease = \"#SpiralDecrease\";\n\nstring $DNProfileName = \"#ProfileName\";\nstring $DNProfileSections = \"#ProfileSections\";\nstring $DNProfileRadius = \"#ProfileRadius\";\nstring $DNExtrusionScale = \"#ExtrusionScale\";\t// old: ScaleFactor\n\nstring $DNNumberOfDuplicates = \"#NumberOfDuplicates\";\nstring $DNRotationStyle = \"#RotationStyle\";\nstring $DNDuplicationStyle = \"#DuplicationStyle\";\nstring $DNDupliScaleFactor = \"#DupliScaleFactor\";\nstring $DNRandomTranslation = \"#RandomTranslation\";\nstring $DNMinXTranslation = \"#MinXTranslation\";\nstring $DNMaxXTranslation = \"#MaxXTranslation\";\nstring $DNMinYTranslation = \"#MinYTranslation\";\nstring $DNMaxYTranslation = \"#MaxYTranslation\";\nstring $DNMinZTranslation = \"#MinZTranslation\";\nstring $DNMaxZTranslation = \"#MaxZTranslation\";\nstring $DNRandomRotation = \"#RandomRotation\";\nstring $DNMinXRotation = \"#MinXRotation\";\nstring $DNMaxXRotation = \"#MaxXRotation\";\nstring $DNMinYRotation = \"#MinYRotation\";\nstring $DNMaxYRotation = \"#MaxYRotation\";\nstring $DNMinZRotation = \"#MinZRotation\";\nstring $DNMaxZRotation = \"#MaxZRotation\";\nstring $DNRandomScale = \"#RandomScale\";\nstring $DNMinScale = \"#MinScale\";\nstring $DNMaxScale = \"#MaxScale\";\n\nstring $DNAnimationStart = \"#AnimationStart\";\nstring $DNAnimationStartValue = \"#AnimationStartValue\";\nstring $DNAnimationEnd = \"#AnimationEnd\";\nstring $DNAnimationEndValue = \"#AnimationEndValue\";\nstring $DNAnimationCreationStyle = \"#AnimationCreationStyle\";\n\n\n//////////////////\n// UI functions //\n//////////////////\n\n// GetIntSliderValue function\n\nproc int GetIntSliderValue (string $IntName)\n{\n\tint $tempint = `intSliderGrp -query -value $IntName`;\n\treturn $tempint;\n}\n\n\n// GetFloatSliderValue function\n\nproc float GetFloatSliderValue (string $FloatName)\n{\n\tfloat $tempfloat = `floatSliderGrp -query -value $FloatName`;\n\treturn $tempfloat;\n}\n\n\n// GetFloatFieldValue function\n\nproc float GetFloatFieldValue (string $FloatName)\n{\n\tfloat $tempfloat = `floatField -query -value $FloatName`;\n\treturn $tempfloat;\n}\n\n\n// GetStringTextValue function\n\nproc string GetStringTextValue (string $StringName)\n{\n\tstring $tempstring = `textFieldGrp -query -text $StringName`;\n\treturn $tempstring;\n}\n\n\n// GetCheckBoxValue function\n\nproc int GetCheckBoxValue (string $CheckBoxName)\n{\n\tint $tempint = `checkBox -query -value $CheckBoxName`;\n\treturn $tempint;\n}\n\n\n// GetCheckBoxGroupValue function\n\nproc int GetCheckBoxGroupValue (string $CheckBoxName)\n{\n\tint $tempint = `checkBoxGrp -query -value $CheckBoxName`;\n\treturn $tempint;\n}\n\n\n// GetRadioButton2Value function\n\nproc int GetRadioButton2Value (string $RadioName)\n{\n\tif (`radioButtonGrp -query -select $RadioName` == 1)\n\t{\n\t\t// First selection\n\t\treturn 0;\n\t}\n\t\n\t// Second selection\n\treturn 1;\n}\n\n\n// CopyFloatValue function\n\nproc CopyFloatValue (string $GUIElement, float $Value)\n{\n\tfloatSliderGrp -edit -value $Value $GUIElement;\n}\n\n\n// ChangeButtonLabel function\n\nproc ChangeButtonLabel (string $ButtonName, string $NewLabelValue)\n{\n\tbutton -edit -label $NewLabelValue $ButtonName;\n}\n\n\n// CalculateHeightStr function\n\nproc string CalculateHeightStr (int $PointsPerRevolution, int $Revolutions, float $RevolutionDistance, float $RevolutionDistanceDecrease)\n{\n\tfloat $TempHeight = $Revolutions * $RevolutionDistance;\n\t\n\tint $TotalCurvePoints = $PointsPerRevolution * $Revolutions;\n\t\n\t$TempHeight = $TempHeight + ($TotalCurvePoints * $RevolutionDistanceDecrease);\n\t\n\tstring $FinalHeight = $TempHeight;\n\t\n\treturn $FinalHeight;\n}\n\n\n// Combine2Strings function\n\nproc string Combine2Strings (string $One, string $Two)\n{\n\tstring $TempString = $One + $Two;\n\t\n\treturn $TempString;\n}\n\n\n// PrintStringArray function\n\nproc PrintStringArray (string $Array [])\n{\n\t// Size of the array\n\tint $ArraySize = size ($Array);\n\t\n\t// Print size of the array\n\tprint (\"Size: \" + $ArraySize + \"\\n\");\n\t\n\t// Print every field\n\tint $PIterator = 0;\n\t\n\twhile ($PIterator < $ArraySize)\n\t{\n\t\tprint ($Array [$PIterator] + \"\\n\");\n\t\t\n\t\t++$PIterator;\n\t}\n}\n\n\n// CreateGroup function\n\nproc string CreateGroup (string $ObjectList [])\n{\n\t// Group name\n\tstring $GroupName = \"Group\";\n\tstring $GroupObjectList = \"\";\n\t\n\tint $ObjectCount = size ($ObjectList);\n\t\n\tint $GIterator = 0;\n\t\n\tif ($ObjectCount == 0)\n\t{\n\t\terror \"No objects for group selected.\";\n\t}\n\t\n\telse\n\t{\n\t\tfor ($GIterator = 0; $GIterator < $ObjectCount; ++$GIterator)\n\t\t{\n\t\t\t$GroupObjectList = $GroupObjectList + \" \" + $ObjectList [$GIterator];\n\t\t}\n\t\t\n\t\tstring $Group = `group -name ($GroupName + $GroupObjectList)`;\n\t\t\n\t\treturn $Group;\n\t}\n}\n\n\n// InitRandom function\n\nproc InitRandom (int $Seed)\n{\n\tseed $Seed;\n}\n\n\n// RandomFloatRange function\n\nproc float RandomFloatRange (float $Start, float $End)\n{\n\treturn `rand $Start $End`;\n}\n\n\n// Reset function\n\nproc Reset (string $PathName, string $sPathName,\n\t\t\tstring $RadiusA, float $sRadiusA,\n\t\t\tstring $RadiusB, float $sRadiusB,\n\t\t\tstring $PointsPerRevolution, int $sPointsPerRevolution,\n\t\t\tstring $Revolutions, int $sRevolutions,\n\t\t\tstring $Pitch, float $sPitch,\n\t\t\tstring $PitchDelay, float $sPitchDelay,\n\t\t\tstring $SpiralDecrease, float $sSpiralDecrease,\n\t\t\tstring $CalculateHeightButton, string $sCalculateHeightButtonLabel,\n\t\t\tstring $ProfileName, string $sProfileName,\n\t\t\tstring $ProfileSections, int $sProfileSections,\n\t\t\tstring $ProfileRadius, float $sProfileRadius,\n\t\t\tstring $ScaleFactor, float $sScaleFactor,\n\t\t\tstring $NumberOfDuplicates, int $sNumberOfDuplicates,\n\t\t\tstring $RotationStyle, int $sRotationStyle,\n\t\t\tstring $DuplicationStyle, int $sDuplicationStyle,\n\t\t\tstring $DupliScaleFactor, float $sDupliScaleFactor,\n\t\t\tstring $RandomTranslation, int $sRandomTranslation,\n\t\t\tstring $MinXTranslation, float $sMinXTranslation,\n\t\t\tstring $MinYTranslation, float $sMinYTranslation,\n\t\t\tstring $MinZTranslation, float $sMinZTranslation,\n\t\t\tstring $MaxXTranslation, float $sMaxXTranslation,\n\t\t\tstring $MaxYTranslation, float $sMaxYTranslation,\n\t\t\tstring $MaxZTranslation, float $sMaxZTranslation,\n\t\t\tstring $RandomRotation, int $sRandomRotation,\n\t\t\tstring $MinXRotation, float $sMinXRotation,\n\t\t\tstring $MinYRotation, float $sMinYRotation,\n\t\t\tstring $MinZRotation, float $sMinZRotation,\n\t\t\tstring $MaxXRotation, float $sMaxXRotation,\n\t\t\tstring $MaxYRotation, float $sMaxYRotation,\n\t\t\tstring $MaxZRotation, float $sMaxZRotation,\n\t\t\tstring $RandomScale, int $sRandomScale,\n\t\t\tstring $MinScale, float $sMinScale,\n\t\t\tstring $MaxScale, float $sMaxScale,\n\t\t\tstring $AnimationStart, int $sAnimationStart,\n\t\t\tstring $AnimationStartValue, float $sAnimationStartValue,\n\t\t\tstring $AnimationEnd, int $sAnimationEnd,\n\t\t\tstring $AnimationEndValue, float $sAnimationEndValue,\n\t\t\tstring $AnimExtOption, int $sAnimExtOption)\n{\n\ttextFieldGrp -edit -text $sPathName $PathName;\n\tfloatSliderGrp -edit -value $sRadiusA $RadiusA;\n\tfloatSliderGrp -edit -value $sRadiusB $RadiusB;\n\tintSliderGrp -edit -value $sPointsPerRevolution $PointsPerRevolution;\n\tintSliderGrp -edit -value $sRevolutions $Revolutions;\n\tfloatSliderGrp -edit -value $sPitch $Pitch;\n\tfloatSliderGrp -edit -value $sPitchDelay $PitchDelay;\n\tfloatSliderGrp -edit -value $sSpiralDecrease $SpiralDecrease;\n\tbutton -edit -label $sCalculateHeightButtonLabel $CalculateHeightButton;\n\ttextFieldGrp -edit -text $sProfileName $ProfileName;\n\tintSliderGrp -edit -value $sProfileSections $ProfileSections;\n\tfloatSliderGrp -edit -value $sProfileRadius $ProfileRadius;\n\tfloatSliderGrp -edit -value $sScaleFactor $ScaleFactor;\n\tintSliderGrp -edit -value $sNumberOfDuplicates $NumberOfDuplicates;\n\tradioButtonGrp -edit -select $sRotationStyle $RotationStyle;\n\tradioButtonGrp -edit -select $sDuplicationStyle $DuplicationStyle;\n\tfloatSliderGrp -edit -value $sDupliScaleFactor $DupliScaleFactor;\n\tradioButtonGrp -edit -select $sRandomTranslation $RandomTranslation;\n\tfloatField -edit -value $sMinXTranslation $MinXTranslation;\n\tfloatField -edit -value $sMinYTranslation $MinYTranslation;\n\tfloatField -edit -value $sMinZTranslation $MinZTranslation;\n\tfloatField -edit -value $sMaxXTranslation $MaxXTranslation;\n\tfloatField -edit -value $sMaxYTranslation $MaxYTranslation;\n\tfloatField -edit -value $sMaxZTranslation $MaxZTranslation;\n\tradioButtonGrp -edit -select $sRandomRotation $RandomRotation;\n\tfloatField -edit -value $sMinXRotation $MinXRotation;\n\tfloatField -edit -value $sMinYRotation $MinYRotation;\n\tfloatField -edit -value $sMinZRotation $MinZRotation;\n\tfloatField -edit -value $sMaxXRotation $MaxXRotation;\n\tfloatField -edit -value $sMaxYRotation $MaxYRotation;\n\tfloatField -edit -value $sMaxZRotation $MaxZRotation;\n\tradioButtonGrp -edit -select $sRandomScale $RandomScale;\n\tfloatField -edit -value $sMinScale $MinScale;\n\tfloatField -edit -value $sMaxScale $MaxScale;\n\tintSliderGrp -edit -value $sAnimationStart $AnimationStart;\n\tfloatSliderGrp -edit -value $sAnimationStartValue $AnimationStartValue;\n\tintSliderGrp -edit -value $sAnimationEnd $AnimationEnd;\n\tfloatSliderGrp -edit -value $sAnimationEndValue $AnimationEndValue;\n\tradioButtonGrp -edit -select $sAnimExtOption $AnimExtOption;\n}\n\n\n// CloseWindow function\n\nproc CloseWindow (string $WindowName)\n{\n\tdeleteUI -window $WindowName;\n}\n\n\n////////////////////////////////\n// Preset save/load functions //\n////////////////////////////////\n\n\n// PresetToFile function\n\n/*\n*.cvsh file specification\nHeader:\n\t\t#HEADER\n\t-Information on file type:\n\t\tCVSH Tool Preset File v1.4 and above\n\t-Information on number of presets\n\t\t#NumberOfPresets\n\t\talways 1\nData structure:\n\t#PresetID\"presetid\"Start\t\tex.: #PresetID0Start, ...\n\t#PresetName\n\t\tex.: Spiralizer247\n\tTwo lines for \t#\"descriptive name\"\n\t\t\t\t\t\"value\"\n\t\tex.:\n\t\t\t#Pitch\n\t\t\t0.5\n\t\t\t...\n\t#PresetID\"presetid\"End\t\tex.: #PresetID0End, ...\n\t\n\tin *.cvsh file the preset id is always 0 (zero)\n*/\n\nproc PresetToFile (string $DNHeader, string $DNFileInformationFile, string $DNNumberOfPresets, \n\t\t\t\t\tstring $DNData, string $DNPresetEntryID, int $ID,\n\t\t\t\t\tstring $DNPresetEntryEnd, string $DNPresetName,\n\t\t\t\t\tstring $DNPresetTailID, string $DNPresetTailEnd,\t\t\t\t\t\n\t\t\t\t\tstring $PathName, string $DNPathName,\n\t\t\t\t\tfloat $RadiusA, string $DNRadiusA,\n\t\t\t\t\tfloat $RadiusB, string $DNRadiusB,\n\t\t\t\t\tint $PointsPerRevolution, string $DNPointsPerRevolution,\n\t\t\t\t\tint $Revolutions, string $DNRevolutions,\n\t\t\t\t\tfloat $Pitch, string $DNPitch,\n\t\t\t\t\tfloat $PitchDelay, string $DNPitchDelay,\n\t\t\t\t\tfloat $SpiralDecrease, string $DNSpiralDecrease,\n\t\t\t\t\tstring $ProfileName, string $DNProfileName,\n\t\t\t\t\tint $ProfileSections, string $DNProfileSections,\n\t\t\t\t\tfloat $ProfileRadius, string $DNProfileRadius,\n\t\t\t\t\tfloat $ExtrusionScale, string $DNExtrusionScale,\n\t\t\t\t\tint $NumberOfDuplicates, string $DNNumberOfDuplicates,\n\t\t\t\t\tint $RotationStyle, string $DNRotationStyle,\n\t\t\t\t\tint $DuplicationStyle, string $DNDuplicationStyle,\n\t\t\t\t\tfloat $DupliScaleFactor, string $DNDupliScaleFactor,\n\t\t\t\t\tint $RandomTranslation, string $DNRandomTranslation,\n\t\t\t\t\tfloat $MinXTranslation, string $DNMinXTranslation,\n\t\t\t\t\tfloat $MaxXTranslation, string $DNMaxXTranslation,\n\t\t\t\t\tfloat $MinYTranslation, string $DNMinYTranslation,\n\t\t\t\t\tfloat $MaxYTranslation, string $DNMaxYTranslation,\n\t\t\t\t\tfloat $MinZTranslation, string $DNMinZTranslation,\n\t\t\t\t\tfloat $MaxZTranslation, string $DNMaxZTranslation,\n\t\t\t\t\tint $RandomRotation, string $DNRandomRotation,\n\t\t\t\t\tfloat $MinXRotation, string $DNMinXRotation,\n\t\t\t\t\tfloat $MaxXRotation, string $DNMaxXRotation,\n\t\t\t\t\tfloat $MinYRotation, string $DNMinYRotation,\n\t\t\t\t\tfloat $MaxYRotation, string $DNMaxYRotation,\n\t\t\t\t\tfloat $MinZRotation, string $DNMinZRotation,\n\t\t\t\t\tfloat $MaxZRotation, string $DNMaxZRotation,\n\t\t\t\t\tint $RandomScale, string $DNRandomScale,\n\t\t\t\t\tfloat $MinScale, string $DNMinScale,\n\t\t\t\t\tfloat $MaxScale, string $DNMaxScale,\n\t\t\t\t\tint $AnimationStart, string $DNAnimationStart,\n\t\t\t\t\tfloat $AnimationStartValue, string $DNAnimationStartValue,\n\t\t\t\t\tint $AnimationEnd, string $DNAnimationEnd,\n\t\t\t\t\tfloat $AnimationEndValue, string $DNAnimationEndValue,\n\t\t\t\t\tint $AnimationCreationStyle, string $DNAnimationCreationStyle)\n{\n\tstring $FileName = `fileDialog -mode 1 -defaultFileName \"Preset\" -directoryMask \"*.cvsh\"`;\n\t\n\tstring $FileNameExtension = \".cvsh\";\n\t\n\t// ID is always zero\n\t$ID = 0;\n\t\n\t// Only one preset per file\n\tstring $NumberOfPresets = \"1\";\n\t\n\t// Check filename whether empty or not\n\t\n\tif (size ($FileName) != 0)\n\t{\n\t\t$FileID = `fopen ($FileName + $FileNameExtension) \"w\"`;\n\t\t\n\t\t// Write header information\n\t\tfprint $FileID ($DNHeader + \"\\n\");\n\t\tfprint $FileID ($DNFileInformationFile + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNNumberOfPresets + \"\\n\");\n\t\tfprint $FileID ($NumberOfPresets + \"\\n\");\n\t\t\n\t\t// Write data information\n\t\tfprint $FileID ($DNData + \"\\n\");\n\t\tfprint $FileID ($DNPresetEntryID + $ID + $DNPresetEntryEnd + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNPresetName + \"\\n\");\n\t\tfprint $FileID ($FileName + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNPathName + \"\\n\");\n\t\tfprint $FileID ($PathName + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNRadiusA + \"\\n\");\n\t\tfprint $FileID ($RadiusA + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNRadiusB + \"\\n\");\n\t\tfprint $FileID ($RadiusB + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNPointsPerRevolution + \"\\n\");\n\t\tfprint $FileID ($PointsPerRevolution + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNRevolutions + \"\\n\");\n\t\tfprint $FileID ($Revolutions + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNPitch + \"\\n\");\n\t\tfprint $FileID ($Pitch + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNPitchDelay + \"\\n\");\n\t\tfprint $FileID ($PitchDelay + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNSpiralDecrease + \"\\n\");\n\t\tfprint $FileID ($SpiralDecrease + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNProfileName + \"\\n\");\n\t\tfprint $FileID ($ProfileName + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNProfileSections + \"\\n\");\n\t\tfprint $FileID ($ProfileSections + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNProfileRadius + \"\\n\");\n\t\tfprint $FileID ($ProfileRadius + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNExtrusionScale + \"\\n\");\n\t\tfprint $FileID ($ExtrusionScale + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNNumberOfDuplicates + \"\\n\");\n\t\tfprint $FileID ($NumberOfDuplicates + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNRotationStyle + \"\\n\");\n\t\tfprint $FileID ($RotationStyle + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNDuplicationStyle + \"\\n\");\n\t\tfprint $FileID ($DuplicationStyle + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNDupliScaleFactor + \"\\n\");\n\t\tfprint $FileID ($DupliScaleFactor + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNRandomTranslation + \"\\n\");\n\t\tfprint $FileID ($RandomTranslation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMinXTranslation + \"\\n\");\n\t\tfprint $FileID ($MinXTranslation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMaxXTranslation + \"\\n\");\n\t\tfprint $FileID ($MaxXTranslation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMinYTranslation + \"\\n\");\n\t\tfprint $FileID ($MinYTranslation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMaxYTranslation + \"\\n\");\n\t\tfprint $FileID ($MaxYTranslation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMinZTranslation + \"\\n\");\n\t\tfprint $FileID ($MinZTranslation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMaxZTranslation + \"\\n\");\n\t\tfprint $FileID ($MaxZTranslation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNRandomRotation + \"\\n\");\n\t\tfprint $FileID ($RandomRotation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMinXRotation + \"\\n\");\n\t\tfprint $FileID ($MinXRotation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMaxXRotation + \"\\n\");\n\t\tfprint $FileID ($MaxXRotation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMinYRotation + \"\\n\");\n\t\tfprint $FileID ($MinYRotation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMaxYRotation + \"\\n\");\n\t\tfprint $FileID ($MaxYRotation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMinZRotation + \"\\n\");\n\t\tfprint $FileID ($MinZRotation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMaxZRotation + \"\\n\");\n\t\tfprint $FileID ($MaxZRotation + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNRandomScale + \"\\n\");\n\t\tfprint $FileID ($RandomScale + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMinScale + \"\\n\");\n\t\tfprint $FileID ($MinScale + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNMaxScale + \"\\n\");\n\t\tfprint $FileID ($MaxScale + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNAnimationStart + \"\\n\");\n\t\tfprint $FileID ($AnimationStart + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNAnimationStartValue + \"\\n\");\n\t\tfprint $FileID ($AnimationStartValue + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNAnimationEnd + \"\\n\");\n\t\tfprint $FileID ($AnimationEnd + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNAnimationEndValue + \"\\n\");\n\t\tfprint $FileID ($AnimationEndValue + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNAnimationCreationStyle + \"\\n\");\n\t\tfprint $FileID ($AnimationCreationStyle + \"\\n\");\n\t\t\n\t\tfprint $FileID ($DNPresetTailID + $ID + $DNPresetTailEnd + \"\\n\");\n\t\t\n\t\t// Close file\n\t\tfclose $FileID;\n\t\t\n\t\tprint (\"File saved to: \" + $FileName + $FileNameExtension + \"\\n\");\n\t}\n\t\n\telse\n\t{\n\t\tprint (\"Saving aborted. File not saved\" + \"\\n\");\n\t}\n}\n\n\n// ReadPresetFile function\n\nproc ReadPresetFile (string $PathName,\n\t\t\t\t\t\tstring $RadiusA,\n\t\t\t\t\t\tstring $RadiusB,\n\t\t\t\t\t\tstring $PointsPerRevolution,\n\t\t\t\t\t\tstring $Revolutions,\n\t\t\t\t\t\tstring $RevolutionDistance,\n\t\t\t\t\t\tstring $DecRevolution,\n\t\t\t\t\t\tstring $SpiralDecrease)\n{\n\tstring $FileName = `fileDialog -mode 0 -directoryMask \"*.cvsh\"`;\n\t\n\tstring $FileNameExtension = \".cvsh\";\n\t\n\t// string $HeaderCheck = \"CVSH Tool File\";\n\t\n\t$FileID = `fopen ($FileName) \"r\"`;\n\t\n\t// Saves all information line by line in an array\n\tstring $FileContent [] = {};\n\t\n\t// Iterator for content array\n\tint $Iterator = 0;\n\t\n\t// Get first line\n\tstring $NextLine = `fgetline $FileID`;\n\t\n\t// First line = header information\n\t\n\t// Loop until the end of file and read line by line and save it in array\n\twhile (size ($NextLine) > 0)\n\t{\n\t\t// Cap whitespaces\n\t\tstring $StrippedLine = strip($NextLine);\n\t\t\n\t\t// Save line in array field\n\t\t$FileContent [$Iterator] = $NextLine;\n\t\t\n\t\t// Raise iterator by one to go in next field in array\n\t\t++$Iterator;\n\t\t\n\t\t// Get next line\n\t\t$NextLine = `fgetline $FileID`;\n\t}\n\t\n\t/*\n\t// Check header(first line must be: \"\"CVSH Tool File\"\"):\n\tif ($HeaderCheck == $FileContent [0])\n\t{\n\t\tprint (\"It is a cvsh file\");\n\t}\n\t\n\telse\n\t{\n\t\t// Load a new one\n\t}\n\t*/\n\t\n\t// Convert content to respective values(int's, float's)\n\tstring $TempPathName = $FileContent [1];\n\tfloat $TempRadiusA = $FileContent [2];\n\tfloat $TempRadiusB = $FileContent [3];\n\tint $TempPointsPerRevolution = $FileContent [4];\n\tint $TempRevolutions = $FileContent [5];\n\tfloat $TempRevolutionDistance = $FileContent [6];\n\tfloat $TempDecRevolution = $FileContent [7];\n\tfloat $TempSpiralDecrease = $FileContent [8];\n\t\n\t// Set loaded values\n\ttextFieldGrp -edit -text $TempPathName $PathName;\n\tfloatSliderGrp -edit -value $TempRadiusA $RadiusA;\n\tfloatSliderGrp -edit -value $TempRadiusB $RadiusB;\n\tintSliderGrp -edit -value $TempPointsPerRevolution $PointsPerRevolution;\n\tintSliderGrp -edit -value $TempRevolutions $Revolutions;\n\tfloatSliderGrp -edit -value $TempRevolutionDistance $RevolutionDistance;\n\tfloatSliderGrp -edit -value $TempDecRevolution $DecRevolution;\n\tfloatSliderGrp -edit -value $TempSpiralDecrease $SpiralDecrease;\n\t\n\t// Close file\n\tfclose $FileID;\n}\n\n\n// LoadPresetFromFile function\n\n/*\n*.cvsh file specification\nHeader:\n\t\t#HEADER\n\t-Information on file type:\n\t\tCVSH Tool Preset File v1.4 and above\n\t-Information on number of presets\n\t\t#NumberOfPresets\n\t\talways 1\nData structure:\n\t#PresetID\"presetid\"Start\t\tex.: #PresetID0Start, ...\n\t#PresetName\n\t\tex.: Spiralizer247\n\tTwo lines for \t#\"descriptive name\"\n\t\t\t\t\t\"value\"\n\t\tex.:\n\t\t\t#Pitch\n\t\t\t0.5\n\t\t\t...\n\t#PresetID\"presetid\"End\t\tex.: #PresetID0End, ...\n\t\n\tin *.cvsh file the preset id is always 0 (zero)\n*/\n\nproc LoadPresetFromFile (string $DNHeader, string $DNFileInformationFile, string $DNNumberOfPresets, \n\t\t\t\t\t\t\tstring $DNData, string $DNPresetEntryID, int $ID,\n\t\t\t\t\t\t\tstring $DNPresetEntryEnd, string $DNPresetName,\n\t\t\t\t\t\t\tstring $DNPresetTailID, string $DNPresetTailEnd,\n\t\t\t\t\t\t\tstring $PathName, string $DNPathName,\n\t\t\t\t\t\t\tstring $RadiusA, string $DNRadiusA,\n\t\t\t\t\t\t\tstring $RadiusB, string $DNRadiusB,\n\t\t\t\t\t\t\tstring $PointsPerRevolution, string $DNPointsPerRevolution,\n\t\t\t\t\t\t\tstring $Revolutions, string $DNRevolutions,\n\t\t\t\t\t\t\tstring $Pitch, string $DNPitch,\n\t\t\t\t\t\t\tstring $PitchDelay, string $DNPitchDelay,\n\t\t\t\t\t\t\tstring $SpiralDecrease, string $DNSpiralDecrease,\n\t\t\t\t\t\t\tstring $ProfileName, string $DNProfileName,\n\t\t\t\t\t\t\tstring $ProfileSections, string $DNProfileSections,\n\t\t\t\t\t\t\tstring $ProfileRadius, string $DNProfileRadius,\n\t\t\t\t\t\t\tstring $ExtrusionScale, string $DNExtrusionScale,\n\t\t\t\t\t\t\tstring $NumberOfDuplicates, string $DNNumberOfDuplicates,\n\t\t\t\t\t\t\tstring $RotationStyle, string $DNRotationStyle,\n\t\t\t\t\t\t\tstring $DuplicationStyle, string $DNDuplicationStyle,\n\t\t\t\t\t\t\tstring $DupliScaleFactor, string $DNDupliScaleFactor,\n\t\t\t\t\t\t\tstring $RandomTranslation, string $DNRandomTranslation,\n\t\t\t\t\t\t\tstring $MinXTranslation, string $DNMinXTranslation,\n\t\t\t\t\t\t\tstring $MaxXTranslation, string $DNMaxXTranslation,\n\t\t\t\t\t\t\tstring $MinYTranslation, string $DNMinYTranslation,\n\t\t\t\t\t\t\tstring $MaxYTranslation, string $DNMaxYTranslation,\n\t\t\t\t\t\t\tstring $MinZTranslation, string $DNMinZTranslation,\n\t\t\t\t\t\t\tstring $MaxZTranslation, string $DNMaxZTranslation,\n\t\t\t\t\t\t\tstring $RandomRotation, string $DNRandomRotation,\n\t\t\t\t\t\t\tstring $MinXRotation, string $DNMinXRotation,\n\t\t\t\t\t\t\tstring $MaxXRotation, string $DNMaxXRotation,\n\t\t\t\t\t\t\tstring $MinYRotation, string $DNMinYRotation,\n\t\t\t\t\t\t\tstring $MaxYRotation, string $DNMaxYRotation,\n\t\t\t\t\t\t\tstring $MinZRotation, string $DNMinZRotation,\n\t\t\t\t\t\t\tstring $MaxZRotation, string $DNMaxZRotation,\n\t\t\t\t\t\t\tstring $RandomScale, string $DNRandomScale,\n\t\t\t\t\t\t\tstring $MinScale, string $DNMinScale,\n\t\t\t\t\t\t\tstring $MaxScale, string $DNMaxScale,\n\t\t\t\t\t\t\tstring $AnimationStart, string $DNAnimationStart,\n\t\t\t\t\t\t\tstring $AnimationStartValue, string $DNAnimationStartValue,\n\t\t\t\t\t\t\tstring $AnimationEnd, string $DNAnimationEnd,\n\t\t\t\t\t\t\tstring $AnimationEndValue, string $DNAnimationEndValue,\n\t\t\t\t\t\t\tstring $AnimationCreationStyle, string $DNAnimationCreationStyle)\n{\t\n\t// Open file for reading\n\tstring $FileName = `fileDialog -mode 0 -directoryMask \"*.cvsh\"`;\n\t\n\t$FileID = `fopen ($FileName) \"r\"`;\n\t\n\t// ID is always zero\n\t$ID = 0;\n\t\n\t// Entry point for preset\n\tstring $DNPresetEntry = $DNPresetEntryID + $ID + $DNPresetEntryEnd;\n\t\n\t// End point for preset\n\tstring $DNPresetEnd = $DNPresetTailID + $ID + $DNPresetTailEnd;\n\t\n\t// Something went wrong\n\tif($FileID == 0)\n\t{\n\t\t// Close File\n\t\tfclose $FileID;\n\t\terror (\"Load Preset From File: Error opening it.\");\n\t}\n\t\n\t// Opening file was successful\n\telse\n\t{\n\t\t// Get first line\n\t\tstring $NextLine = `fgetline $FileID`;\n\t\t\n\t\t// Save File in string array line by line\n\t\t\n\t\tint $PresetFileArraySize = 0;\t// Not known at this time\n\t\tstring $PresetFileContent [] = {};\n\t\tint $FileIterator = 0;\n\t\t\n\t\t// Go file line by line and savve each line in one field\n\t\twhile (size ($NextLine) > 0)\n\t\t{\n\t\t\t// Cap whitespaces\n\t\t\tstring $StrippedLine = strip($NextLine);\n\t\t\t\n\t\t\t// Remove CR\n\t\t\tstring $NoRCLine = `match \"^[^(\\r\\n)]*\" $StrippedLine`;\n\t\t\t\n\t\t\t// Save line in array field\n\t\t\t$PresetFileContent [$FileIterator] = $NoRCLine;\n\t\t\t\n\t\t\t// Raise iterator by one to go in next field in array\n\t\t\t++$FileIterator;\n\t\t\t\n\t\t\t// Get next line\n\t\t\t$NextLine = `fgetline $FileID`;\n\t\t}\n\t\t\n\t\t// Close file\n\t\tfclose $FileID;\n\t\t\n\t\t// Get actual size of array\n\t\t$PresetFileArraySize = size ($PresetFileContent);\n\t\t\n\t\t// Print filecontent for control purpose only\n\t\t// PrintStringArray ($PresetFileContent);\n\t\t\n\t\t\n\t\tint $ArrayIterator = 0;\n\t\t\n\t\tint $HeaderCheckSum = 0;\n\t\t\n\t\t// Extract/Check Header information\n\t\t// Go field by field until reached the Data section\n\t\twhile ($PresetFileContent [$ArrayIterator] != $DNData)\n\t\t{\n\t\t\t// First line: \"#HEADER\"\n\t\t\tif (($PresetFileContent [$ArrayIterator] == $DNHeader))\n\t\t\t{\n\t\t\t\tprint (\"Load Preset From File: Found header statement.\" + \"\\n\");\n\t\t\t\t$HeaderCheckSum += 1;\n\t\t\t}\n\t\t\t\n\t\t\t// Second line: \"CVSH Tool Preset File v1.4 and above\"\n\t\t\tif (($PresetFileContent [$ArrayIterator] == $DNFileInformationFile))\n\t\t\t{\n\t\t\t\tprint (\"Load Preset From File: Found header information.\" + \"\\n\");\n\t\t\t\t$HeaderCheckSum += 1;\n\t\t\t}\n\t\t\t\n\t\t\t// Third line: \"#NumberOfPresets\"\n\t\t\tif (($PresetFileContent [$ArrayIterator] == $DNNumberOfPresets))\n\t\t\t{\n\t\t\t\t// Fourth line: the number of presets have to be 1\n\t\t\t\tif (($PresetFileContent [$ArrayIterator + 1] == \"1\"))\n\t\t\t\t{\n\t\t\t\t\tprint (\"Load Preset From File: Number of presets is 1.\" + \"\\n\");\n\t\t\t\t\t$HeaderCheckSum += 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tprint (\"Load Preset From File: Found number of presets information.\" + \"\\n\");\n\t\t\t\t$HeaderCheckSum += 1;\n\t\t\t}\n\t\t\t\n\t\t\t// Go to next field\n\t\t\t++$ArrayIterator;\n\t\t}\n\t\t\n\t\t// Check the Header Check Sum\n\t\tif ($HeaderCheckSum < 4)\n\t\t{\n\t\t\terror (\"Load Preset From File: Header is not correct.\" + \"\\n\");\n\t\t}\n\t\t\n\t\t// Header is correct\n\t\tprint (\"Load Preset From File: Header is correct.\" + \"\\n\");\n\t\t\n\t\t// $ArrayIterator is now \"#DATA\"\t\t\n\t\t\n\t\t// Variable for preset entry point\n\t\tint $PresetExists = 0;\n\t\t\n\t\t// Search for preset entry point\n\t\t// Loop until the end of array\n\t\twhile ($PresetFileContent [$ArrayIterator - 1] != $DNPresetEntry)\n\t\t{\n\t\t\t// Found preset\n\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNPresetEntry)\n\t\t\t{\n\t\t\t\tprint (\"Load Preset From File: A preset exists.\" + \"\\n\");\n\t\t\t\t$PresetExists = 1;\n\t\t\t}\n\t\t\t\n\t\t\t++$ArrayIterator;\n\t\t}\n\t\t\n\t\t// Preset does not exist >> error\n\t\tif($PresetExists == 0)\n\t\t{\n\t\t\terror (\"Load Preset From File: A preset does not exist.\" + \"\\n\");\n\t\t}\n\n\t\t// Preset Exists\n\t\telse\n\t\t{\t\t\n\t\t\t// Get field by field until reaching end of array\n\t\t\twhile ($PresetFileContent [$ArrayIterator - 1] != $DNPresetEnd)\n\t\t\t{\n\t\t\t\t// Try every line and write data directly in gui elements\n\t\t\t\t\n\t\t\t\t// Change PathName\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNPathName)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tstring $TempPathName = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\ttextFieldGrp -edit -text $TempPathName $PathName;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change RadiusA\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNRadiusA)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempRadiusA = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempRadiusA $RadiusA;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change RadiusB\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNRadiusB)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempRadiusB = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempRadiusB $RadiusB;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change PointsPerRevolution\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNPointsPerRevolution)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempPointsPerRevolution = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tintSliderGrp -edit -value $TempPointsPerRevolution $PointsPerRevolution;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change Revolutions\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNRevolutions)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempRevolutions = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tintSliderGrp -edit -value $TempRevolutions $Revolutions;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change Pitch\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNPitch)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempPitch = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempPitch $Pitch;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change PitchDelay\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNPitchDelay)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempPitchDelay = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempPitchDelay $PitchDelay;\n\t\t\t\t}\n\n\t\t\t\t// Change SpiralDecrease\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNSpiralDecrease)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempSpiralDecrease = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempSpiralDecrease $SpiralDecrease;\n\t\t\t\t}\n\n\t\t\t\t// Change ProfileName\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNProfileName)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tstring $TempProfileName = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\ttextFieldGrp -edit -text $TempProfileName $ProfileName;\n\t\t\t\t}\n\n\t\t\t\t// Change ProfileSections\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNProfileSections)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempProfileSections = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tintSliderGrp -edit -value $TempProfileSections $ProfileSections;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change ProfileRadius\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNProfileRadius)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempProfileRadius = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempProfileRadius $ProfileRadius;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change ExtrusionScale\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNExtrusionScale)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempExtrusionScale = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempExtrusionScale $ExtrusionScale;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change NumberOfDuplicates\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNNumberOfDuplicates)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempNumberOfDuplicates = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tintSliderGrp -edit -value $TempNumberOfDuplicates $NumberOfDuplicates;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change RotationStyle\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNRotationStyle)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempRotationStyle = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tradioButtonGrp -edit -select $TempRotationStyle $RotationStyle;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change DuplicationStyle\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNDuplicationStyle)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempDuplicationStyle = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tradioButtonGrp -edit -select $TempDuplicationStyle $DuplicationStyle;\n\t\t\t\t}\n\n\t\t\t\t// Change DupliScaleFactor\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNDupliScaleFactor)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempDupliScaleFactor = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempDupliScaleFactor $DupliScaleFactor;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change RandomTranslation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNRandomTranslation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempRandomTranslation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tradioButtonGrp -edit -select $TempRandomTranslation $RandomTranslation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MinXTranslation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMinXTranslation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMinXTranslation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMinXTranslation $MinXTranslation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MaxXTranslation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMaxXTranslation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMaxXTranslation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMaxXTranslation $MaxXTranslation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MinYTranslation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMinYTranslation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMinYTranslation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMinYTranslation $MinYTranslation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MaxYTranslation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMaxYTranslation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMaxYTranslation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMaxYTranslation $MaxYTranslation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MinZTranslation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMinZTranslation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMinZTranslation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMinZTranslation $MinZTranslation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MaxZTranslation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMaxZTranslation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMaxZTranslation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMaxZTranslation $MaxZTranslation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change RandomRotation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNRandomRotation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempRandomRotation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tradioButtonGrp -edit -select $TempRandomRotation $RandomRotation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MinXRotation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMinXRotation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMinXRotation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMinXRotation $MinXRotation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MaxXRotation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMaxXRotation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMaxXRotation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMaxXRotation $MaxXRotation;\n\t\t\t\t}\n\n\t\t\t\t// Change MinYRotation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMinYRotation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMinYRotation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMinYRotation $MinYRotation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MaxYRotation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMaxYRotation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMaxYRotation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMaxYRotation $MaxYRotation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MinZRotation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMinZRotation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMinZRotation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMinZRotation $MinZRotation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MaxZRotation\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMaxZRotation)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMaxZRotation = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMaxZRotation $MaxZRotation;\n\t\t\t\t}\n\n\t\t\t\t// Change RandomScale\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNRandomScale)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempRandomScale = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tradioButtonGrp -edit -select $TempRandomScale $RandomScale;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MinScale\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMinScale)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMinScale = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMinScale $MinScale;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change MaxScale\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNMaxScale)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempMaxScale = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatField -edit -value $TempMaxScale $MaxScale;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change AnimationStart\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNAnimationStart)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempAnimationStart = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tintSliderGrp -edit -value $TempAnimationStart $AnimationStart;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change AnimationStartValue\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNAnimationStartValue)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempAnimationStartValue = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempAnimationStartValue $AnimationStartValue;\n\t\t\t\t}\n\n\t\t\t\t// Change AnimationEnd\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNAnimationEnd)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempAnimationEnd = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tintSliderGrp -edit -value $TempAnimationEnd $AnimationEnd;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change AnimationEndValue\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNAnimationEndValue)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tfloat $TempAnimationEndValue = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tfloatSliderGrp -edit -value $TempAnimationEndValue $AnimationEndValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Change AnimationCreationStyle\n\t\t\t\tif ($PresetFileContent [$ArrayIterator] == $DNAnimationCreationStyle)\n\t\t\t\t{\n\t\t\t\t\t// Get next field\n\t\t\t\t\t++$ArrayIterator;\n\t\t\t\t\tint $TempAnimationCreationStyle = $PresetFileContent [$ArrayIterator];\n\t\t\t\t\tradioButtonGrp -edit -select $TempAnimationCreationStyle $AnimationCreationStyle;\n\t\t\t\t}\n\n\t\t\t\t// Get next field\n\t\t\t\t++$ArrayIterator;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/* Bank file operations\n\n\tFunctionality:\n\t1. Open the exact file: \"CVSHPresetBank.cvshpb\", test file extension on \"cvshpb\" and #FileInformation\n\t3. Get line by line and check for id string ex.: #PresetID1Start\n\t4. read line by line and check in a loop for descriptive name if that name is found go to next line and copy value and change that value directly\n\t5. loop number 4 until the end of that preset represented by #PresetID\"presetid\"End\n\n\t\tCheck header in cvshpb files\n\t\t\t// Third line: \"#NumberOfPresets\"\n\t\t\tif (($LineIterator == 3) && ($NextLine != $DNNumberOfPresets))\n\t\t\t{\n\t\t\t\terror (\"Read Preset Bank: Couldn't find number of presets information.\");\n\t\t\t}\n\t\t\t\n\t\t\t// Fourth line: the number of presets must be bigger than 0\n\t\t\tif (($LineIterator == 4) && ($NextLine == \"0\"))\n\t\t\t{\n\t\t\t\tint $Presets = $NextLine;\n\t\t\t\tif($Presets <= 0)\n\t\t\t\t{\n\t\t\t\t\terror (\"Read Preset Bank: Number of presets is zero or an invalid number(negative).\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\n\t\tCheck correct preset id in cvshpb files\n\t\t// 0 preset does not exist / everything else preset exists\n\t\tint $FoundPreset = 0;\n\t\t\n\t\t// Search for preset id\n\t\t// Loop until the end of file(couldn't find any named preset) and try finding the preset\n\t\twhile ((size ($NextLine) > 0) || ($NextLine == $DNPresetEntry))\n\t\t{\n\t\t\t// Found preset\n\t\t\tif ($NextLine == $DNPresetEntry)\n\t\t\t{\n\t\t\t\tprint (\"Read Preset Bank: Preset exists.\" + \"\\n\");\n\t\t\t\t$FoundPreset = 1;\n\t\t\t}\n\t\t\t\n\t\t\t// Get next line\n\t\t\t$NextLine = `fgetline $FileID`;\n\t\t}\n\t\t\n\t\t// Prest does not exist >> close file\n\t\tif($FoundPreset == 0)\n\t\t{\n\t\t\t// Close file\n\t\t\tfclose $FileID;\n\t\t}\n*/\n\n\n//////////////////////\n// Preset functions //\n//////////////////////\n\n\n// FlatSpiralPreset function\n\nproc FlatSpiralPreset (string $RadiusA, string $RadiusB, string $PointsPerRevolution, string $Revolutions, string $Pitch, string $PitchDelay, string $SpiralDecrease)\n{\n\tfloatSliderGrp -edit -value 1.000 $RadiusA;\n\tfloatSliderGrp -edit -value 1.000 $RadiusB;\n\tintSliderGrp -edit -value 10 $PointsPerRevolution;\n\tintSliderGrp -edit -value 8 $Revolutions;\n\tfloatSliderGrp -edit -value 0.000 $Pitch;\n\tfloatSliderGrp -edit -value 0.000000 $PitchDelay;\n\tfloatSliderGrp -edit -value 0.900 $SpiralDecrease;\n\n}\n\n\n// ArtSpiralPreset function\n\nproc ArtSpiralPreset (string $RadiusA, string $RadiusB, string $PointsPerRevolution, string $Revolutions, string $Pitch, string $PitchDelay, string $SpiralDecrease)\n{\n\tfloatSliderGrp -edit -value 1.000 $RadiusA;\n\tfloatSliderGrp -edit -value 1.000 $RadiusB;\n\tintSliderGrp -edit -value 10 $PointsPerRevolution;\n\tintSliderGrp -edit -value 10 $Revolutions;\n\tfloatSliderGrp -edit -value 0.500 $Pitch;\n\tfloatSliderGrp -edit -value 0.000000 $PitchDelay;\n\tfloatSliderGrp -edit -value 2.000 $SpiralDecrease;\n}\n\n\n///////////////////////////\n// Script info functions //\n///////////////////////////\n\n// CreationExplanation function\n\nproc CreationExplanation ()\n{\n\tstring $ExplanationText = \n\t\t\t\t\t\t\t\"Creation Tab Settings:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"1. Name:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"You can set a new name for the path or leave the given name in the Textbox.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"If you use the same name multiple times maya will increase the number automatically.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"2. Radius:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"For circular style Spiral/Helix curve Radius A and Radius B have to be equal.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"For faster Workflow you just have to type your desired number in Radius A and push the button Set Radius Equal.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"For elliptic style Radius A and Radius B should have different values.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"3. Points Per Revolution:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Here you can define the number of created points in one single revolution.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Total points in path curve:  Points Per Revolutions * Revolutions\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"4. Revolutions:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"This is the number of rotations around the origin(0,0,0).\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"5. Pitch:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"This is the distance from the start point to the endpoint of one revolution.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Total path curve height:  Revolution Distance * Revolutions\" + \"\\n\" +\"\\n\" +\n\t\t\t\t\t\t\t\"6. Pitch Delay:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"This value decreases the Pitch for every completed revolution.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"For good results use (very) small values.\" + \"\\n\" +\"\\n\" +\n\t\t\t\t\t\t\t\"7. Spiral Decrease:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"It is the decrease in the radius for one revolution.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"The Radius is decreased by this value for a 360 degrees rotation.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"For normal results use a maximum decrease value of the smallest radius value in any direction.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Otherwise it will change the X - Z - directions of the elliptic curve(but resulting in nice artistic curves).\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Presets in the menu will add just values, so it can be changed easily.\";\n\n\tconfirmDialog\n\t\t-title \"Creation Explanation\"\n\t\t-messageAlign \"left\"\n\t\t-message $ExplanationText\n\t\t-button \"Close\";\n}\n\n\n// ExtrusionExplanation function\n\nproc ExtrusionExplanation ()\n{\n\tstring $ExplanationText = \n\t\t\t\t\t\t\t\"Extrusion Tab Settings:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"1. Name:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"You can set a new name for the profile or leave the given name in the Textbox.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"If you use the same name multiple times maya will increase the number automatically.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"2. Profile Sections:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Here you can set the number of points in the circle.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"3. Profile Radius:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Determine the radius of the circle profile.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"4. Extrusion Scale(Taper):\" + \"\\n\" +\n\t\t\t\t\t\t\t\"The scale factor determines the decrease or increase of the radius of the profile along the path.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Some hints for extruding a profile along a path curve:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"1. In version v1.4 just curve types are allowed for extrusion.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"2. The result of the extrusion is centered at the profile curve.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"3. Select the profile first and then the path ;D.\";\n\n\tconfirmDialog\n\t\t-title \"Extrusion Explanation\"\n\t\t-messageAlign \"left\"\n\t\t-message $ExplanationText\n\t\t-button \"Close\";\n}\n\n\n// DuplicationExplanation function\n\nproc DuplicationExplanation ()\n{\n\tstring $ExplanationText = \n\t\t\t\t\t\t\t\"Duplication Tab Settings:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"1. Duplicates Per Revolution:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"This number stands for how many objects are in ONE revolution.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"2. Rotation Style:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"This is how the objects are duplicated along the Spiral/Helix.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Preserve Rotation: No rotation is applied to the objects that are duplicated.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Apply Rotation: This will add a rotation to the object according to the degree the object has on the Spiral/Helix.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"To control the Spiral/Helix path for the objects to duplicate, the settings from Creation Tab are relevant:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Please have a look at Creation Explanation to find further information about these settings.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"3. DuplicationStyle:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Decide which method to use for the copied object(s).\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"4. Uniform Scale Factor:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"This applies a taper effect to the duplicated objects.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"It is a factor (it is multiplied for every object), so it is useful to choose a value near to 1.0(for example 0.96).\" + \"\\n\" +\n\t\t\t\t\t\t\t\"(Values bigger than one scales it up. Values smaller than one sclaes it down)\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"5. Random Translation:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"By enabling the random translation all duplicated get additional translation values that are random based.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"You can define minimum and maximum values for each direction. Random values are just between those values.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"6. Random Rotation:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"The Same as Random Translation, but just with the rotation.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Values are in degree.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"7. Random Scale:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"A uniform(in all directions) random scale is applied to the duplicated objects in the given range.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"Settings that are relevant are:\" + \"\\n\" +\n\t\t\t\t\t\t\t\" - Radius A\" + \"\\n\" +\n\t\t\t\t\t\t\t\" - Radius B\" + \"\\n\" +\n\t\t\t\t\t\t\t\" - Revolutions\" + \"\\n\" +\n\t\t\t\t\t\t\t\" - Revolution Distance\" + \"\\n\" +\n\t\t\t\t\t\t\t\" - Revolution Distance Decrease\" + \"\\n\" +\n\t\t\t\t\t\t\t\" - Spiral Decrease\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"VERY IMPORTANT: Just selected objects (all types of objects) are gonna duplicated.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"The selected object(s) is(are) grouped for each point on the Spiral / Helix and all groups are grouped together.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"The position of the object(s) is(are) important, because the center of the object(s) is(are) the center of\" + \"\\n\" +\n\t\t\t\t\t\t\t\"the Spiral / Helix. (The Object(s) is(are) just moved)\";\n\tconfirmDialog\n\t\t-title \"Duplication Explanation\"\n\t\t-messageAlign \"left\"\n\t\t-message $ExplanationText\n\t\t-button \"Close\";\n}\n\n\n// AnimationExplanation function\n\nproc AnimationExplanation ()\n{\n\tstring $ExplanationText = \n\t\t\t\t\t\t\t\"Animation Tab Settings:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"1.Start Frame:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"This is the start frame of the animation.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"2. Start Value:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"The value(position) that the curve extrusion has on the curve at the first frame.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"3. End Frame:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"The last frame of the animation.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"4. End Value:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"The value(position) that the curve extrusion has on the curve at the last frame.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"5. Animation Creation Style:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"- With Extrusion:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   You just have to select a path on which the extrusion will be animated.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   ALL settings from the extrusion tab are relevant.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   You do not have to create an extra profile for the extrusion. The script create that automatically.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"- Without Extrusion:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   This option creates JUST an animated curve without any extrusions.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   You just have to select a path that is used for the animated curve.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   This Option gives you the posibility to create that extrusion by yourself.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   By just creating a profile and then extrude that profile along the animated curve.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\t\"IMPORTANT:\" + \"\\n\" +\n\t\t\t\t\t\t\t\"1. In version 1.4 animation works just for extrusions. Animation for duplicated objects will come in future releases.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"2. For proper animation of the extrusion don't move the automtically created profile, this would lead to strange results.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   The profile should always be in the center of the first point of the path curve.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"3. When you have created the animation and go to the start frame of your animation there appears an error.\" + \"\\n\" +\n\t\t\t\t\t\t\t\"   The error says that the result could not be calculated, but it should work though.\";\n\tconfirmDialog\n\t\t-title \"Animation Explanation\"\n\t\t-messageAlign \"left\"\n\t\t-message $ExplanationText\n\t\t-button \"Close\";\n}\n\n\n// ShowInfo function\n\nproc ShowInfo ()\n{\n\tstring $InfoText = \"The \" + \"\\`\" + \"CVSH_Tool.mel\" + \"\\`\" + \" script let you create Spiral \" + \"\\/\" + \" Helix nurbs curves with several settings.\" + \"\\n\" +\n\t\t\t\t\t\t\"In addition, it can create extrusions along the Spiral \" + \"\\/\" + \" Helix nurbs curves, create duplications along them and animate extrusions.\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\"Author: Ricardo M?nch\" + \"\\n\" +\n\t\t\t\t\t\t\"Version: v1.4\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\"For more information/comments/questions/new ideas or features send me an e-mail to:\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\"N i n r m s @ g m x . n e t\" + \"\\n\" + \"\\n\" +\n\t\t\t\t\t\t\"Have FUN with this little tool.^^\" + \"\\n\" +\n\t\t\t\t\t\t\"(Sorry for my english it is not my native language.)\";\n\t\n\tconfirmDialog\n\t\t-title \"Info\"\n\t\t-messageAlign \"left\"\n\t\t-message $InfoText\n\t\t-button \"Close\";\n}\n\n\n//////////////\n// CVSH GUI //\n//////////////\n\n// Framelayout color variables\nfloat $FLR = 0.4; float $FLG = 0.4; float $FLB = 0.4;\n\n// Layout color variables\nfloat $LR = 0.84; float $LG = 0.84; float $LB = 0.84;\n\n// Button color variables\nfloat $BR = 1.0; float $BG = 0.744; float $BB = 0.323;\t// Yellow - orange\n\n\t// Alternative color set for buttons\n\t// float $BR = 0.77; float $BG = 0.75; float $BB = 0.87;\t// Violet\n\t// float $BR = 0.564; float $BG = 0.815; float $BB = 0.860;\t// Blue\n\n// Window name\nstring $CVSHWindow = \"CVSHMainWindow\";\n\n// Window title\nstring $CVSHTitle = \"CV Spiral & Helix Creation Tool\";\n\n// Window width\nint $WindowWidth = 432;\n\n// Window height\nint $WindowHeight = 408;\n\n\n// Tests if window already exists\nif (`window -exists $CVSHWindow`)\n{\n\t// Window exists so delete window\n\tdeleteUI -window $CVSHWindow;\n}\n\n\n// IMPORTANT\n// If you get an error \"object not found\" then delete the following lines:\n\n// Delete all stored window data(name, size, position, ...)\nif (`windowPref -exists $CVSHWindow` == true)\n{\n\twindowPref -remove $CVSHWindow;\n}\n\n\n// Create window\n\nwindow\n\t-title $CVSHTitle\n\t-menuBar true\n\t-menuBarVisible true\n\t-minimizeButton true\n\t-maximizeButton true\n\t-sizeable true\n\t-width $WindowWidth\n\t-height $WindowHeight\n\t-visible false\n\t-titleBar true\n\t-backgroundColor $LR $LG $LB\n\t$CVSHWindow;\n\n// Menu\n\nmenu -label \"Edit\";\n\n\tmenuItem -label \"Reset\" -command (\"Reset ($PathNameTextField, $sPathName, \" +\n\t\t\t\t\t\t\t\t\t\t\"$RadiusAFloatSlider, $sRadiusA, \" +\n\t\t\t\t\t\t\t\t\t\t\"$RadiusBFloatSlider, $sRadiusB, \" +\n\t\t\t\t\t\t\t\t\t\t\"$PointsPerRevolutionIntSlider, $sPointsPerRevolution, \" +\n\t\t\t\t\t\t\t\t\t\t\"$RevolutionsIntSlider, $sRevolutions, \" +\n\t\t\t\t\t\t\t\t\t\t\"$PitchFloatSlider, $sPitch, \" +\n\t\t\t\t\t\t\t\t\t\t\"$PitchDelayFloatSlider, $sPitchDelay, \" +\n\t\t\t\t\t\t\t\t\t\t\"$SpiralDecreaseFloatSlider, $sSpiralDecrease, \" +\n\t\t\t\t\t\t\t\t\t\t\"$CalculateHeightButton, $sCalculateHeightButtonLabel, \" +\n\t\t\t\t\t\t\t\t\t\t\"$ProfileNameTextField, $sProfileName, \" +\n\t\t\t\t\t\t\t\t\t\t\"$ProfileSectionsIntSlider, $sProfileSections, \" +\n\t\t\t\t\t\t\t\t\t\t\"$ProfileRadiusFloatSlider, $sProfileRadius, \" +\n\t\t\t\t\t\t\t\t\t\t\"$ExtrusionScaleFloatSlider, $sExtrusionScale, \" +\n\t\t\t\t\t\t\t\t\t\t\"$NumberOfDuplicatesIntSlider, $sNumberOfDuplicates, \" +\n\t\t\t\t\t\t\t\t\t\t\"$RotationStyleRadioButton, $sRotationStyle, \" +\n\t\t\t\t\t\t\t\t\t\t\"$DuplicationStyleRadioButton, $sDuplicationStyle, \" +\n\t\t\t\t\t\t\t\t\t\t\"$DupliScaleFactorFloatSlider, $sDupliScaleFactor, \" +\n\t\t\t\t\t\t\t\t\t\t\"$RandomTranslationRadioButton, $sRandomTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MinXTranslationFloatField, $sMinTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MaxXTranslationFloatField, $sMaxTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MinYTranslationFloatField, $sMinTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MaxYTranslationFloatField, $sMaxTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MinZTranslationFloatField, $sMinTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MaxZTranslationFloatField, $sMaxTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$RandomRotationRadioButton, $sRandomRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MinXRotationFloatField, $sMinRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MaxXRotationFloatField, $sMaxRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MinYRotationFloatField, $sMinRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MaxYRotationFloatField, $sMaxRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MinZRotationFloatField, $sMinRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MaxZRotationFloatField, $sMaxRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\"$RandomScaleRadioButton, $sRandomScale, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MinScaleFloatField, $sMinScale, \" +\n\t\t\t\t\t\t\t\t\t\t\"$MaxScaleFloatField, $sMaxScale, \" +\n\t\t\t\t\t\t\t\t\t\t\"$AnimationStartIntSlider, $sAnimationStart, \" +\n\t\t\t\t\t\t\t\t\t\t\"$AnimationStartValueFloatSlider, $sAnimationStartValue, \" +\n\t\t\t\t\t\t\t\t\t\t\"$AnimationEndIntSlider, $sAnimationEnd, \" +\n\t\t\t\t\t\t\t\t\t\t\"$AnimationEndValueFloatSlider, $sAnimationEndValue, \" +\n\t\t\t\t\t\t\t\t\t\t\"$AnimationCreationStyleRadioButton, $sAnimationCreationStyle)\");\n\t\t\t\t\t\t\t\t\t\t\n\tmenuItem -subMenu true -label \"Presets\";\n\t\tmenuItem -label \"Preset_01_Flat_Spiral\" -command \"FlatSpiralPreset ($RadiusAFloatSlider, $RadiusBFloatSlider, $PointsPerRevolutionIntSlider, $RevolutionsIntSlider, $PitchFloatSlider, $PitchDelayFloatSlider, $SpiralDecreaseFloatSlider)\";\n\t\tmenuItem -label \"Preset_02_Art_Spiral\" -command \"ArtSpiralPreset ($RadiusAFloatSlider, $RadiusBFloatSlider, $PointsPerRevolutionIntSlider, $RevolutionsIntSlider, $PitchFloatSlider, $PitchDelayFloatSlider, $SpiralDecreaseFloatSlider)\";\n\t\tsetParent -menu ..;\n\t\t\n\tmenuItem -label \"Save Preset\" -command (\"PresetToFile ($DNHeader, $DNFileInformationFile, $DNNumberOfPresets, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$DNData, $DNPresetEntryID, 1,\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$DNPresetEntryEnd, $DNPresetName, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$DNPresetTailID, $DNPresetTailEnd, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetStringTextValue($PathNameTextField), $DNPathName, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusAFloatSlider), $DNRadiusA, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusBFloatSlider), $DNRadiusB, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($PointsPerRevolutionIntSlider), $DNPointsPerRevolution, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($RevolutionsIntSlider), $DNRevolutions, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchFloatSlider), $DNPitch, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchDelayFloatSlider), $DNPitchDelay, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($SpiralDecreaseFloatSlider), $DNSpiralDecrease, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetStringTextValue ($ProfileNameTextField), $DNProfileName, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($ProfileSectionsIntSlider), $DNProfileSections, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($ProfileRadiusFloatSlider), $DNProfileRadius, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($ExtrusionScaleFloatSlider), $DNExtrusionScale, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($NumberOfDuplicatesIntSlider), $DNNumberOfDuplicates, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RotationStyleRadioButton) + 1, $DNRotationStyle, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($DuplicationStyleRadioButton) + 1, $DNDuplicationStyle, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($DupliScaleFactorFloatSlider), $DNDupliScaleFactor, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomTranslationRadioButton) + 1, $DNRandomTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinXTranslationFloatField), $DNMinXTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MaxXTranslationFloatField), $DNMaxXTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinYTranslationFloatField), $DNMinYTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MaxYTranslationFloatField), $DNMaxYTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinZTranslationFloatField), $DNMinZTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MaxZTranslationFloatField), $DNMaxZTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomRotationRadioButton) + 1, $DNRandomRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinXRotationFloatField), $DNMinXRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MaxXRotationFloatField), $DNMaxXRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinYRotationFloatField), $DNMinYRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MaxYRotationFloatField), $DNMaxYRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinZRotationFloatField), $DNMinZRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MaxZRotationFloatField), $DNMaxZRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomScaleRadioButton) + 1, $DNRandomScale, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinScaleFloatField), $DNMinScale, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MaxScaleFloatField), $DNMaxScale, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($AnimationStartIntSlider), $DNAnimationStart, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($AnimationStartValueFloatSlider), $DNAnimationStartValue, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($AnimationEndIntSlider), $DNAnimationEnd, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($AnimationEndValueFloatSlider), $DNAnimationEndValue, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($AnimationCreationStyleRadioButton) + 1, $DNAnimationCreationStyle)\");\n\t\t\t\t\t\t\t\t\t\t\t\t\n\tmenuItem -label \"Load Preset\" -command (\"LoadPresetFromFile ($DNHeader, $DNFileInformationFile, $DNNumberOfPresets, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$DNData, $DNPresetEntryID, 1,\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$DNPresetEntryEnd, $DNPresetName, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$DNPresetTailID, $DNPresetTailEnd, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$PathNameTextField, $DNPathName, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$RadiusAFloatSlider, $DNRadiusA, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$RadiusBFloatSlider, $DNRadiusB, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$PointsPerRevolutionIntSlider, $DNPointsPerRevolution, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$RevolutionsIntSlider, $DNRevolutions, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$PitchFloatSlider, $DNPitch, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$PitchDelayFloatSlider, $DNPitchDelay, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$SpiralDecreaseFloatSlider, $DNSpiralDecrease, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ProfileNameTextField, $DNProfileName, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ProfileSectionsIntSlider, $DNProfileSections, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ProfileRadiusFloatSlider, $DNProfileRadius, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$ExtrusionScaleFloatSlider, $DNExtrusionScale, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$NumberOfDuplicatesIntSlider, $DNNumberOfDuplicates, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$RotationStyleRadioButton, $DNRotationStyle, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$DuplicationStyleRadioButton, $DNDuplicationStyle, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$DupliScaleFactorFloatSlider, $DNDupliScaleFactor, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$RandomTranslationRadioButton, $DNRandomTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MinXTranslationFloatField, $DNMinXTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MaxXTranslationFloatField, $DNMaxXTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MinYTranslationFloatField, $DNMinYTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MaxYTranslationFloatField, $DNMaxYTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MinZTranslationFloatField, $DNMinZTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MaxZTranslationFloatField, $DNMaxZTranslation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$RandomRotationRadioButton, $DNRandomRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MinXRotationFloatField, $DNMinXRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MaxXRotationFloatField, $DNMaxXRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MinYRotationFloatField, $DNMinYRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MaxYRotationFloatField, $DNMaxYRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MinZRotationFloatField, $DNMinZRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MaxZRotationFloatField, $DNMaxZRotation, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$RandomScaleRadioButton, $DNRandomScale, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MinScaleFloatField, $DNMinScale, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$MaxScaleFloatField, $DNMaxScale, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$AnimationStartIntSlider, $DNAnimationStart, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$AnimationStartValueFloatSlider, $DNAnimationStartValue, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$AnimationEndIntSlider, $DNAnimationEnd, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$AnimationEndValueFloatSlider, $DNAnimationEndValue, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"$AnimationCreationStyleRadioButton, $DNAnimationCreationStyle)\");\n\t\t\t\t\t\t\t\t\t\t\t\t\n\tmenuItem -label \"Close\" -command \"CloseWindow ($CVSHWindow)\";\n\t\nmenu -label \"About\";\n\n\tmenuItem -label \"Creation Explanation\" -command \"CreationExplanation ()\";\n\tmenuItem -label \"Extrusion Explanation\" -command \"ExtrusionExplanation ()\";\n\tmenuItem -label \"Duplication Explanation\" -command \"DuplicationExplanation ()\";\n\tmenuItem -label \"Animation Explanation\" -command \"AnimationExplanation ()\";\n\tmenuItem -label \"Info\" -command \"ShowInfo ()\";\n\n\t\n// Layout\n\n// Tab layout names\n\nstring $FirstTabName = \"Creation\";\nstring $SecondTabName = \"Extrusion\";\nstring $ThirdTabName = \"Duplication\";\nstring $FourthTabName = \"Animation\";\n\n\n\nstring $TabLayoutStyle = `tabLayout\n\t\t\t\t\t\t-innerMarginWidth 4\n\t\t\t\t\t\t-innerMarginHeight 4\n\t\t\t\t\t\t-scrollable true\n\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\n\tstring $FirstTab = `columnLayout\n\t\t\t\t\t\t-adjustableColumn true\n\t\t\t\t\t\t-columnAttach \"left\" 0\n\t\t\t\t\t\t-rowSpacing 5\n\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\n\t\t// Name for path curve\n\t\tstring $PathNameTextField = `textFieldGrp\n\t\t\t\t\t\t\t\t\t\t-label \"Path Curve Name\"\n\t\t\t\t\t\t\t\t\t\t-text $sPathName\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\n\t\t// Radius A for elliptic path\n\t\tstring $RadiusAFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t-label \"Radius A (elliptic) (X-Dir.)\"\n\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t-precision 3\n\t\t\t\t\t\t\t\t\t-minValue 0.001\n\t\t\t\t\t\t\t\t\t-value $sRadiusA\n\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\n\t\t// Radius B for elliptic path\n\t\tstring $RadiusBFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t-label \"Radius B (elliptic) (Z-Dir.)\"\n\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t-precision 3\n\t\t\t\t\t\t\t\t\t-minValue 0.001\n\t\t\t\t\t\t\t\t\t-value $sRadiusB\n\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\n\t\t// Button to set radius equal\n\t\tstring $SetRadiusEqualButton = `button\n\t\t\t\t\t\t\t\t\t\t-label \"Set Radius Equal (for circular style)\"\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t-height 20\n\t\t\t\t\t\t\t\t\t\t-command \"CopyFloatValue ($RadiusBFloatSlider, GetFloatSliderValue ($RadiusAFloatSlider))\"`;\n\t\t\n\t\t// Points per revolution\n\t\tstring $PointsPerRevolutionIntSlider = `intSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t\t-label \"Points Per Revolution\"\n\t\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t\t-minValue 4\n\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 128\n\t\t\t\t\t\t\t\t\t\t\t\t-value $sPointsPerRevolution\n\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\n\t\t// Revolutions to perform\n\t\tstring $RevolutionsIntSlider = `intSliderGrp\n\t\t\t\t\t\t\t\t\t\t-label \"Revolutions\"\n\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t-minValue 1\n\t\t\t\t\t\t\t\t\t\t-maxValue 64\n\t\t\t\t\t\t\t\t\t\t-value $sRevolutions\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\n\t\t// Distance between a revolution\n\t\tstring $PitchFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t-label \"Pitch\"\n\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t-precision 3\n\t\t\t\t\t\t\t\t\t-minValue 0.000\n\t\t\t\t\t\t\t\t\t-value $sPitch\n\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\n\t\t// Decrease for each revolution\n\t\tstring $PitchDelayFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t\t-label \"Pitch Delay\"\n\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t-minValue -10.000\n\t\t\t\t\t\t\t\t\t\t-maxValue 10.000\n\t\t\t\t\t\t\t\t\t\t-value $sPitchDelay\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\n\t\t// Decrease for spiral\n\t\tstring $SpiralDecreaseFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t-label \"Spiral Decrease\"\n\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t-precision 3\n\t\t\t\t\t\t\t\t\t\t\t-minValue 0.001\n\t\t\t\t\t\t\t\t\t\t\t-value $sSpiralDecrease\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\n\t\t// Calculate height of spiral/helix\n\t\tstring $CalculateHeightButton = `button\n\t\t\t\t\t\t\t\t\t\t-label $sCalculateHeightButtonLabel\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t-height 20\n\t\t\t\t\t\t\t\t\t\t-command (\"ChangeButtonLabel ($CalculateHeightButton, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Combine2Strings ($sCalculateHeightButtonLabel, \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"CalculateHeightStr (GetIntSliderValue ($PointsPerRevolutionIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($RevolutionsIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchDelayFloatSlider))))\")`;\n\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 2\n\t\t\t-columnWidth 1 200\n\t\t\t-columnWidth 2 200\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\n\t\t\t// Creating a spiral\n\t\t\tstring $CreateSpiralButton = `button\n\t\t\t\t\t\t\t\t\t\t-label \"Create Spiral\"\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t-height 40\n\t\t\t\t\t\t\t\t\t\t-command (\"CreateSpiralHelix (GetStringTextValue ($PathNameTextField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusAFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusBFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($PointsPerRevolutionIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($RevolutionsIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchDelayFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($SpiralDecreaseFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"0)\")`;\n\t\t\t\n\t\t\t// Creating a helix\n\t\t\tstring $CreateHelixButton = `button\n\t\t\t\t\t\t\t\t\t\t-label \"Create Helix\"\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t-height 40\n\t\t\t\t\t\t\t\t\t\t-command (\"CreateSpiralHelix (GetStringTextValue ($PathNameTextField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusAFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusBFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($PointsPerRevolutionIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($RevolutionsIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchDelayFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($SpiralDecreaseFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"1)\")`;\n\t\t\t\t\t\t\t\t\t\n\t\tsetParent $FirstTab;\n\t\n\tsetParent ..;\n\n\t\t\n\tstring $SecondTab = `columnLayout\n\t\t\t\t\t\t-adjustableColumn true\n\t\t\t\t\t\t-columnAttach \"left\" 0\n\t\t\t\t\t\t-rowSpacing 5\n\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\n\t\t// Name for profile curve\n\t\tstring $ProfileNameTextField = `textFieldGrp\n\t\t\t\t\t\t\t\t\t\t\t-label \"Profile Curve Name\"\n\t\t\t\t\t\t\t\t\t\t\t-text $sProfileName\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\n\t\t// Number of sections for profile\n\t\tstring $ProfileSectionsIntSlider = `intSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t-label \"Profile Sections\"\n\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t-minValue 4\n\t\t\t\t\t\t\t\t\t\t\t-maxValue 64\n\t\t\t\t\t\t\t\t\t\t\t-value $sProfileSections\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Radius of the profile\n\t\tstring $ProfileRadiusFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t-label \"Profile Radius\"\n\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t-precision 3\n\t\t\t\t\t\t\t\t\t\t\t-minValue 0.001\n\t\t\t\t\t\t\t\t\t\t\t-value $sProfileRadius\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Scale factor for taper effect\n\t\tstring $ExtrusionScaleFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t-label \"Extrusion Scale(Taper)\"\n\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t-precision 3\n\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000\n\t\t\t\t\t\t\t\t\t\t\t-value $sExtrusionScale\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 2\n\t\t\t-columnWidth 1 200\n\t\t\t-columnWidth 2 200\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t\t// Creating a circle profile\n\t\t\tstring $CreateCircleButton = `button\n\t\t\t\t\t\t\t\t\t\t-label \"Create Circle Profile\"\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t-height 40\n\t\t\t\t\t\t\t\t\t\t-command (\"CreateCircle (GetStringTextValue ($ProfileNameTextField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($ProfileSectionsIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($ProfileRadiusFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusBFloatSlider))\")`;\n\t\t\t\n\t\t\t// Extrude a profile along a path\n\t\t\tstring $ExtrudeProfilePathButton = `button\n\t\t\t\t\t\t\t\t\t\t\t-label \"Extrude Profile Along Path\"\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t\t-height 40\n\t\t\t\t\t\t\t\t\t\t\t-command \"ExtrudeAlongPath (GetFloatSliderValue ($ExtrusionScaleFloatSlider))\"`;\n\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $SecondTab;\n\t\t\n\t\t\t\n\tsetParent ..;\n\t\n\tstring $ThirdTab = `columnLayout\n\t\t\t\t\t\t-adjustableColumn true\n\t\t\t\t\t\t-columnAttach \"left\" 0\n\t\t\t\t\t\t-rowSpacing 5\n\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\n\t\t// Number of duplicates in one Revolution\n\t\tstring $NumberOfDuplicatesIntSlider = `intSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t-label \"Duplicates Per Revolution\"\n\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t-minValue 2\n\t\t\t\t\t\t\t\t\t\t\t-maxValue 4096\n\t\t\t\t\t\t\t\t\t\t\t-value $sNumberOfDuplicates\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Object rotation type\n\t\tstring $RotationStyleRadioButton = `radioButtonGrp\n\t\t\t\t\t\t\t\t\t\t\t-numberOfRadioButtons 2\n\t\t\t\t\t\t\t\t\t\t\t-label \"Select Rotation Style\"\n\t\t\t\t\t\t\t\t\t\t\t-labelArray2 \"Preserve Rotation\" \"Apply Rotation\"\n\t\t\t\t\t\t\t\t\t\t\t-select $sRotationStyle\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Object duplication type\n\t\tstring $DuplicationStyleRadioButton = `radioButtonGrp\n\t\t\t\t\t\t\t\t\t\t\t-numberOfRadioButtons 2\n\t\t\t\t\t\t\t\t\t\t\t-label \"Select Duplication Style\"\n\t\t\t\t\t\t\t\t\t\t\t-labelArray2 \"Duplicate\" \"Instance\"\n\t\t\t\t\t\t\t\t\t\t\t-select $sDuplicationStyle\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Scale factor for taper effect\n\t\tstring $DupliScaleFactorFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t\t-label \"Uniform Scale Factor\"\n\t\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000001\n\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 2.000000\n\t\t\t\t\t\t\t\t\t\t\t\t-value $sDupliScaleFactor\n\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\n\t\t// Enable/Disable random translation\n\t\tstring $RandomTranslationRadioButton = `radioButtonGrp\n\t\t\t\t\t\t\t\t\t\t\t\t-numberOfRadioButtons 2\n\t\t\t\t\t\t\t\t\t\t\t\t-label \"Random Translation\"\n\t\t\t\t\t\t\t\t\t\t\t\t-labelArray2 \"Enable\" \"Disable\"\n\t\t\t\t\t\t\t\t\t\t\t\t-select $sRandomTranslation\n\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 5\n\t\t\t-columnWidth 1 80\n\t\t\t-columnWidth 2 100\n\t\t\t-columnWidth 3 80\n\t\t\t-columnWidth 4 100\n\t\t\t-columnWidth 5 20\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Min X    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t// Min x translation values\n\t\t\tstring $MinXTranslationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue -100.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMinTranslation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Max X    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t// Max x translation values\n\t\t\tstring $MaxXTranslationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 100.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMaxTranslation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $ThirdTab;\n\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 5\n\t\t\t-columnWidth 1 80\n\t\t\t-columnWidth 2 100\n\t\t\t-columnWidth 3 80\n\t\t\t-columnWidth 4 100\n\t\t\t-columnWidth 5 20\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t\ttext\n\t\t\t\t-label \"Min Y    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t\t// Min y translation values\n\t\t\tstring $MinYTranslationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue -100.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMinTranslation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Max Y    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t// Max y translation values\n\t\t\tstring $MaxYTranslationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 100.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMaxTranslation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $ThirdTab;\n\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 5\n\t\t\t-columnWidth 1 80\n\t\t\t-columnWidth 2 100\n\t\t\t-columnWidth 3 80\n\t\t\t-columnWidth 4 100\n\t\t\t-columnWidth 5 20\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Min Z    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t\t// Min z translation values\n\t\t\tstring $MinZTranslationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue -100.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMinTranslation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Max Z    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t// Max z translation values\n\t\t\tstring $MaxZTranslationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 100.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMaxTranslation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $ThirdTab;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Enable/Disable random rotation\n\t\tstring $RandomRotationRadioButton = `radioButtonGrp\n\t\t\t\t\t\t\t\t\t\t\t\t-numberOfRadioButtons 2\n\t\t\t\t\t\t\t\t\t\t\t\t-label \"Random Rotation\"\n\t\t\t\t\t\t\t\t\t\t\t\t-labelArray2 \"Enable\" \"Disable\"\n\t\t\t\t\t\t\t\t\t\t\t\t-select $sRandomRotation\n\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 5\n\t\t\t-columnWidth 1 80\n\t\t\t-columnWidth 2 100\n\t\t\t-columnWidth 3 80\n\t\t\t-columnWidth 4 100\n\t\t\t-columnWidth 5 20\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Min X    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t// Min x rotation values\n\t\t\tstring $MinXRotationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue -360.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMinRotation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Max X    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t// Max x rotation values\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\tstring $MaxXRotationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 360.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMaxRotation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $ThirdTab;\n\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 5\n\t\t\t-columnWidth 1 80\n\t\t\t-columnWidth 2 100\n\t\t\t-columnWidth 3 80\n\t\t\t-columnWidth 4 100\n\t\t\t-columnWidth 5 20\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t\ttext\n\t\t\t\t-label \"Min Y    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t\t// Min y rotation values\n\t\t\tstring $MinYRotationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue -360.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMinRotation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Max Y    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t// Max y rotation values\n\t\t\tstring $MaxYRotationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 360.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMaxRotation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $ThirdTab;\n\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 5\n\t\t\t-columnWidth 1 80\n\t\t\t-columnWidth 2 100\n\t\t\t-columnWidth 3 80\n\t\t\t-columnWidth 4 100\n\t\t\t-columnWidth 5 20\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Min Z    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t\t// Min z rotation values\n\t\t\tstring $MinZRotationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue -360.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMinRotation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Max Z    \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t// Max z rotation values\n\t\t\tstring $MaxZRotationFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 360.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMaxRotation\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $ThirdTab;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Enable/Disable random scale\n\t\tstring $RandomScaleRadioButton = `radioButtonGrp\n\t\t\t\t\t\t\t\t\t\t\t-numberOfRadioButtons 2\n\t\t\t\t\t\t\t\t\t\t\t-label \"Random Scale\"\n\t\t\t\t\t\t\t\t\t\t\t-labelArray2 \"Enable\" \"Disable\"\n\t\t\t\t\t\t\t\t\t\t\t-select $sRandomScale\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 5\n\t\t\t-columnWidth 1 80\n\t\t\t-columnWidth 2 100\n\t\t\t-columnWidth 3 80\n\t\t\t-columnWidth 4 100\n\t\t\t-columnWidth 5 20\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Min      \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t\t// Min max scale values\n\t\t\tstring $MinScaleFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue -1.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMinScale\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\ttext\n\t\t\t\t-label \"Max      \"\n\t\t\t\t-align \"right\"\n\t\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\n\t\t\t// Max scale values\n\t\t\tstring $MaxScaleFloatField = `floatField\n\t\t\t\t\t\t\t\t\t\t\t\t\t-precision 6\n\t\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 1.000000\n\t\t\t\t\t\t\t\t\t\t\t\t\t-value $sMaxScale\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $ThirdTab;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 2\n\t\t\t-columnWidth 1 200\n\t\t\t-columnWidth 2 200\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\n\t\t// Duplicate along a spiral\n\t\tstring $SpiralDuplicationButton = `button\n\t\t\t\t\t\t\t\t\t\t-label \"Duplicate/Instance Along Spiral\"\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t-height 40\n\t\t\t\t\t\t\t\t\t\t-command (\"SpiralHelixDuplication (GetIntSliderValue ($NumberOfDuplicatesIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RotationStyleRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($DuplicationStyleRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusAFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusBFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($RevolutionsIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchDelayFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($SpiralDecreaseFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($DupliScaleFactorFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomTranslationRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinXTranslationFloatField), GetFloatFieldValue ($MaxXTranslationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinYTranslationFloatField), GetFloatFieldValue ($MaxYTranslationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinZTranslationFloatField), GetFloatFieldValue ($MaxZTranslationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomRotationRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinXRotationFloatField), GetFloatFieldValue ($MaxXRotationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinYRotationFloatField), GetFloatFieldValue ($MaxYRotationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinZRotationFloatField), GetFloatFieldValue ($MaxZRotationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomScaleRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinScaleFloatField), GetFloatFieldValue ($MaxScaleFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"0 )\")`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Duplicate along a helix\n\t\tstring $HelixDuplicationButton = `button\n\t\t\t\t\t\t\t\t\t\t-label \"Duplicate/Instance Along Helix\"\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t-height 40\n\t\t\t\t\t\t\t\t\t\t-command (\"SpiralHelixDuplication (GetIntSliderValue ($NumberOfDuplicatesIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RotationStyleRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($DuplicationStyleRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusAFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusBFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($RevolutionsIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($PitchDelayFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($SpiralDecreaseFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($DupliScaleFactorFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomTranslationRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinXTranslationFloatField), GetFloatFieldValue ($MaxXTranslationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinYTranslationFloatField), GetFloatFieldValue ($MaxYTranslationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinZTranslationFloatField), GetFloatFieldValue ($MaxZTranslationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomRotationRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinXRotationFloatField), GetFloatFieldValue ($MaxXRotationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinYRotationFloatField), GetFloatFieldValue ($MaxYRotationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinZRotationFloatField), GetFloatFieldValue ($MaxZRotationFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($RandomScaleRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetFloatFieldValue ($MinScaleFloatField), GetFloatFieldValue ($MaxScaleFloatField), \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"1 )\")`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tsetParent $ThirdTab;\n\t\t\n\tsetParent ..;\n\t\n\tstring $FourthTab = `columnLayout\n\t\t\t\t\t\t-adjustableColumn true\n\t\t\t\t\t\t-columnAttach \"left\" 0\n\t\t\t\t\t\t-rowSpacing 5\n\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\n\t\t// Information text\n\t\tstring $AnimationGrowInfoText = `text\n\t\t\t\t\t\t\t\t\t\t\t-label \"ONLY for extruded curves. NOT (yet) for duplicated objects.\"\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\n\t\t// Animation start frame\n\t\tstring $AnimationStartIntSlider = `intSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t-label \"Start Frame\"\n\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t-minValue 1\n\t\t\t\t\t\t\t\t\t\t\t-maxValue 99999\n\t\t\t\t\t\t\t\t\t\t\t-value $sAnimationStart\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Animation start value\n\t\tstring $AnimationStartValueFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t\t-label \"Start Value\"\n\t\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t\t-precision 3\n\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000\n\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 1.000\n\t\t\t\t\t\t\t\t\t\t\t\t-value $sAnimationStartValue\n\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\n\t\t// Animation end frame\n\t\tstring $AnimationEndIntSlider = `intSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t-label \"End Frame\"\n\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t-minValue 2\n\t\t\t\t\t\t\t\t\t\t\t-maxValue 100000\n\t\t\t\t\t\t\t\t\t\t\t-value $sAnimationEnd\n\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Animation end value\n\t\tstring $AnimationEndValueFloatSlider = `floatSliderGrp\n\t\t\t\t\t\t\t\t\t\t\t\t-label \"End Value\"\n\t\t\t\t\t\t\t\t\t\t\t\t-field true\n\t\t\t\t\t\t\t\t\t\t\t\t-precision 3\n\t\t\t\t\t\t\t\t\t\t\t\t-minValue 0.000\n\t\t\t\t\t\t\t\t\t\t\t\t-maxValue 1.000\n\t\t\t\t\t\t\t\t\t\t\t\t-value $sAnimationEndValue\n\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t// Create animation settings with or without extrusion option\n\t\tstring $AnimationCreationStyleRadioButton = `radioButtonGrp\n\t\t\t\t\t\t\t\t\t\t\t\t\t-numberOfRadioButtons 2\n\t\t\t\t\t\t\t\t\t\t\t\t\t-label \"Animation Creation Style\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t-labelArray2 \"With Extrusion\" \"Without Extrusion\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t-select $sAnimationCreationStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t-backgroundColor $LR $LG $LB`;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\trowColumnLayout\n\t\t\t-numberOfColumns 1\n\t\t\t-columnWidth 1 400\n\t\t\t-backgroundColor $LR $LG $LB;\n\t\t\t\n\t\t// Set keys and values\n\t\tstring $SetAnimSettingsButton = `button\n\t\t\t\t\t\t\t\t\t\t-label \"Create Animation Settings\"\n\t\t\t\t\t\t\t\t\t\t-backgroundColor $BR $BG $BB\n\t\t\t\t\t\t\t\t\t\t-height 40\n\t\t\t\t\t\t\t\t\t\t-command (\"ExtrusionAnimation (GetIntSliderValue ($AnimationStartIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($AnimationStartValueFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($AnimationEndIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($AnimationEndValueFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetRadioButton2Value ($AnimationCreationStyleRadioButton), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetStringTextValue ($ProfileNameTextField), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetIntSliderValue ($ProfileSectionsIntSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($ProfileRadiusFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($RadiusBFloatSlider), \" +\n\t\t\t\t\t\t\t\t\t\t\"GetFloatSliderValue ($ExtrusionScaleFloatSlider))\")`;\n\t\t\t\t\t\t\n\t\tsetParent $FourthTab;\n\t\t\n\tsetParent ..;\n\t\nsetParent ..;\n\n\n// Edit the tablayout\ntabLayout -edit\n\t\t\t-tabLabel $FirstTab $FirstTabName\n\t\t\t-tabLabel $SecondTab $SecondTabName\n\t\t\t-tabLabel $ThirdTab $ThirdTabName\n\t\t\t-tabLabel $FourthTab $FourthTabName\n\t\t\t$TabLayoutStyle;\n\n\n////////////////////////////////\n// CreateSpiralHelix function //\n////////////////////////////////\n\nproc CreateSpiralHelix (string $PathName,\n\t\t\t\t\t\tfloat $RadiusA,\n\t\t\t\t\t\tfloat $RadiusB,\n\t\t\t\t\t\tint $PointsPerRevolution,\n\t\t\t\t\t\tint $Revolutions,\n\t\t\t\t\t\tfloat $RevolutionDistance,\n\t\t\t\t\t\tfloat $DecRevolution,\n\t\t\t\t\t\tfloat $SpiralDecrease,\n\t\t\t\t\t\tint $Type)\n{\n\t/* Type:\n\t0 = Spiral\n\teverything else = Helix\n\t*/\n\t\n\t// Add \"Spiral\" to curve name\n\tif ($Type == 0)\n\t{\n\t\t$PathName += \"Spiral\";\n\t}\n\t\n\t// Else add \"Helix\" to curve name\n\telse\n\t{\n\t\t$PathName += \"Helix\";\n\t}\n\t\n\t// Local variables\n\tstring $CurvePoints;\n\tfloat $PI = 3.14159265;\n\t\n\tfloat $XPos = 0.0;\n\tfloat $YPos = 0.0;\n\tfloat $ZPos = 0.0;\n\t\n\tfloat $TotalCurvePoints = $PointsPerRevolution * $Revolutions;\n\t\n\t// Correct the number of total points\n\t--$TotalCurvePoints;\n\t\n\tfloat $Phi = 0.0;\n\t\n\tint $ActualPoint = 0;\n\t\n\tfor ($ActualPoint = 0; $ActualPoint <= $TotalCurvePoints; ++$ActualPoint)\n\t{\n\t\t// Rotation Angle\n\t\t$Phi = (360.0 * $Revolutions / $TotalCurvePoints * $ActualPoint) * ($PI / 180.0);\n\t\t\n\t\t// X position\n\t\t$XPos = $RadiusA * sin ($Phi);\n\t\t\n\t\t// Z position\n\t\t$ZPos = $RadiusB * cos ($Phi);\n\t\t\n\t\t// Add point to curve creation string\n\t\t$CurvePoints += (\"-p \" + $XPos + \" \" + $YPos + \" \" + $ZPos + \" \");\n\t\t\n\t\t// Y position\n\t\t$YPos += ($RevolutionDistance / $PointsPerRevolution) + ($DecRevolution * $ActualPoint);\n\t\t\n\t\t// Spiral\n\t\tif ($Type == 0)\n\t\t{\n\t\t\t$RadiusA -= $SpiralDecrease / $TotalCurvePoints;\n\t\t\t\n\t\t\t$RadiusB -= $SpiralDecrease / $TotalCurvePoints;\n\t\t}\n\t}\n\t\n\t// Create curve with calculated points\n\tstring $PathCurveObj = \"curve -degree 3\t-name \";\t\t\t// Curve command\n\t$PathCurveObj = $PathCurveObj + $PathName + $CurvePoints;\t// Add points to command\n\t\n\teval ($PathCurveObj);\n}\n\n\n//////////////////////////\n// CreateHelix function //\n//////////////////////////\n/*\nproc CreateHelix (string $PathName,\n\t\t\t\t\tfloat $RadiusA,\n\t\t\t\t\tfloat $RadiusB,\n\t\t\t\t\tint $PointsPerRevolution,\n\t\t\t\t\tint $Revolutions,\n\t\t\t\t\tfloat $RevolutionDistance,\n\t\t\t\t\tfloat $DecRevolution)\n{\n\t// Local variables\n\tstring $CurvePoints;\n\tfloat $PI = 3.14159265;\n\t\n\tfloat $XPos = 0.0;\n\tfloat $YPos = 0.0;\n\tfloat $ZPos = 0.0;\n\t\n\tfloat $Phi = 0.0;\n\t\n\tint $TotalCurvePoints = $PointsPerRevolution * $Revolutions;\n\t\n\t// Correct the number of total points\n\t--$TotalCurvePoints;\n\n\t\n\tint $ActualPoint = 0;\n\t\n\tfor ($ActualPoint = 0; $ActualPoint <= $TotalCurvePoints; ++$ActualPoint)\n\t{\n\t\t$Phi = (360.0 * $Revolutions / $TotalCurvePoints * $ActualPoint) * ($PI / 180.0);\n\t\t\n\t\t// X position\n\t\t$XPos = $RadiusA * sin ($Phi);\n\t\t\n\t\t// Z position\n\t\t$ZPos = $RadiusB * cos ($Phi);\n\t\t\n\t\t// Add point to curve creation string\n\t\t$CurvePoints += (\"-p \" + $XPos + \" \" + $YPos + \" \" + $ZPos + \" \");\n\t\t\n\t\t// Y position\n\t\t$YPos += ($RevolutionDistance / $PointsPerRevolution) + ($DecRevolution * $ActualPoint);\n\t}\n\t\n\t// Create curve with calculated points\n\tstring $PathCurveObj = \"curve -degree 3\t-name \";\t\t\t// Curve command\n\t$PathCurveObj = $PathCurveObj + $PathName + $CurvePoints;\t// Add points to command\n\t\n\teval ($PathCurveObj);\n}\n*/\n\n///////////////////////////\n// CreateSpiral function //\n///////////////////////////\n/*\nproc CreateSpiral (string $PathName,\n\t\t\t\t\tfloat $RadiusA,\n\t\t\t\t\tfloat $RadiusB,\n\t\t\t\t\tint $PointsPerRevolution,\n\t\t\t\t\tint $Revolutions,\n\t\t\t\t\tfloat $RevolutionDistance,\n\t\t\t\t\tfloat $DecRevolution,\n\t\t\t\t\tfloat $SpiralDecrease)\n{\n\t// Local variables\n\tstring $CurvePoints;\n\tfloat $PI = 3.14159265;\n\t\n\tfloat $XPos = 0.0;\n\tfloat $YPos = 0.0;\n\tfloat $ZPos = 0.0;\n\t\n\tfloat $TotalCurvePoints = $PointsPerRevolution * $Revolutions;\n\t\n\t// Correct the number of total points\n\t--$TotalCurvePoints;\n\t\n\tfloat $Phi = 0.0;\n\t\n\tint $ActualPoint = 0;\n\t\n\tfor ($ActualPoint = 0; $ActualPoint <= $TotalCurvePoints; ++$ActualPoint)\n\t{\n\t\t$Phi = (360.0 * $Revolutions / $TotalCurvePoints * $ActualPoint) * ($PI / 180.0);\n\t\t\n\t\t// X position\n\t\t$XPos = $RadiusA * sin ($Phi);\n\t\t\n\t\t// Z position\n\t\t$ZPos = $RadiusB * cos ($Phi);\n\t\t\n\t\t// Add point to curve creation string\n\t\t$CurvePoints += (\"-p \" + $XPos + \" \" + $YPos + \" \" + $ZPos + \" \");\n\t\t\n\t\t// Y position\n\t\t$YPos += ($RevolutionDistance / $PointsPerRevolution) + ($DecRevolution * $ActualPoint);\n\t\t\n\t\t$RadiusA -= $SpiralDecrease / $TotalCurvePoints;\n\t\t\n\t\t$RadiusB -= $SpiralDecrease / $TotalCurvePoints;\n\t}\n\t\n\t// Create curve with calculated points\n\tstring $PathCurveObj = \"curve -degree 3\t-name \";\t\t\t// Curve command\n\t$PathCurveObj = $PathCurveObj + $PathName + $CurvePoints;\t// Add points to command\n\t\n\teval ($PathCurveObj);\n}\n*/\n\n///////////////////////////\n// CreateCircle function //\n///////////////////////////\n\nproc CreateCircle (string $ProfileName, int $ProfileSections, float $ProfileRadius, float $RadiusB)\n{\n\tcircle\n\t\t-constructionHistory true\n\t\t-normal 0 1 0\n\t\t-center 0.0 0.0 0.0\n\t\t-radius $ProfileRadius\n\t\t-sections $ProfileSections\n\t\t-name $ProfileName;\n\t\t\n\t// Move the curve profile - RadiusB for proper animation\n\tmove 0 0 $RadiusB;\n}\n\n\n///////////////////////////////\n// ExtrudeAlongPath function //\n///////////////////////////////\n\nproc ExtrudeAlongPath (float $ScaleFactor)\n{\t\n\t// Test selected Objects\n\t\n\t// Selected number of objects have to be two\n\t\n\tstring $SelectionList [] = `ls -selection -dagObjects -leaf`;\n\tint $SelectionSize = size ($SelectionList);\n\tprint ($SelectionList);\n\t\n\tif ($SelectionSize != 2)\n\t{\n\t\t// Number of selected objects is not equal to two\n\t\tprint (\"You have \" + $SelectionSize + \" objects selected.\" + \"\\n\");\n\t\terror \"Number of selected objects have to be two.\";\n\t}\n\t\n\telse\n\t{\n\t\t// Number of selected objects is equal to two\n\t\t// Test selection on \"nurbsCurve\" type\n\t\t\n\t\tstring $Profile = `nodeType $SelectionList [0]`;\n\t\tstring $Path = `nodeType $SelectionList [1]`;\n\t\tprint (`nodeType $SelectionList [0]` + \"\\n\");\n\t\tprint (`nodeType $SelectionList [1]` + \"\\n\");\n\t\t\n\t\t\n\t\tif ($Profile != \"nurbsCurve\")\n\t\t{\n\t\t\terror \"The first selected object is not a nurbsCurve\";\n\t\t}\n\t\t\n\t\telse if ($Path != \"nurbsCurve\")\n\t\t{\n\t\t\terror \"The second selected object is not a nurbsCurve\";\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tprint (\"Given information is correct extrusion is in work.\" + \"\\n\");\n\t\t\t\n\t\t\t// The two selected objects are nurbs curves\n\t\t\t\n\t\t\t// Extrude from selection list\n\t\t\t\n\t\t\tstring $ExtrudeProfilePathCurve [] = `extrude -constructionHistory true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-range false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-polygon 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-extrudeType 2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-useComponentPivot 2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-fixedPath true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-useProfileNormal true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-rotation 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-scale $ScaleFactor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-reverseSurfaceIfPathReversed true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$SelectionList [0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$SelectionList [1]`;\n\t\t\t\n\t\t\t// eval ($ExtrudeProfilePathCurve);\n\t\t\t\n\t\t\tprint (\"Extrusion Done\" + \"\\n\");\n\t\t}\n\t}\n}\n\n\n/////////////////////////////////////\n// SpiralHelixDuplication function //\n/////////////////////////////////////\n\nproc SpiralHelixDuplication (int $DuplicatesPerRevolution,\n\t\t\t\t\t\t\t\tint $Rotation,\n\t\t\t\t\t\t\t\tint $Duplication,\n\t\t\t\t\t\t\t\tfloat $RadiusA,\n\t\t\t\t\t\t\t\tfloat $RadiusB,\n\t\t\t\t\t\t\t\tint $Revolutions,\n\t\t\t\t\t\t\t\tfloat $RevolutionDistance,\n\t\t\t\t\t\t\t\tfloat $DecRevolution,\n\t\t\t\t\t\t\t\tfloat $SpiralDecrease,\n\t\t\t\t\t\t\t\tfloat $DupliScaleFactor,\n\t\t\t\t\t\t\t\tint $RandomTranslation,\n\t\t\t\t\t\t\t\tfloat $MinXTranslation, float $MaxXTranslation,\n\t\t\t\t\t\t\t\tfloat $MinYTranslation, float $MaxYTranslation,\n\t\t\t\t\t\t\t\tfloat $MinZTranslation, float $MaxZTranslation,\n\t\t\t\t\t\t\t\tint $RandomRotation,\n\t\t\t\t\t\t\t\tfloat $MinXRotation, float $MaxXRotation,\n\t\t\t\t\t\t\t\tfloat $MinYRotation, float $MaxYRotation,\n\t\t\t\t\t\t\t\tfloat $MinZRotation, float $MaxZRotation,\n\t\t\t\t\t\t\t\tint $RandomScale,\n\t\t\t\t\t\t\t\tfloat $MinScale, float $MaxScale,\n\t\t\t\t\t\t\t\tint $Type)\n{\n\t/* Type:\n\t0 = Spiral\n\teverything else = Helix\n\t*/\n\t\n\t// Local variables\n\tfloat $PI = 3.14159265;\n\t\n\tfloat $XPos = 0.0;\n\tfloat $YPos = 0.0;\n\tfloat $ZPos = 0.0;\n\t\n\tfloat $Phi = 0.0;\n\t\n\t// Random variables\n\tfloat $RXTranslation = 0.0;\n\tfloat $RYTranslation = 0.0;\n\tfloat $RZTranslation = 0.0;\n\t\n\tfloat $RXRotation = 0.0;\n\tfloat $RYRotation = 0.0;\n\tfloat $RZRotation = 0.0;\n\t\n\tfloat $RScale = 0.0;\n\t\n\tint $TotalCurveDuplicates = $DuplicatesPerRevolution * $Revolutions;\n\t\n\t// Correct the total number of duplicates\n\t--$TotalCurveDuplicates;\n\t\n\t// Rotation for every single object\n\tfloat $TempRotationPerObject = $Revolutions * 360 / $TotalCurveDuplicates;\n\tfloat $XActualRotation = 0.0;\n\tfloat $YActualRotation = 0.0;\n\tfloat $ZActualRotation = 0.0;\n\t\n\t// Scale variables\n\tfloat $TempActualScaleFactor = 1.0;\n\t\n\t// Selection list and size\n\tstring $SelectionList [] = `ls -selection`;\n\tint $SelectionListSize = size ($SelectionList);\n\t\n\t// Group of objects for each point\n\tstring $DuplicateGroup = CreateGroup ($SelectionList);\n\t\n\t// Spiral/helix group name\n\tstring $SpiralHelixGroupName = {};\n\tif ($Type == 0)\n\t{\n\t\t$SpiralHelixGroupName = \"SpiralGroup\";\n\t}\n\t\n\telse\n\t{\n\t\t$SpiralHelixGroupName = \"HelixGroup\";\n\t}\n\t\n\t// Group for all groups for each point on spiral/helix\n\tstring $SpiralHelixGroup = `group -name ($SpiralHelixGroupName + $DuplicateGroup)`;\n\t\n\t// Select \"$DuplicateGroup\" so that \"$SpiralHelixGroup\" is the master\n\tselect $DuplicateGroup;\n\t\n\tif ($SelectionListSize == 0)\n\t{\n\t\t// No Objects selected\n\t\tprint (\"You have no object(s) selected.\" + \"\\n\");\n\t\tprint (\"No Duplication started.\" + \"\\n\");\n\t}\n\t\n\telse\n\t{\n\t\tint $ActualPoint = 0;\n\t\n\t\tfor ($ActualPoint = 0; $ActualPoint <= $TotalCurveDuplicates; ++$ActualPoint)\n\t\t{\n\t\t\t$Phi = (360.0 * $Revolutions / $TotalCurveDuplicates * $ActualPoint) * ($PI / 180.0);\n\t\t\t\n\t\t\t// X position\n\t\t\t$XPos = $RadiusA * sin ($Phi);\n\t\t\t\n\t\t\t// Z position\n\t\t\t$ZPos = $RadiusB * cos ($Phi);\n\t\t\t\n\t\t\t// Y position\n\t\t\t$YPos += ($RevolutionDistance / $DuplicatesPerRevolution) + ($DecRevolution * $ActualPoint);\n\n\t\t\t// Spiral\n\t\t\tif($Type == 0)\n\t\t\t{\n\t\t\t\t$RadiusA -= $SpiralDecrease / $TotalCurveDuplicates;\n\t\t\t\t\n\t\t\t\t$RadiusB -= $SpiralDecrease / $TotalCurveDuplicates;\n\t\t\t}\n\t\t\t\n\t\t\tif ($Duplication == 0)\n\t\t\t{\n\t\t\t\tduplicate `ls -selection`;\n\t\t\t}\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tinstance `ls -selection`;\n\t\t\t}\n\t\t\t\n\t\t\t// Random translation, rotation, scale\n\t\t\t\n\t\t\t// Check random translation\n\t\t\tif ($RandomTranslation == 0)\n\t\t\t{\n\t\t\t\t$RXTranslation = RandomFloatRange ($MinXTranslation, $MaxXTranslation);\n\t\t\t\t$RYTranslation = RandomFloatRange ($MinYTranslation, $MaxYTranslation);\n\t\t\t\t$RZTranslation = RandomFloatRange ($MinZTranslation, $MaxZTranslation);\n\t\t\t\t\n\t\t\t\t$XPos += $RXTranslation;\n\t\t\t\t$YPos += $RYTranslation;\n\t\t\t\t$ZPos += $RZTranslation;\n\t\t\t}\n\t\t\t\n\t\t\t// Check random rotation and add random factor\n\t\t\tif ($RandomRotation == 0)\n\t\t\t{\n\t\t\t\t$RXRotation = RandomFloatRange ($MinXRotation, $MaxXRotation);\n\t\t\t\t$RYRotation = RandomFloatRange ($MinYRotation, $MaxYRotation);\n\t\t\t\t$RZRotation = RandomFloatRange ($MinZRotation, $MaxZRotation);\n\t\t\t\t\n\t\t\t\t$XActualRotation += $RXRotation;\n\t\t\t\t$YActualRotation += $RYRotation;\n\t\t\t\t$ZActualRotation += $RZRotation;\n\t\t\t}\n\t\t\t\n\t\t\t// Move\n\t\t\tmove $XPos $YPos $ZPos;\n\t\t\t\n\t\t\t// Rotate\n\t\t\trotate $XActualRotation $YActualRotation $ZActualRotation;\n\t\t\t\n\t\t\t//  Check for scale factor and scale if necessary\n\t\t\tif ($DupliScaleFactor != 1)\n\t\t\t{\n\t\t\t\tscale $TempActualScaleFactor $TempActualScaleFactor $TempActualScaleFactor;\n\t\t\t\t\n\t\t\t\t$TempActualScaleFactor *= $DupliScaleFactor;\n\t\t\t}\n\t\t\t\n\t\t\t// Check random scale\n\t\t\tif ($RandomScale == 0)\n\t\t\t{\n\t\t\t\t$RScale = RandomFloatRange ($MinScale, $MaxScale);\n\t\t\t\t\n\t\t\t\tscale $RScale $RScale $RScale;\n\t\t\t}\n\t\t\t\n\t\t\t// Check rotation around the center\n\t\t\tif ($Rotation == 1)\n\t\t\t{\n\t\t\t\t$YActualRotation += $TempRotationPerObject;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n///////////////////////////////\n// HelixDuplication function //\n///////////////////////////////\n/*\nproc HelixDuplication (int $DuplicatesPerRevolution,\n\t\t\t\t\t\tint $Rotation,\n\t\t\t\t\t\tint $Duplication,\n\t\t\t\t\t\tfloat $RadiusA,\n\t\t\t\t\t\tfloat $RadiusB,\n\t\t\t\t\t\tint $Revolutions,\n\t\t\t\t\t\tfloat $RevolutionDistance,\n\t\t\t\t\t\tfloat $DecRevolution,\n\t\t\t\t\t\tfloat $DupliScaleFactor,\n\t\t\t\t\t\tint $RandomTranslation,\n\t\t\t\t\t\tfloat $MinXTranslation, float $MaxXTranslation,\n\t\t\t\t\t\tfloat $MinYTranslation, float $MaxYTranslation,\n\t\t\t\t\t\tfloat $MinZTranslation, float $MaxZTranslation,\n\t\t\t\t\t\tint $RandomRotation,\n\t\t\t\t\t\tfloat $MinXRotation, float $MaxXRotation,\n\t\t\t\t\t\tfloat $MinYRotation, float $MaxYRotation,\n\t\t\t\t\t\tfloat $MinZRotation, float $MaxZRotation,\n\t\t\t\t\t\tint $RandomScale,\n\t\t\t\t\t\tfloat $MinScale, float $MaxScale)\n{\n\t// Local variables\n\t\n\tfloat $PI = 3.14159265;\n\t\n\tfloat $XPos = 0.0;\n\tfloat $YPos = 0.0;\n\tfloat $ZPos = 0.0;\n\t\n\tfloat $Phi = 0.0;\n\t\n\t// Random variables\n\tfloat $RXTranslation = 0.0;\n\tfloat $RYTranslation = 0.0;\n\tfloat $RZTranslation = 0.0;\n\t\n\tfloat $RXRotation = 0.0;\n\tfloat $RYRotation = 0.0;\n\tfloat $RZRotation = 0.0;\n\t\n\tfloat $RScale = 0.0;\n\t\n\tint $TotalCurveDuplicates = $DuplicatesPerRevolution * $Revolutions;\n\t\n\t// Correct the total number of duplicates\n\t--$TotalCurveDuplicates;\n\t\n\t// Rotation for every single object\n\tfloat $TempRotationPerObject = $Revolutions * 360 / $TotalCurveDuplicates;\n\tfloat $XActualRotation = 0.0;\n\tfloat $YActualRotation = 0.0;\n\tfloat $ZActualRotation = 0.0;\n\t\n\t// Scale variables\n\tfloat $TempActualScaleFactor = 1.0;\n\t\n\tstring $SelectionList [] = `ls -selection`;\n\tint $SelectionListSize = size ($SelectionList);\n\t\n\t// Group of objects for each point\n\tstring $DuplicateGroup = CreateGroup ($SelectionList);\n\t\n\t// Spiral/helix group name\n\tstring $SpiralHelixGroupName = \"SpiralHelixGroup\";\n\t\n\t// Group for all groups for each point on spiral/helix\n\tstring $SpiralHelixGroup = `group -name ($SpiralHelixGroupName + $DuplicateGroup)`;\n\t\n\t// Select \"$DuplicateGroup\" so that \"$SpiralHelixGroup\" is the master\n\tselect $DuplicateGroup;\n\t\n\tif ($SelectionListSize == 0)\n\t{\n\t\t// No Objects selected\n\t\tprint (\"You have no object(s) selected.\" + \"\\n\");\n\t\tprint (\"No Duplication started.\" + \"\\n\");\n\t}\n\t\n\telse\n\t{\n\t\tint $ActualPoint = 0;\n\t\n\t\tfor ($ActualPoint = 0; $ActualPoint <= $TotalCurveDuplicates; ++$ActualPoint)\n\t\t{\n\t\t\t$Phi = (360.0 * $Revolutions / $TotalCurveDuplicates * $ActualPoint) * ($PI / 180.0);\n\t\t\t\n\t\t\t// X position\n\t\t\t$XPos = $RadiusA * sin ($Phi);\n\t\t\t\n\t\t\t// Z position\n\t\t\t$ZPos = $RadiusB * cos ($Phi);\n\t\t\t\n\t\t\t// Add point to curve creation string\n\t\t\t\n\t\t\t// Y position\n\t\t\t$YPos += ($RevolutionDistance / $DuplicatesPerRevolution) + ($DecRevolution * $ActualPoint);\n\t\t\t\n\t\t\t// Check duplicate or instance\n\t\t\tif ($Duplication == 0)\n\t\t\t{\n\t\t\t\tduplicate `ls -selection`;\n\t\t\t}\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tinstance `ls -selection`;\n\t\t\t}\n\t\t\t\n\t\t\t// Random translation, rotation, scale\n\t\t\t\n\t\t\t// Check random translation\n\t\t\tif ($RandomTranslation == 0)\n\t\t\t{\n\t\t\t\t$RXTranslation = RandomFloatRange ($MinXTranslation, $MaxXTranslation);\n\t\t\t\t$RYTranslation = RandomFloatRange ($MinYTranslation, $MaxYTranslation);\n\t\t\t\t$RZTranslation = RandomFloatRange ($MinZTranslation, $MaxZTranslation);\n\t\t\t\t\n\t\t\t\t$XPos += $RXTranslation;\n\t\t\t\t$YPos += $RYTranslation;\n\t\t\t\t$ZPos += $RZTranslation;\n\t\t\t}\n\t\t\t\n\t\t\t// Check random rotation and add random factor\n\t\t\tif ($RandomRotation == 0)\n\t\t\t{\n\t\t\t\t$RXRotation = RandomFloatRange ($MinXRotation, $MaxXRotation);\n\t\t\t\t$RYRotation = RandomFloatRange ($MinYRotation, $MaxYRotation);\n\t\t\t\t$RZRotation = RandomFloatRange ($MinZRotation, $MaxZRotation);\n\t\t\t\t\n\t\t\t\t$XActualRotation += $RXRotation;\n\t\t\t\t$YActualRotation += $RYRotation;\n\t\t\t\t$ZActualRotation += $RZRotation;\n\t\t\t}\n\t\t\t\n\t\t\t// Move\n\t\t\tmove $XPos $YPos $ZPos;\n\t\t\t\n\t\t\t// Rotate\n\t\t\trotate $XActualRotation $YActualRotation $ZActualRotation;\n\t\t\t\n\t\t\t//  Check for scale factor and scale if necessary\n\t\t\tif ($DupliScaleFactor != 1)\n\t\t\t{\n\t\t\t\tscale $TempActualScaleFactor $TempActualScaleFactor $TempActualScaleFactor;\n\t\t\t\t\n\t\t\t\t$TempActualScaleFactor *= $DupliScaleFactor;\n\t\t\t}\n\t\t\t\n\t\t\t// Check random scale\n\t\t\tif ($RandomScale == 0)\n\t\t\t{\n\t\t\t\t$RScale = RandomFloatRange ($MinScale, $MaxScale);\n\t\t\t\t\n\t\t\t\tscale $RScale $RScale $RScale;\n\t\t\t}\n\t\t\t\n\t\t\t// Check rotation around the center\n\t\t\tif ($Rotation == 1)\n\t\t\t{\n\t\t\t\t$YActualRotation += $TempRotationPerObject;\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n\n////////////////////////////////\n// SpiralDuplication function //\n////////////////////////////////\n/*\nproc SpiralDuplication (int $DuplicatesPerRevolution,\n\t\t\t\t\t\tint $Rotation,\n\t\t\t\t\t\tint $Duplication,\n\t\t\t\t\t\tfloat $RadiusA,\n\t\t\t\t\t\tfloat $RadiusB,\n\t\t\t\t\t\tint $Revolutions,\n\t\t\t\t\t\tfloat $RevolutionDistance,\n\t\t\t\t\t\tfloat $DecRevolution,\n\t\t\t\t\t\tfloat $SpiralDecrease,\n\t\t\t\t\t\tfloat $DupliScaleFactor,\n\t\t\t\t\t\tint $RandomTranslation,\n\t\t\t\t\t\tfloat $MinXTranslation, float $MaxXTranslation,\n\t\t\t\t\t\tfloat $MinYTranslation, float $MaxYTranslation,\n\t\t\t\t\t\tfloat $MinZTranslation, float $MaxZTranslation,\n\t\t\t\t\t\tint $RandomRotation,\n\t\t\t\t\t\tfloat $MinXRotation, float $MaxXRotation,\n\t\t\t\t\t\tfloat $MinYRotation, float $MaxYRotation,\n\t\t\t\t\t\tfloat $MinZRotation, float $MaxZRotation,\n\t\t\t\t\t\tint $RandomScale,\n\t\t\t\t\t\tfloat $MinScale, float $MaxScale)\n{\n\t// Local variables\n\t\n\tfloat $PI = 3.14159265;\n\t\n\tfloat $XPos = 0.0;\n\tfloat $YPos = 0.0;\n\tfloat $ZPos = 0.0;\n\t\n\tfloat $Phi = 0.0;\n\t\n\t// Random variables\n\tfloat $RXTranslation = 0.0;\n\tfloat $RYTranslation = 0.0;\n\tfloat $RZTranslation = 0.0;\n\t\n\tfloat $RXRotation = 0.0;\n\tfloat $RYRotation = 0.0;\n\tfloat $RZRotation = 0.0;\n\t\n\tfloat $RScale = 0.0;\n\t\n\tint $TotalCurveDuplicates = $DuplicatesPerRevolution * $Revolutions;\n\t\n\t// Correct the total number of duplicates\n\t--$TotalCurveDuplicates;\n\t\n\t// Rotation for every single object\n\tfloat $TempRotationPerObject = $Revolutions * 360 / $TotalCurveDuplicates;\n\tfloat $XActualRotation = 0.0;\n\tfloat $YActualRotation = 0.0;\n\tfloat $ZActualRotation = 0.0;\n\t\n\t// Scale variables\n\tfloat $TempActualScaleFactor = 1.0;\n\t\n\tstring $SelectionList [] = `ls -selection`;\n\tint $SelectionListSize = size ($SelectionList);\n\t\n\t// Group of objects for each point\n\tstring $DuplicateGroup = CreateGroup ($SelectionList);\n\t\n\t// Spiral/helix group name\n\tstring $SpiralHelixGroupName = \"SpiralHelixGroup\";\n\t\n\t// Group for all groups for each point on spiral/helix\n\tstring $SpiralHelixGroup = `group -name ($SpiralHelixGroupName + $DuplicateGroup)`;\n\t\n\t// Select \"$DuplicateGroup\" so that \"$SpiralHelixGroup\" is the master\n\tselect $DuplicateGroup;\n\t\n\tif ($SelectionListSize == 0)\n\t{\n\t\t// No Objects selected\n\t\tprint (\"You have no object(s) selected.\" + \"\\n\");\n\t\tprint (\"No Duplication started.\" + \"\\n\");\n\t}\n\t\n\telse\n\t{\n\t\tint $ActualPoint = 0;\n\t\n\t\tfor ($ActualPoint = 0; $ActualPoint <= $TotalCurveDuplicates; ++$ActualPoint)\n\t\t{\n\t\t\t$Phi = (360.0 * $Revolutions / $TotalCurveDuplicates * $ActualPoint) * ($PI / 180.0);\n\t\t\t\n\t\t\t// X position\n\t\t\t$XPos = $RadiusA * sin ($Phi);\n\t\t\t\n\t\t\t// Z position\n\t\t\t$ZPos = $RadiusB * cos ($Phi);\n\t\t\t\n\t\t\t// Y position\n\t\t\t$YPos += ($RevolutionDistance / $DuplicatesPerRevolution) + ($DecRevolution * $ActualPoint);\n\n\t\t\t\n\t\t\t$RadiusA -= $SpiralDecrease / $TotalCurveDuplicates;\n\t\t\t\n\t\t\t$RadiusB -= $SpiralDecrease / $TotalCurveDuplicates;\n\t\t\t\n\t\t\t\n\t\t\tif ($Duplication == 0)\n\t\t\t{\n\t\t\t\tduplicate `ls -selection`;\n\t\t\t}\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tinstance `ls -selection`;\n\t\t\t}\n\t\t\t\n\t\t\t// Random translation, rotation, scale\n\t\t\t\n\t\t\t// Check random translation\n\t\t\tif ($RandomTranslation == 0)\n\t\t\t{\n\t\t\t\t$RXTranslation = RandomFloatRange ($MinXTranslation, $MaxXTranslation);\n\t\t\t\t$RYTranslation = RandomFloatRange ($MinYTranslation, $MaxYTranslation);\n\t\t\t\t$RZTranslation = RandomFloatRange ($MinZTranslation, $MaxZTranslation);\n\t\t\t\t\n\t\t\t\t$XPos += $RXTranslation;\n\t\t\t\t$YPos += $RYTranslation;\n\t\t\t\t$ZPos += $RZTranslation;\n\t\t\t}\n\t\t\t\n\t\t\t// Check random rotation and add random factor\n\t\t\tif ($RandomRotation == 0)\n\t\t\t{\n\t\t\t\t$RXRotation = RandomFloatRange ($MinXRotation, $MaxXRotation);\n\t\t\t\t$RYRotation = RandomFloatRange ($MinYRotation, $MaxYRotation);\n\t\t\t\t$RZRotation = RandomFloatRange ($MinZRotation, $MaxZRotation);\n\t\t\t\t\n\t\t\t\t$XActualRotation += $RXRotation;\n\t\t\t\t$YActualRotation += $RYRotation;\n\t\t\t\t$ZActualRotation += $RZRotation;\n\t\t\t}\n\t\t\t\n\t\t\t// Move\n\t\t\tmove $XPos $YPos $ZPos;\n\t\t\t\n\t\t\t// Rotate\n\t\t\trotate $XActualRotation $YActualRotation $ZActualRotation;\n\t\t\t\n\t\t\t//  Check for scale factor and scale if necessary\n\t\t\tif ($DupliScaleFactor != 1)\n\t\t\t{\n\t\t\t\tscale $TempActualScaleFactor $TempActualScaleFactor $TempActualScaleFactor;\n\t\t\t\t\n\t\t\t\t$TempActualScaleFactor *= $DupliScaleFactor;\n\t\t\t}\n\t\t\t\n\t\t\t// Check random scale\n\t\t\tif ($RandomScale == 0)\n\t\t\t{\n\t\t\t\t$RScale = RandomFloatRange ($MinScale, $MaxScale);\n\t\t\t\t\n\t\t\t\tscale $RScale $RScale $RScale;\n\t\t\t}\n\t\t\t\n\t\t\t// Check rotation around the center\n\t\t\tif ($Rotation == 1)\n\t\t\t{\n\t\t\t\t$YActualRotation += $TempRotationPerObject;\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n\n/////////////////////////////////\n// ExtrusionAnimation function //\n/////////////////////////////////\n\nproc ExtrusionAnimation (int $AnimationStart,\n\t\t\t\t\t\t\tfloat $AnimationStartValue,\n\t\t\t\t\t\t\tint $AnimationEnd,\n\t\t\t\t\t\t\tfloat $AnimationEndValue,\n\t\t\t\t\t\t\tint $AnimExtOption,\n\t\t\t\t\t\t\tstring $ProfileName,\n\t\t\t\t\t\t\tint $ProfileSections,\n\t\t\t\t\t\t\tfloat $ProfileRadius,\n\t\t\t\t\t\t\tfloat $RadiusB,\n\t\t\t\t\t\t\tfloat $ExtrusionScale)\n{\n\t// Test selected object(s) on count and type\n\t// Only one selected object and only curve type allowed\n\t\n\tstring $SelectionList [] = `ls -selection -dagObjects -leaf`;\n\tint $SelectionListSize = size ($SelectionList);\n\t\n\tif ($SelectionListSize != 1)\n\t{\n\t\t// Number of selected objects is not equal to two\n\t\tprint (\"You have \" + $SelectionListSize + \" objects selected.\" + \"\\n\");\n\t\terror \"Number of selected objects have to be one.\";\n\t}\n\t\n\telse\n\t{\n\t\t// Number of selected objects is equal to one\n\t\t// Test selection on \"nurbsCurve\" type\n\t\t\n\t\tstring $AnimationCurve = `nodeType $SelectionList [0]`;\n\t\tprint (`nodeType $SelectionList [0]` + \"\\n\");\n\t\t\n\t\t\n\t\tif ($AnimationCurve != \"nurbsCurve\")\n\t\t{\n\t\t\terror \"The selected object is not a nurbsCurve\";\n\t\t}\n\t\t\n\t\telse\n\t\t{\t\t\t\n\t\t\t// \"Copy\" selected object to pathcurve variable\n\t\t\tstring $PathCurve = $SelectionList [0];\n\t\t\t\n\t\t\t// Create the subcurve for animation\n\t\t\tstring $PathSubCurve = `createNode subCurve`;\n\t\t\t\n\t\t\t\t// Set standard values\n\t\t\t\tsetAttr ($PathSubCurve + \".relative\") true;\n\t\t\t\tsetAttr ($PathSubCurve + \".minValue\") 0.0;\n\t\t\t\tsetAttr ($PathSubCurve + \".maxValue\") 1.0;\n\t\t\t\t\n\t\t\t\t// Connect selected path curve with the sub curve\n\t\t\t\tconnectAttr ($PathCurve + \".worldSpace\") ($PathSubCurve + \".inputCurve\");\n\t\t\t\n\t\t\t// Create an output curve for extrude animation\n\t\t\tstring $PathOutputCurve = `createNode nurbsCurve`;\n\t\t\t\n\t\t\t\t// Connect sub curve with the new created output curve\n\t\t\t\tconnectAttr ($PathSubCurve + \".outputCurve\") ($PathOutputCurve + \".create\");\n\t\t\t\t\n\t\t\t// Animation:\n\t\t\t\n\t\t\t\t// Go to first frame\n\t\t\t\tcurrentTime $AnimationStart;\n\t\t\t\t\n\t\t\t\t// Set value for first frame\n\t\t\t\tsetAttr ($PathSubCurve + \".maxValue\") $AnimationStartValue;\n\t\t\t\t\n\t\t\t\t// Set key\n\t\t\t\tsetKeyframe ($PathSubCurve + \".maxValue\");\n\t\t\t\t\n\t\t\t\t// Go to second frame\n\t\t\t\tcurrentTime $AnimationEnd;\n\t\t\t\t\n\t\t\t\t// Set value for second frame\n\t\t\t\tsetAttr ($PathSubCurve + \".maxValue\") $AnimationEndValue;\n\t\t\t\t\n\t\t\t\t// Set key\n\t\t\t\tsetKeyframe ($PathSubCurve + \".maxValue\");\n\t\t\t\t\n\t\t\t\t// Option for animation with extrusion\n\t\t\t\tif ($AnimExtOption == 0)\n\t\t\t\t{\n\t\t\t\t\t// Clear selection list\n\t\t\t\t\tselect -clear;\n\t\t\t\t\t\n\t\t\t\t\t// Create circle profile and it is automatic selected\n\t\t\t\t\tCreateCircle ($ProfileName, $ProfileSections, $ProfileRadius, $RadiusB);\n\t\t\t\t\t\n\t\t\t\t\t// Add the animated subcurve to selection list and execute extrusion\n\t\t\t\t\tselect -add $PathOutputCurve;\n\t\t\t\t\t\n\t\t\t\t\tExtrudeAlongPath ($ExtrusionScale);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n\n///////////////////////////////////\n// DuplicationAnimation function //\n///////////////////////////////////\n\n/*\nproc DuplicationAnimation ()\n{\n\t\n}\n*/\n\n////////////////////////\n// CVSH Main function //\n////////////////////////\n\nproc CVSHMain (string $WindowName, int $Seed)\n{\n\t// Show main window\n\tshowWindow $WindowName;\n\t\n\t/* Get time\n\tstring $Time = `system \"time\"`;\n\t\n\tprint (\"CVSH Tool start Time: \" + $Time + \"\\n\");\n\t\n\tint $Timei = $Time;\n\t\n\tprint (\"CVSH Tool start Time: \" + $Timei + \"\\n\");\n\t*/\n\t\n\t// Seed random values\n\tInitRandom ($Seed);\n}\n\n// Call Main function\n\nCVSHMain ($CVSHWindow, 128);" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "growFacesWithinRegion" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "growFacesWithinRegion" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "growFacesWithinRegion.png" 
        -image1 "growFacesWithinRegion.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "source \"growFacesWithinRegion1_3.mel\"\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "quadPatcher" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "quadPatcher" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "quadPatcher_1.png" 
        -image1 "quadPatcher_1.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import quadPatcher\nimportlib.reload(quadPatcher)\nquadPatcher.quadPatcherUI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 33
        -enable 1
        -width 36
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Instant_Meshes the selected mesh" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Instant_Meshes the selected mesh" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/home/mau/maya/2023/extra/mauTools/1.3/icons/Instant_Meshes.png" 
        -image1 "/home/mau/maya/2023/extra/mauTools/1.3/icons/Instant_Meshes.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import instatMesh, importlib\nimportlib.reload(instatMesh)\ninstatMesh.process_selected()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
        -mi "25000" ( "import instatMesh, importlib\nimportlib.reload(instatMesh)\ninstatMesh.process_selected(25000)" )
        -mip 0
        -mi "10000" ( "import instatMesh, importlib\nimportlib.reload(instatMesh)\ninstatMesh.process_selected(10000)" )
        -mip 1
        -mi "5000" ( "import instatMesh, importlib\nimportlib.reload(instatMesh)\ninstatMesh.process_selected(5000)" )
        -mip 2
        -mi "1000" ( "import instatMesh, importlib\nimportlib.reload(instatMesh)\ninstatMesh.process_selected(1000)" )
        -mip 3
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "speedCut" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "speedCut" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "spCt" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport speedCut1_67\nfrom speedCut1_67 import *\nimportlib.reload(speedCut1_67)\nspeedCut1_67.jwSpeedCutUI()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "mRivet" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "mRivet.png" 
        -image1 "mRivet.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "print 'Right Click'" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
        -mi "Mulitple Rivet" ( "import mRivet as mr,importlib;importlib.reload(mr);mr.mRivet(0)" )
        -mip 0
        -mi "Pair Rivet" ( "import mRivet as mr,importlib;importlib.reload(mr);mr.mRivet(1)" )
        -mip 1
        -mi "Multiple Follicle RivetNoUV" ( "import mRivet as mr,importlib;importlib.reload(mr);mr.mRivet(2)" )
        -mip 2
        -mi "Pair Follicle RivetNoUV" ( "import mRivet as mr,importlib;importlib.reload(mr);mr.mRivet(3)" )
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "directionalBB" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "directionalBB.png" 
        -image1 "directionalBB.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "print 'Right Click'" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
        -mi "Centroid Locator" ( "import matrixUtil,importlib;importlib.reload(matrixUtil);matrixUtil.mCentroid()" )
        -mip 0
        -mi "Directional Locator" ( "import directionalBB as BB,importlib;importlib.reload(BB);BB.directionalBB(0)" )
        -mip 1
        -mi "Directional Pivot" ( "import directionalBB as BB,importlib;importlib.reload(BB);BB.directionalBB(1)" )
        -mip 2
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mimmo Proxy Maker" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "MinimoProxyMaker" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polySmoothProxy.png" 
        -image1 "polySmoothProxy.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import mProxy as mP\nimport importlib\nimportlib.reload(mP)\nmP.makeProxy_UI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "xyShrinkWrap" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "xyShrinkWrap" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "xyW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "source \"xyShrinkWrap.mel\";xyShrinkWrap();\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "setV" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "setV" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "setV" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "source \"setValue.mel\";setValue();\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "DUP" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "DUP" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "DUP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import DUPExtract\nimport importlib\nimportlib.reload(DUPExtract)\nDUPExtract.DUPExtract()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "mau wrap" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "mau wrap" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "mWR" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport mauUtility as mU\nimportlib.reload(mU)\nmU.mauWrap()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Get the influece wrap deformer" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Get the influece wrap deformer" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "gWR" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport mauUtility as mU\nimportlib.reload(mU)\nmU.mGetWrap()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 0
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Open weights editor tool" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Weights Editor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyColorSetModify.png" 
        -image1 "polyColorSetModify.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -version "2016" 
        -command "import importlib\nfrom weights_editor_tool import weights_editor\nimportlib.reload(weights_editor)\nweights_editor.run()" 
        -sourceType "python" 
        -commandRepeatable 0
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "on off  joints" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "on off  joints" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "JNT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "print 'Right Click'" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
        -mi "jont_ON" ( "jnts = cmds.ls(type='joint')\nfor j in jnts:\n    cmds.setAttr(j+'.drawStyle', 0)" )
        -mip 0
        -mi "joint_OFF" ( "jnts = cmds.ls(type='joint')\nfor j in jnts:\n    cmds.setAttr(j+'.drawStyle', 2)" )
        -mip 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Paint Skin Weights" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Paint Skin Weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "paintSkinWeights.png" 
        -image1 "paintSkinWeights.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "ArtPaintSkinWeightsTool" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "MAXSkinWeightTool" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "MAXSkinWeightTool" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "MAX" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "source \"MAXSkinWeightTool.mel\";\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "dd_WeightTools" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "dd_WeightTools" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ssdW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport sdd_weightTools as sdd\nimportlib.reload(sdd)\nsdd.sdd_weightTools()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "mirrorWeightsUI" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "mirrorWeightsUI" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "W<>W" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport mirrorWeightsUI\nimportlib.reload(mirrorWeightsUI)\nmirrorWeightsUI.mirrorWeightsUI()()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "fari_deformersWeightsEditor" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "fari_deformersWeightsEditor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/home/mau/maya/2023/extra/mauTools/1.3/icons/fari_weigth.png" 
        -image1 "/home/mau/maya/2023/extra/mauTools/1.3/icons/fari_weigth.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport fari_deformersWeightsEditor\nimportlib.reload(fari_deformersWeightsEditor)\nfari_deformersWeightsEditor.DeformersWeightsEditor.showUI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "paintSkinWeights" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "paintSkinWeights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/paintSkinWeightsCtx.png" 
        -image1 "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/paintSkinWeightsCtx.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "ArtPaintSkinWeightsTool;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "paintSmoothWeights" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "paintSmoothWeights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/paintSmoothWeightsCtx.png" 
        -image1 "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/paintSmoothWeightsCtx.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "from rjSkinningTools import paintSmoothWeightsCtx; paintSmoothWeightsCtx.paint()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "paintRemoveInfluence" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "paintRemoveInfluence" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/paintRemoveInfluenceCtx.png" 
        -image1 "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/paintRemoveInfluenceCtx.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import rjSkinningTools.paintRemoveInfluenceCtx.ui; rjSkinningTools.paintRemoveInfluenceCtx.ui.show()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "tweakVertexWeights" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "tweakVertexWeights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/tweakVertexWeights.png" 
        -image1 "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/tweakVertexWeights.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import rjSkinningTools.tweakVertexWeights.ui; rjSkinningTools.tweakVertexWeights.ui.show()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "softSelectionToWeights" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "softSelectionToWeights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/softSelectionToWeights.png" 
        -image1 "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/scripts/rjSkinningTools/icons/softSelectionToWeights.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import rjSkinningTools.softSelectionToWeights.ui; rjSkinningTools.softSelectionToWeights.ui.show()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Rigbox Reborn Curve Tool" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Control Maker" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/mauri/Documents/maya/extra/2024/mauTools/1.4/icons/rr_CTRL_BOX_icon.png" 
        -image1 "C:/Users/mauri/Documents/maya/extra/2024/mauTools/1.4/icons/rr_CTRL_BOX_icon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import RigBox3.rr_main_curves\nRigBox3.rr_main_curves.window_creation()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Color Controllers" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Color Controllers" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "COL" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "sel = cmds.ls(sl=True)\nfor s in sel:\n    cmds.setAttr(s+'.overrideEnabled', 1)\n    cmds.setAttr(s+\".overrideColor\", 17)\n    if 'L' in s[0]:\n        cmds.setAttr(s+'.overrideEnabled', 1)\n        cmds.setAttr(s+\".overrideColor\", 6)\n    elif 'R' in s[0]:\n        cmds.setAttr(s+'.overrideEnabled', 1)\n        cmds.setAttr(s+\".overrideColor\", 13)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "curveRecreator" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "curveRecreator" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "crvRC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport curveRecreator\nimportlib.reload(curveRecreator)\ncurveRecreator.StartUI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mirror Controllers shape" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Mirror Controllers shape" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "MIRROR" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "cmds.confirmDialog(t='Error', m='Please right click to select action')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
        -mi "Mirror Shape on X" ( "import mauUtility\nreload(mauUtility)\nmauUtility.mirrorCtrl('x')\n" )
        -mip 0
        -mi "Mirror Shape on Y" ( "import mauUtility\nreload(mauUtility)\nmauUtility.mirrorCtrl('y')\n" )
        -mip 1
        -mi "Mirror Shape on Z" ( "import mauUtility\nreload(mauUtility)\nmauUtility.mirrorCtrl('z')" )
        -mip 2
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Eye Rigger" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Eye Rigger" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/home/mgiglioli/maya/2018/prefs/icons/UKDP_AutoEyelidsRig_icon.png" 
        -image1 "/home/mgiglioli/maya/2018/prefs/icons/UKDP_AutoEyelidsRig_icon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "# import importlib\n# import UKDP_AER\n# importlib.reload (UKDP_AER)\n# UKDP_AER.autoEyelidsRig.UI\n# -*- coding: utf-8 -*-\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n'\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n'\tAutoEyelidsRig - From Marco Giordano's tutorials :\t'\n'\t\tPart 1 : https://vimeo.com/66583205\t\t\t\t'\n'\t\tPart 2A : https://vimeo.com/67012979\t\t\t'\n'\t\tPart 2B : https://vimeo.com/67992459\t\t\t'\n'\t\tPart 3 : https://vimeo.com/67013935\t\t\t\t'\n'\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n\nMadeBy = \"UKDP\"\nContact = \"ukdp.scripts@gmail.com\"\nScriptName = \"Auto Eyelids Rig\" # AER\nVersion = \"1.0\"\n\n\nfrom maya import cmds, OpenMaya\nimport math\n\n\nclass AER :\n\t'''Automatically rig eyelids (note: works only for ball-typed eyes).''' # print(AER.__doc__)\n\t\n\tdef __init__ (self):\n\t\tself.parentJnt = None\n\t\tself.parentCtrl = None\n\t\tself.eyeLoc = None\n\t\tself.eyeName = None\n\t\tself.upperLidVtx = None\n\t\tself.lowerLidVtx = None\n\t\n\t\n\t## PREREQUISITE FOR RIG ##\t\n\tdef eyeParentJnt (self, *args):\n\t\t'''Organise rig hierarchy - Define a parent joint for the eyelid rig.\n\t\t\n\t\tCalled by 'UI' function.\n\t\tCall functions: None '''\n\n\t\tparentJointSel = cmds.ls (sl = 1, typ = \"joint\")\n\n\t\tif len(parentJointSel) != 0:\n\t\t\tself.parentJnt = parentJointSel [0]\n\t\t\tcmds.textField (self.txtfJnt, e = 1, tx = self.parentJnt)\n\t\telse :\n\t\t\tself.parentJnt = None\n\t\t\tcmds.textField (self.txtfJnt, e = 1, tx = \"\")\n\t\t\tcmds.error (\"Wrong selection, please select a joint.\\n\")\n\t\n\t\n\tdef eyeParentCtrl (self, *args):\n\t\t'''Organise rig hierarchy - Define a parent controller for the eyelid rig.\n\t\t\n\t\tCalled by 'UI' function.\n\t\tCall functions: None '''\n\n\t\tparentCtrlSel = cmds.filterExpand (sm = 9)\n\n\t\tif parentCtrlSel != None:\n\t\t\tparentCtrlShape = parentCtrlSel [0]\n\t\t\tself.parentCtrl = cmds.listRelatives ((parentCtrlSel [0]), parent = 1) [0]\n\t\t\tprint(self.parentCtrl)\n\t\t\tcmds.textField (self.txtfCtrl, e = 1, tx = self.parentCtrl)\n\t\telse:\n\t\t\tself.parentCtrl = None\n\t\t\tcmds.textField (self.txtfCtrl, e = 1, tx = \"\")\n\t\t\tcmds.error (\"Wrong selection, please select a curve controller.\\n\")\n\t\n\t\t\n\tdef placeEyeCenter (self, *args):\n\t\t'''Place locator in the center of the eyeball.\n\t\t\n\t\tCalled by 'UI' function.\n\t\tCall functions: None '''\n\t\t\n\t\tselection = cmds.filterExpand (sm = 12)\n\t\tself.eyeName = cmds.textField (self.txtfEye, q = 1, tx = 1)\n\t\t\n\t\tif selection == None :\n\t\t\tself.eyeLoc = None\n\t\t\tself.eyeName = None\n\t\t\tcmds.error (\"Please select the eyeball.\\n\")\n\t\telse :\n\t\t\teyeball = selection [0]\n\t\t\tif not self.eyeName :\n\t\t\t\tself.eyeName = name = \"DefaultEye\"\n\t\t\telse :\n\t\t\t\tname = self.eyeName\n\t\t\t\n\t\t\teyeTemp = cmds.duplicate (eyeball) [0]\n\t\t\tcmds.xform (eyeTemp, cp = 1)\n\t\t\tself.eyeLoc = cmds.spaceLocator (n = (name + \"_eyeCenter_locator\")) [0]\n\t\t\tcnstrTemp = cmds.pointConstraint (eyeTemp, self.eyeLoc)\n\t\t\tcmds.delete (cnstrTemp)\n\t\t\tcmds.delete (eyeTemp)\n\t\t\t# lock locator\n\t\t\tcmds.setAttr (self.eyeLoc + \".overrideEnabled\", 1)\n\t\t\tcmds.setAttr (self.eyeLoc + \".overrideDisplayType\", 2)\n\t\t\t\n\t\t\tcmds.select (cl = 1)\n\n\t\t\t# Update UI\n\t\t\tcmds.textField (self.txtfLoc, e = 1, tx = self.eyeLoc)\n\t\t\tcmds.button (self.btnPlaceCenter, e = 1, en = 0)\n\t\t\tcmds.button (self.btnUndoPlaceCenter, e = 1, en = 1)\n\t\n\t\n\tdef placeEyeCenterUndo (self, *args):\n\t\t'''Undo 'placeEyeCenter' function.\n\t\t\n\t\tCalled by 'UI' function.\n\t\tCall functions: None '''\n\t\t\n\t\ttry :\n\t\t\tcmds.delete (self.eyeLoc)\n\t\texcept ValueError :\n\t\t\tcmds.warning (\"'\" + self.eyeLoc + \"'\" + \" doesn't exists.\\n\")\n\t\tfinally :\n\t\t\tself.eyeLoc = None\n\t\t\tself.eyeName = None\n\t\t\tcmds.textField (self.txtfLoc, e = 1, tx = \"\")\n\t\t\tcmds.button (self.btnPlaceCenter, e = 1, en = 1)\n\t\t\tcmds.button (self.btnUndoPlaceCenter, e = 1, en = 0)\n\t\n\t\n\tdef upLidVtxSet (self, *args):\n\t\t'''List selected vertices as upper lid vertices.\n\t\t\n\t\tCalled by 'UI' function.\n\t\tCall functions: None '''\n\t\t\n\t\tself.upperLidVtx = cmds.filterExpand (sm = 31)\n\t\t\n\t\tif self.upperLidVtx == None :\n\t\t\tcmds.scrollField (self.scrollfUpLid, e = 1, cl = 1)\n\t\t\tcmds.error (\"Please select vertices of the upper lid.\\n\")\n\t\telse :\n\t\t\tcmds.scrollField (self.scrollfUpLid, e = 1, cl = 1)\n\t\t\tfor vtx in self.upperLidVtx :\n\t\t\t\tvtxNum = vtx.rpartition(\".\")[2] # <type 'unicode'>\n\t\t\t\tcmds.scrollField (self.scrollfUpLid, e = 1, it = (str (vtxNum) + \" \"))\n\t\n\t\n\tdef lowLidVtxSet (self, *args):\n\t\t'''List selected vertices as lower lid vertices.\n\t\t\n\t\tCalled by 'UI' function.\n\t\tCall functions: None '''\n\t\t\n\t\tself.lowerLidVtx = cmds.filterExpand (sm = 31)\n\t\t\n\t\tif self.lowerLidVtx == None :\n\t\t\tcmds.scrollField (self.scrollfLowLid, e = 1, cl = 1)\n\t\t\tcmds.error (\"Please select vertices of the lower lid.\\n\")\n\t\telse :\n\t\t\tcmds.scrollField (self.scrollfLowLid, e = 1, cl = 1)\n\t\t\tfor vtx in self.lowerLidVtx :\n\t\t\t\tvtxNum = vtx.rpartition(\".\")[2] # <type 'unicode'>\n\t\t\t\tcmds.scrollField (self.scrollfLowLid, e = 1, it = (str (vtxNum) + \" \"))\n\t## PREREQUISITE FOR RIG -end ##\n\t\n\t\n\t## FUNCTIONS TO BUILD RIG ##\n\tdef vtxToJnt (self, eyeCenter, eyePrefix, upperLidVtx, lowerLidVtx, parentJnt):\n\t\t'''Creates one joint per vertex of the eyelid and parent it to the center of the eye.\n\t\t\n\t\tCalled by 'buildRig' function.\n\t\tCall functions: None '''\n\t\t\n\t\tcmds.select (cl = 1)\n\t\t\n\t\tself.upLidJntList = []\n\t\tself.lowLidJntList = []\n\t\t\n\t\t# Find vertex in common in both lists and remove them to avoid double joint creation\n\t\tcommonVtx = set(upperLidVtx) & set(lowerLidVtx)\n\t\tfor vtx in commonVtx:\n\t\t\tlowerLidVtx.remove (vtx)\n\t\t\n\t\t# Organize rig hierarchy\n\t\thierarchySecondGrp = cmds.group (n = (eyePrefix + \"_Eyelids_JNT_GRP\"), em = 1)\n\t\thierarchyUpGrp = cmds.group (n = (eyePrefix + \"_UpEyelid_joints_GRP\"), em = 1)\n\t\thierarchyLowGrp = cmds.group (n = (eyePrefix + \"_LowEyelid_joints_GRP\"), em = 1)\n\t\t\n\t\tcmds.parent (hierarchyUpGrp, hierarchySecondGrp)\n\t\tcmds.parent (hierarchyLowGrp, hierarchySecondGrp)\n\t\t\n\t\thierarchyMainGrp = \"Eyelids_JNT_GRP\"\n\t\t\n\t\tif parentJnt != None :\n\t\t\tjntChildren = cmds.listRelatives (parentJnt, children = 1)\n\t\t\tif hierarchyMainGrp in jntChildren :\n\t\t\t\tcmds.parent (hierarchySecondGrp, (parentJnt + \"|\" + hierarchyMainGrp))\n\t\t\telse :\n\t\t\t\tcmds.group (n = hierarchyMainGrp, em = 1, p = parentJnt)\n\t\t\t\tcmds.parent (hierarchySecondGrp, (parentJnt + \"|\" + hierarchyMainGrp))\n\t\telse :\n\t\t\tif cmds.objExists (\"|\" + hierarchyMainGrp) :\n\t\t\t\tcmds.parent (hierarchySecondGrp, (\"|\" + hierarchyMainGrp))\n\t\t\telse :\n\t\t\t\tcmds.group (n = hierarchyMainGrp, em = 1)\n\t\t\t\tcmds.parent (hierarchySecondGrp, (\"|\" + hierarchyMainGrp))\n\t\t\n\t\t# Upper eyelid\n\t\tx = 1\n\t\tfor upVtx in upperLidVtx :\n\t\t\tcmds.select (cl = 1)\n\t\t\tjnt = cmds.joint (rad = 0.01, n = (eyePrefix + \"_UpEyelid_JNT%d_SKIN\" % x))\n\t\t\tself.upLidJntList.append (jnt)\n\t\t\tposition = cmds.xform (upVtx, q = 1, ws = 1, t = 1)\n\t\t\tcmds.xform (jnt, ws = 1, t = position)\n\t\t\tcenterPosition = cmds.xform (eyeCenter, q = 1, ws = 1, t = 1)\n\t\t\tcmds.select (cl = 1)\n\t\t\tcenterJnt = cmds.joint (rad = 0.01, n = (eyePrefix + \"_UpEyelid_JNT%d_BASE\" % x))\n\t\t\tcmds.xform (centerJnt, ws = 1, t = centerPosition)\n\t\t\tcmds.parent (jnt, centerJnt)\n\t\t\tcmds.joint (centerJnt, e = 1, oj = \"xyz\", secondaryAxisOrient = \"yup\", ch = 1, zso = 1)\n\t\t\tcmds.parent (centerJnt, hierarchyUpGrp)\n\t\t\tx += 1\n\t\t\n\t\t# Lower eyelid\n\t\ty = 1\n\t\tfor lowVtx in lowerLidVtx :\n\t\t\tcmds.select (cl = 1)\n\t\t\tjnt = cmds.joint (rad = 0.01, n = (eyePrefix + \"_LowEyelid_JNT%d_SKIN\" % y))\n\t\t\tself.lowLidJntList.append (jnt)\n\t\t\tposition = cmds.xform (lowVtx, q = 1, ws = 1, t = 1)\n\t\t\tcmds.xform (jnt, ws = 1, t = position)\n\t\t\tcenterPosition = cmds.xform (eyeCenter, q = 1, ws = 1, t = 1)\n\t\t\tcmds.select (cl = 1)\n\t\t\tcenterJnt = cmds.joint (rad = 0.01, n = (eyePrefix + \"_LowEyelid_JNT%d_BASE\" % y))\n\t\t\tcmds.xform (centerJnt, ws = 1, t = centerPosition)\n\t\t\tcmds.parent (jnt, centerJnt)\n\t\t\tcmds.joint (centerJnt, e = 1, oj = \"xyz\", secondaryAxisOrient = \"yup\", ch = 1, zso = 1)\n\t\t\tcmds.parent (centerJnt, hierarchyLowGrp)\n\t\t\ty += 1\n\t\t\n\t\t# Creates a set containing the joints for skinning\n\t\tjntsForSkin = []\n\t\tjntsForSkin.extend (self.upLidJntList)\n\t\tjntsForSkin.extend (self.lowLidJntList)\n\t\tsetSkinJnts = cmds.sets (em = 1, n = (eyePrefix + \"_jointsForSkin\"))\n\t\tfor jnt in jntsForSkin:\n\t\t\tcmds.sets (jnt, e = 1, forceElement = setSkinJnts)\n\t\n\t\n\tdef placeRigLoc (self, eyePrefix, upLidJntList, lowLidJntList):\n\t\t'''Creates one locator per eyelid vertex and constrain each joint to it (aim).\n\t\t\n\t\tCalled by 'buildRig' function.\n\t\tCall functions: None '''\n\t\t\n\t\tself.upLidLocList = []\n\t\tself.lowLidLocList = []\n\t\t\n\t\t# Organize rig hierarchy\n\t\thierarchyThirdGrp = cmds.group (n = (eyePrefix + \"_Eyelids_locator_GRP\"), em = 1)\n\t\thierarchyUpGrp = cmds.group (n = (eyePrefix + \"_UpEyelid_locator_GRP\"), em = 1)\n\t\thierarchyLowGrp = cmds.group (n = (eyePrefix + \"_LowEyelid_locator_GRP\"), em = 1)\n\t\t\n\t\tcmds.parent (hierarchyUpGrp, hierarchyThirdGrp)\n\t\tcmds.parent (hierarchyLowGrp, hierarchyThirdGrp)\n\t\t\n\t\tself.grpTheseEyelidsRig = (eyePrefix + \"_Eyelids_RIG_GRP\")\n\t\tif cmds.objExists (eyePrefix + \"_Eyelids_RIG_GRP\"):\n\t\t\tcmds.parent (hierarchyThirdGrp, self.grpTheseEyelidsRig)\n\t\telse:\n\t\t\tself.grpTheseEyelidsRig = cmds.group (n = (eyePrefix + \"_Eyelids_RIG_GRP\"), em = 1)\n\t\t\tcmds.parent (hierarchyThirdGrp, self.grpTheseEyelidsRig)\n\t\t\n\t\tgrpAllEyelidsRig = \"Eyelids_RIG_GRP\"\n\t\tif cmds.objExists (\"Eyelids_RIG_GRP\"):\n\t\t\tcmds.parent (self.grpTheseEyelidsRig, grpAllEyelidsRig)\n\t\telse:\n\t\t\tgrpAllEyelidsRig = cmds.group (n = \"Eyelids_RIG_GRP\", em = 1)\n\t\t\tcmds.parent (self.grpTheseEyelidsRig, grpAllEyelidsRig)\n\t\tcmds.setAttr (grpAllEyelidsRig + \".visibility\", 0)\n\t\t\n\t\t# Upper eyelid\n\t\tfor upLidJnt in upLidJntList :\n\t\t\tlocName = upLidJnt.replace (\"_SKIN\", \"_locator\")\n\t\t\tloc = cmds.spaceLocator (n = locName) [0]\n\t\t\tself.upLidLocList.append (loc)\n\t\t\tcmds.setAttr (loc + \"Shape.localScaleX\", 0.025)\n\t\t\tcmds.setAttr (loc + \"Shape.localScaleY\", 0.025)\n\t\t\tcmds.setAttr (loc + \"Shape.localScaleZ\", 0.025)\n\t\t\tpositionLoc = cmds.xform (upLidJnt, q = 1, ws = 1, t = 1)\n\t\t\tcmds.xform (loc, ws = 1, t = positionLoc)\n\t\t\tparentJnt = cmds.listRelatives (upLidJnt, p = 1) [0]\n\t\t\tcmds.aimConstraint (loc, parentJnt, weight = 1, aimVector = (1,0,0), upVector = (0,1,0), worldUpType = \"vector\", worldUpVector = (0,1,0))\n\t\t\tcmds.parent (loc, hierarchyUpGrp)\n\t\t\n\t\t# Lower eyelid\n\t\tfor lowLidJnt in lowLidJntList :\n\t\t\tlocName = lowLidJnt.replace (\"_SKIN\", \"_locator\")\n\t\t\tloc = cmds.spaceLocator (n = locName) [0]\n\t\t\tself.lowLidLocList.append (loc)\n\t\t\tcmds.setAttr (loc + \"Shape.localScaleX\", 0.025)\n\t\t\tcmds.setAttr (loc + \"Shape.localScaleY\", 0.025)\n\t\t\tcmds.setAttr (loc + \"Shape.localScaleZ\", 0.025)\n\t\t\tpositionLoc = cmds.xform (lowLidJnt, q = 1, ws = 1, t = 1)\n\t\t\tcmds.xform (loc, ws = 1, t = positionLoc)\n\t\t\tparentJnt = cmds.listRelatives (lowLidJnt, p = 1) [0]\n\t\t\tcmds.aimConstraint (loc, parentJnt, weight = 1, aimVector = (1,0,0), upVector = (0,1,0), worldUpType = \"vector\", worldUpVector = (0,1,0))\n\t\t\tcmds.parent (loc, hierarchyLowGrp)\n\t\n\t\n\tdef createEyelidsCrv (self, eyePrefix, upperLidVtx, lowerLidVtx, rigGrp):\n\t\t'''Creates nurbsCurve out of each lid vertices.\n\t\t\n\t\tCalled by 'buildRig' function.\n\t\tCall functions: None '''\n\t\t\n\t\tcmds.select (cl = 1)\n\t\t\n\t\t# Organize rig hierarchy\n\t\tself.hierarchyCrvGrp = cmds.group (n = (eyePrefix + \"_Eyelids_curves_GRP\"), em = 1)\n\t\tself.hierarchyUpCrvGrp = cmds.group (n = (eyePrefix + \"_UpEyelid_curves_GRP\"), em = 1)\n\t\tself.hierarchyLowCrvGrp = cmds.group (n = (eyePrefix + \"_LowEyelid_curves_GRP\"), em = 1)\n\t\t\n\t\tcmds.parent (self.hierarchyUpCrvGrp, self.hierarchyCrvGrp)\n\t\tcmds.parent (self.hierarchyLowCrvGrp, self.hierarchyCrvGrp)\n\t\tcmds.parent (self.hierarchyCrvGrp, rigGrp)\n\t\t\n\t\t# Upper eyelid\n\t\tcmds.select (upperLidVtx)\n\t\tedgeUpLid = cmds.polyListComponentConversion (fv = 1, te = 1, internal = 1)\n\t\tcmds.select (edgeUpLid)\n\t\ttempCrvUp = cmds.polyToCurve (form = 0, degree = 1) [0]\n\t\tcmds.select (tempCrvUp)\n\t\tcmds.delete (ch = 1)\n\t\tupLidCrvName = eyePrefix + \"_UpEyelid_BASE_curve\"\n\t\tself.upLidCrv = cmds.rename (tempCrvUp, upLidCrvName)\n\t\tcmds.parent (self.upLidCrv, self.hierarchyUpCrvGrp)\n\t\t\n\t\t# Lower eyelid\n\t\tcmds.select (lowerLidVtx)\n\t\tedgeLowLid = cmds.polyListComponentConversion (fv = 1, te = 1, internal = 1)\n\t\tcmds.select (edgeLowLid)\n\t\ttempCrvLow = cmds.polyToCurve (form = 0, degree = 1) [0]\n\t\tcmds.select (tempCrvLow)\n\t\tcmds.delete (ch = 1)\n\t\tlowLidCrvName = eyePrefix + \"_LowEyelid_BASE_curve\"\n\t\tself.lowLidCrv = cmds.rename (tempCrvLow, lowLidCrvName)\n\t\tcmds.parent (self.lowLidCrv, self.hierarchyLowCrvGrp)\n\t\n\t\n\tdef getDagPath (self, objectName):\n\t\t'''MARCO GIORDANO'S CODE (http://www.marcogiordanotd.com/)\n\t\t\n\t\tCalled by 'getUParam' function.\n\t\tCall functions: None '''\n\t\n\t\tif isinstance(objectName, list)==True:\n\t\t\toNodeList=[]\n\t\t\tfor o in objectName:\n\t\t\t\tselectionList = OpenMaya.MSelectionList()\n\t\t\t\tselectionList.add(o)\n\t\t\t\toNode = OpenMaya.MDagPath()\n\t\t\t\tselectionList.getDagPath(0, oNode)\n\t\t\t\toNodeList.append(oNode)\n\t\t\treturn oNodeList\n\t\telse:\n\t\t\tselectionList = OpenMaya.MSelectionList()\n\t\t\tselectionList.add(objectName)\n\t\t\toNode = OpenMaya.MDagPath()\n\t\t\tselectionList.getDagPath(0, oNode)\n\t\t\treturn oNode\n\t\n\t\n\tdef getUParam (self, pnt = [], crv = None, *args):\n\t\t'''MARCO GIORDANO'S CODE (http://www.marcogiordanotd.com/) - Function called by \n\t\t\n\t\tCalled by 'connectLocToCrv' function.\n\t\tCall functions: 'getDagPath' '''\n\t\t\n\t\tpoint = OpenMaya.MPoint(pnt[0],pnt[1],pnt[2])\n\t\tcurveFn = OpenMaya.MFnNurbsCurve(self.getDagPath(crv))\n\t\tparamUtill=OpenMaya.MScriptUtil()\n\t\tparamPtr=paramUtill.asDoublePtr()\n\t\tisOnCurve = curveFn.isPointOnCurve(point)\n\t\tif isOnCurve == True:\n\t\t\tcurveFn.getParamAtPoint(point , paramPtr,0.001,OpenMaya.MSpace.kObject )\n\t\telse :\n\t\t\tpoint = curveFn.closestPoint(point,paramPtr,0.001,OpenMaya.MSpace.kObject)\n\t\t\tcurveFn.getParamAtPoint(point , paramPtr,0.001,OpenMaya.MSpace.kObject )\n\t\t\n\t\tparam = paramUtill.getDouble(paramPtr)  \n\t\treturn param\n\t\n\t\n\tdef connectLocToCrv (self, upLidLocList, upLidCrv, lowLidLocList, lowLidCrv):\n\t\t'''Connect locators to lid curves via pointOnCurveInfo nodes.\n\t\t\n\t\tCalled by 'buildRig' function.\n\t\tCall functions: None '''\n\t\t\n\t\t# Upper eyelid\n\t\tfor upLidLoc in upLidLocList :\n\t\t\tposition = cmds.xform (upLidLoc, q = 1, ws = 1, t = 1)\n\t\t\tu = self.getUParam (position, upLidCrv)\n\t\t\tname = upLidLoc.replace (\"_locator\", \"_pointOnCurveInfo\")\n\t\t\tptOnCrvInfo = cmds.createNode (\"pointOnCurveInfo\", n = name)\n\t\t\tcmds.connectAttr (upLidCrv + \".worldSpace\", ptOnCrvInfo + \".inputCurve\")\n\t\t\tcmds.setAttr (ptOnCrvInfo + \".parameter\", u)\n\t\t\tcmds.connectAttr (ptOnCrvInfo + \".position\", upLidLoc + \".t\")\n\t\t\n\t\t# Lower eyelid\n\t\tfor lowLidLoc in lowLidLocList :\n\t\t\tposition = cmds.xform (lowLidLoc, q = 1, ws = 1, t = 1)\n\t\t\tu = self.getUParam (position, lowLidCrv)\n\t\t\tname = lowLidLoc.replace (\"_locator\", \"_pointOnCurveInfo\")\n\t\t\tptOnCrvInfo = cmds.createNode (\"pointOnCurveInfo\", n = name)\n\t\t\tcmds.connectAttr (lowLidCrv + \".worldSpace\", ptOnCrvInfo + \".inputCurve\")\n\t\t\tcmds.setAttr (ptOnCrvInfo + \".parameter\", u)\n\t\t\tcmds.connectAttr (ptOnCrvInfo + \".position\", lowLidLoc + \".t\")\n\t\n\t\n\tdef eyelidsCorners (self, upLidEpCrvPos, upLidCrv, lowLidEpCrvPos, lowLidCrv):\n\t\t'''Define eye corners position (for example if upper lid and lower lid curves are not 'closed').\n\t\t\n\t\tCalled by 'createDriverCrv' function.\n\t\tCall functions: None '''\n\t\t\n\t\tcornerUp1 = upLidEpCrvPos [0]\n\t\tcornerUp2 = upLidEpCrvPos [4]\n\t\tcornerLow1 = lowLidEpCrvPos [0]\n\t\tcornerLow2 = lowLidEpCrvPos [4]\n\t\t\n\t\t# distance formula is: d = sqrt((Ax-Bx)**2 + (Ay-By)**2 + (Az-Bz)**2)\n\t\tdistTEMP1 = math.sqrt( (cornerUp1[0] - cornerLow1[0])**2 + (cornerUp1[1] - cornerLow1[1])**2 + (cornerUp1[2] - cornerLow1[2])**2 )\n\t\tdistTEMP2 = math.sqrt( (cornerUp1[0] - cornerLow2[0])**2 + (cornerUp1[1] - cornerLow2[1])**2 + (cornerUp1[2] - cornerLow2[2])**2 )\n\t\t\n\t\t# If cornerUp1 is closer to cornerLow2 than cornerLow1,\n\t\t# then the center of the distance between cornerUp1 and cornerLow2\n\t\t# will be the \"CornerA\" and \"CornerB\" will be defined by\n\t\t# the other two points.\n\t\t\n\t\tif distTEMP1 > distTEMP2 :\n\t\t\t# CornerA\n\t\t\tcmds.select (cl = 1)\n\t\t\tcmds.select (upLidCrv + \".ep[0]\")\n\t\t\tcmds.select (lowLidCrv + \".ep[4]\", tgl = 1)\n\t\t\tclusterTEMP1 = cmds.cluster (en = 1) [1]\n\t\t\tlocTEMP1 = cmds.spaceLocator () [0]\n\t\t\tcmds.pointConstraint (clusterTEMP1, locTEMP1, mo = 0, w = 1)\n\t\t\tself.cornerAPos = cmds.xform (locTEMP1, q = 1, ws = 1, t = 1)\n\t\t\tcmds.delete (clusterTEMP1)\n\t\t\tcmds.delete (locTEMP1)\n\t\t\t# CornerB\n\t\t\tcmds.select (cl = 1)\n\t\t\tcmds.select (upLidCrv + \".ep[4]\")\n\t\t\tcmds.select (lowLidCrv + \".ep[0]\", tgl = 1)\n\t\t\tclusterTEMP2 = cmds.cluster (en = 1) [1]\n\t\t\tlocTEMP2 = cmds.spaceLocator () [0]\n\t\t\tcmds.pointConstraint (clusterTEMP2, locTEMP2, mo = 0, w = 1)\n\t\t\tself.cornerBPos = cmds.xform (locTEMP2, q = 1, ws = 1, t = 1)\n\t\t\tcmds.delete (clusterTEMP2)\n\t\t\tcmds.delete (locTEMP2)\n\t\telse:\n\t\t\t# CornerA\n\t\t\tcmds.select (cl = 1)\n\t\t\tcmds.select (upLidCrv + \".ep[0]\")\n\t\t\tcmds.select (lowLidCrv + \".ep[0]\", tgl = 1)\n\t\t\tclusterTEMP1 = cmds.cluster (en = 1) [1]\n\t\t\tlocTEMP1 = cmds.spaceLocator () [0]\n\t\t\tcmds.pointConstraint (clusterTEMP1, locTEMP1, mo = 0, w = 1)\n\t\t\tself.cornerAPos = cmds.xform (locTEMP1, q = 1, ws = 1, t = 1)\n\t\t\tcmds.delete (clusterTEMP1)\n\t\t\tcmds.delete (locTEMP1)\n\t\t\t# CornerB\n\t\t\tcmds.select (cl = 1)\n\t\t\tcmds.select (upLidCrv + \".ep[4]\")\n\t\t\tcmds.select (lowLidCrv + \".ep[4]\", tgl = 1)\n\t\t\tclusterTEMP2 = cmds.cluster (en = 1) [1]\n\t\t\tlocTEMP2 = cmds.spaceLocator () [0]\n\t\t\tcmds.pointConstraint (clusterTEMP2, locTEMP2, mo = 0, w = 1)\n\t\t\tself.cornerBPos = cmds.xform (locTEMP2, q = 1, ws = 1, t = 1)\n\t\t\tcmds.delete (clusterTEMP2)\n\t\t\tcmds.delete (locTEMP2)\n\t\t\n\t\treturn self.cornerAPos, self.cornerBPos\n\t\n\t\n\tdef eyeLidsLeftAndRight (): # Unused function\n\t\t'''With the position of each eye corner and the upper and lower lids, find out where is the left and the right of the eye.\n\t\t\n\t\tCalled by 'createDriverCrv' function.\n\t\tCall functions: [...] '''\n\t\t\n\t\t# For controllers naming (instead of A and B)\n\t\t\n\t\t# ????????\n\t\t# Maybe API / vectors\n\t\tpass\n\t\n\t\n\tdef eyelidsCrvCVs (self, upLidCrv, lowLidCrv):\n\t\t'''List CVs of each guide curve.\n\t\t\n\t\tCalled by 'createDriverCrv' function.\n\t\tCall functions: None '''\n\t\t\n\t\tupLidCVs = []\n\t\tx = 0\n\t\twhile x < 7 :\n\t\t\tposCv = cmds.xform ((upLidCrv + \".cv[%d]\" % x), q = 1, ws = 1, t = 1)\n\t\t\tupLidCVs.append (posCv)\n\t\t\tx += 1\n\t\t\n\t\tlowLidCVs = []\n\t\ty = 0\n\t\twhile y < 7 :\n\t\t\tposCv = cmds.xform ((lowLidCrv + \".cv[%d]\" % y), q = 1, ws = 1, t = 1)\n\t\t\tlowLidCVs.append (posCv)\n\t\t\ty += 1\n\t\t\n\t\treturn upLidCVs, lowLidCVs\n\t\n\t\n\tdef eyelidsMatchTopology (self, cornerAPos, cornerBPos, upLidCVsPos, lowLidCVsPos):\n\t\t'''Reorganise the CVs of each curve so they have the same topology.\n\t\t\n\t\tCalled by 'createDriverCrv' function.\n\t\tCall functions: None '''\n\t\t\n\t\t# Order of CVs in base lists:\t\t\tOrder of CVs in ordered lists:\n\t\t# (upLidCVsPos, lowLidCVsPos)\t\t\t(upLidCVsOrdered, lowLidCVsOrdered)\n\t\t# -----------------------\t\t\t\t-------------------------\n\t\t# INDEX | \t\tCV\t\t|\t\t\t\t| INDEX | \t\tCV\t\t|\n\t\t# ------|---------------|\t\t\t\t|-------|---------------|\n\t\t# \t0\t| corner: ?\t\t|\t\t\t\t|\t0\t| corner A\t\t|\n\t\t# \t1\t| \t\t\t\t|\t\t\t\t|\t1\t| \t\t\t\t|\n\t\t# \t2\t| \t\t\t\t|\t\t\t\t|\t2\t| \t\t\t\t|\n\t\t# \t3\t| middle of crv |\t\t\t\t|\t3\t| middle of crv\t|\n\t\t# \t4\t| \t\t\t\t|\t\t\t\t|\t4\t| \t\t\t\t|\n\t\t# \t5\t| \t\t\t\t|\t\t\t\t|\t5\t| \t\t\t\t|\n\t\t# \t6\t| other corner  |\t\t\t\t|\t6\t| corner B\t\t|\n\t\t# -----------------------\t\t\t\t-------------------------\n\t\t\n\t\t# - measure dist between first_CV of baseList and cornerAPos\n\t\t# - measure dist between first_CV of baseList and cornerBPos\n\t\t# - if CV is closer to cornerA append baseList to orderedList from beginning to end\n\t\t# - else (CV closer to cornerB) append baseList to orderedList from end to beginning\n\t\t# return orderedLists\n\t\t\n\t\t# distance formula is: d = sqrt((Ax-Bx)**2 + (Ay-By)**2 + (Az-Bz)**2)\n\t\tdistTEMP1 = math.sqrt ( ( ((upLidCVsPos [0])[0]) - cornerAPos[0] )**2 + ( ((upLidCVsPos [0])[1]) - cornerAPos[1] )**2 + ( ((upLidCVsPos [0])[2]) - cornerAPos[2] )**2 )\n\t\tdistTEMP2 = math.sqrt ( ( ((upLidCVsPos [0])[0]) - cornerBPos[0] )**2 + ( ((upLidCVsPos [0])[1]) - cornerBPos[1] )**2 + ( ((upLidCVsPos [0])[2]) - cornerBPos[2] )**2 )\n\t\tif distTEMP1 < distTEMP2 :\n\t\t\tupLidCVsOrdered = upLidCVsPos\n\t\telse:\n\t\t\tupLidCVsOrdered = upLidCVsPos[::-1] # reversed 'upLidCVsPos'\n\t\t\n\t\tdistTEMP3 = math.sqrt ( ( ((lowLidCVsPos [0])[0]) - cornerAPos[0] )**2 + ( ((lowLidCVsPos [0])[1]) - cornerAPos[1] )**2 + ( ((lowLidCVsPos [0])[2]) - cornerAPos[2] )**2 )\n\t\tdistTEMP4 = math.sqrt ( ( ((lowLidCVsPos [0])[0]) - cornerBPos[0] )**2 + ( ((lowLidCVsPos [0])[1]) - cornerBPos[1] )**2 + ( ((lowLidCVsPos [0])[2]) - cornerBPos[2] )**2 )\n\t\tif distTEMP3 < distTEMP4 :\n\t\t\tlowLidCVsOrdered = lowLidCVsPos\n\t\telse:\n\t\t\tlowLidCVsOrdered = lowLidCVsPos[::-1] # reversed 'lowLidCVsPos'\n\t\t\t\n\t\treturn upLidCVsOrdered, lowLidCVsOrdered\n\t\n\t\n\tdef createDriverCrv (self, upLidBaseCrv, upRigGrp, lowLidBaseCrv, lowRigGrp):\n\t\t'''Create a driver curve for each lid curve and connect it to the base curve with a wire deformer.\n\t\t\n\t\tCalled by 'buildRig' function.\n\t\tCall functions: 'eyelidsCorners', 'eyeLidsLeftAndRight' (unused), 'eyelidsCrvCVs', 'eyelidsMatchTopology' '''\n\t\t\n\t\t## Upper eyelid ##\n\t\tupLidDriverCrvTEMP = cmds.duplicate (upLidBaseCrv) [0]\n\t\tcmds.delete (upLidDriverCrvTEMP, ch = 1) # delete history\n\t\tcmds.rebuildCurve (upLidDriverCrvTEMP, rpo = 1, end = 1, kr = 2, kcp = 0, kep = 1, kt = 0, s = 4, d = 7, tol = 0.01)\n\t\t\n\t\t# list the position of the EPs of the upper lid driver curve\n\t\tupLidEpPosTEMP = []\n\t\tx = 0\n\t\twhile x < 5 :\n\t\t\tposEp = cmds.xform ((upLidDriverCrvTEMP + \".ep[%d]\" % x), q = 1, ws = 1, t = 1)\n\t\t\tupLidEpPosTEMP.append (posEp)\n\t\t\tx += 1\n\t\tcmds.delete (upLidDriverCrvTEMP)\n\t\t\n\t\t# Create the upLid 'guide' curve for corner placement and query CVs positions and indexes\n\t\tupLidGuideCrv = cmds.curve (d = 3, ep = (upLidEpPosTEMP[0], upLidEpPosTEMP[1], upLidEpPosTEMP[2], upLidEpPosTEMP[3], upLidEpPosTEMP[4]))\n\t\t\n\t\t## Lower eyelid ##\n\t\tlowLidDriverCrvTEMP = cmds.duplicate (lowLidBaseCrv) [0]\n\t\tcmds.delete (lowLidDriverCrvTEMP, ch = 1) # delete history\n\t\tcmds.rebuildCurve (lowLidDriverCrvTEMP, rpo = 1, end = 1, kr = 2, kcp = 0, kep = 1, kt = 0, s = 4, d = 7, tol = 0.01)\n\t\t\n\t\t# list the position of the EPs of the lower lid driver curve\n\t\tlowLidEpPosTEMP = []\n\t\tx = 0\n\t\twhile x < 5 :\n\t\t\tposEp = cmds.xform ((lowLidDriverCrvTEMP + \".ep[%d]\" % x), q = 1, ws = 1, t = 1)\n\t\t\tlowLidEpPosTEMP.append (posEp)\n\t\t\tx += 1\n\t\tcmds.delete (lowLidDriverCrvTEMP)\n\t\t\n\t\t# Create the lowLid 'guide' curve for corner placement and query CVs positions and indexes\n\t\tlowLidGuideCrv = cmds.curve (d = 3, ep = (lowLidEpPosTEMP[0], lowLidEpPosTEMP[1], lowLidEpPosTEMP[2], lowLidEpPosTEMP[3], lowLidEpPosTEMP[4]))\n\t\t\n\t\t##\n\t\t\n\t\t# Find position of eye corners\n\t\tself.cornerAPos, self.cornerBPos = self.eyelidsCorners (upLidEpPosTEMP, upLidGuideCrv, lowLidEpPosTEMP, lowLidGuideCrv)\n\t\t\n\t\t# Define \"CornerA\" and \"CornerB\" as \"leftCorner\" and \"rightCorner\"\n\t\t# ADD FUNC WHEN OK - self.eyeLidsLeftAndRight (self.cornerAPos, self.cornerBPos)\n\t\t\n\t\t# List CVs positions of upLidGuideCrv and lowLidGuideCrv\n\t\tupLidCVsPos, lowLidCVsPos = self.eyelidsCrvCVs (upLidGuideCrv, lowLidGuideCrv)\n\t\t\n\t\t# List CVs positions in the right order (to match topology)\n\t\tupLidCVsOrdered, lowLidCVsOrdered = self.eyelidsMatchTopology (self.cornerAPos, self.cornerBPos, upLidCVsPos, lowLidCVsPos)\n\t\t\n\t\t##\n\t\t\n\t\t# Create upper driver curve\n\t\tself.upLidDriverCrv = cmds.curve (d = 3, p = (upLidCVsOrdered[0], upLidCVsOrdered[1], upLidCVsOrdered[2], upLidCVsOrdered[3], upLidCVsOrdered[4], upLidCVsOrdered[5], upLidCVsOrdered[6]))\n\t\tupLidDriverCrvName = upLidBaseCrv.replace (\"_BASE_\", \"_DRIVER_\")\n\t\tself.upLidDriverCrv = cmds.rename (self.upLidDriverCrv, upLidDriverCrvName)\n\t\tcmds.parent (self.upLidDriverCrv, upRigGrp)\n\t\t\n\t\tcmds.delete (upLidGuideCrv)\n\t\t\n\t\t# Create lower driver curve\n\t\tlowCrvTEMP = cmds.curve (d = 3, p = (lowLidCVsOrdered[0], lowLidCVsOrdered[1], lowLidCVsOrdered[2], lowLidCVsOrdered[3], lowLidCVsOrdered[4], lowLidCVsOrdered[5], lowLidCVsOrdered[6]))\n\t\tlowLidDriverCrvName = lowLidBaseCrv.replace (\"_BASE_\", \"_DRIVER_\")\n\t\tself.lowLidDriverCrv = cmds.rename (lowCrvTEMP, lowLidDriverCrvName)\n\t\tcmds.parent (self.lowLidDriverCrv, lowRigGrp)\n\t\t\n\t\tcmds.delete (lowLidGuideCrv)\n\t\t\n\t\t##\n\t\t\n\t\tcmds.select (cl = 1)\n\t\twireNodeUpLidName = upLidBaseCrv.replace (\"_BASE_curve\", \"_controlCurve_wire\")\n\t\twireUpLid = cmds.wire (upLidBaseCrv, n = wireNodeUpLidName, w = self.upLidDriverCrv, gw = 0, en = 1, ce = 0, li = 0)\n\t\t\n\t\tcmds.select (cl = 1)\n\t\twireNodeLowLidName = lowLidBaseCrv.replace (\"_BASE_curve\", \"_controlCurve_wire\")\n\t\twireUpLid = cmds.wire (lowLidBaseCrv, n = wireNodeLowLidName, w = self.lowLidDriverCrv, gw = 0, en = 1, ce = 0, li = 0)\n\t\n\t\n\tdef createJntCtrls (self, eyePrefix, cornerAPos, cornerBPos, upLidDriverCrv, lowLidDriverCrv, rigGrp): # MODIFIER\n\t\t'''Creates controller joints for each point of the eyelids driver curves.\n\t\t\n\t\tCalled by 'buildRig' function.\n\t\tCall functions: None '''\n\t\t\n\t\t# Find position of EPs of each driver curve for joint placement\n\t\tupLidEpDriverCrvPos = []\n\t\tx = 0\n\t\twhile x < 5 :\n\t\t\tposEp = cmds.xform ((upLidDriverCrv + \".ep[%d]\" % x), q = 1, ws = 1, t = 1)\n\t\t\tupLidEpDriverCrvPos.append (posEp)\n\t\t\tx += 1\n\t\t\n\t\tlowLidEpDriverCrvPos = []\n\t\ty = 0\n\t\twhile y < 5 :\n\t\t\tposEp = cmds.xform ((lowLidDriverCrv + \".ep[%d]\" % y), q = 1, ws = 1, t = 1)\n\t\t\tlowLidEpDriverCrvPos.append (posEp)\n\t\t\ty += 1\n\t\t\n\t\t# Place controller joints\n\t\tctrlJnt_CornerA = cmds.joint (rad = 0.05, p = self.cornerAPos, n = (eyePrefix + \"_cornerA_CTRL_JNT\"))\n\t\tctrlJnt_CornerB = cmds.joint (rad = 0.05, p = self.cornerBPos, n = (eyePrefix + \"_cornerB_CTRL_JNT\"))\n\t\tctrlJnt_upLidMain = cmds.joint (rad = 0.05, p = upLidEpDriverCrvPos[2], n = (eyePrefix + \"_UpEyelid_MAIN_CTRL_JNT\"))\n\t\tctrlJnt_lowLidMain = cmds.joint (rad = 0.05, p = lowLidEpDriverCrvPos[2], n = (eyePrefix + \"_LowEyelid_MAIN_CTRL_JNT\"))\n\t\tctrlJnt_upLidSecA = cmds.joint (rad = 0.05, p = upLidEpDriverCrvPos[1], n = (eyePrefix + \"_UpEyelid_SecondaryA_CTRL_JNT\"))\n\t\tctrlJnt_upLidSecB = cmds.joint (rad = 0.05, p = upLidEpDriverCrvPos[3], n = (eyePrefix + \"_UpEyelid_SecondaryB_CTRL_JNT\"))\n\t\tctrlJnt_lowLidSecA = cmds.joint (rad = 0.05, p = lowLidEpDriverCrvPos[1], n = (eyePrefix + \"_LowEyelid_SecondaryA_CTRL_JNT\"))\n\t\tctrlJnt_lowLidSecB = cmds.joint (rad = 0.05, p = lowLidEpDriverCrvPos[3], n = (eyePrefix + \"_LowEyelid_SecondaryB_CTRL_JNT\"))\n\t\t\n\t\tself.ctrlJnts = [ctrlJnt_CornerA, ctrlJnt_upLidSecA, ctrlJnt_upLidMain, ctrlJnt_upLidSecB, ctrlJnt_CornerB, ctrlJnt_lowLidSecB, ctrlJnt_lowLidMain, ctrlJnt_lowLidSecA]\n\t\t# Index:\t\t\t0\t\t\t\t1\t\t\t\t\t2\t\t\t\t\t3\t\t\t\t\t4\t\t\t\t5\t\t\t\t\t6\t\t\t\t\t7\n\t\t\n\t\t# Organise rig hierarchy\n\t\thierarchyCtrlJntGrp = cmds.group (n = (eyePrefix + \"_Eyelids_CTRL_JNT_GRP\"), em = 1)\n\t\tcmds.parent (hierarchyCtrlJntGrp, rigGrp)\n\t\tfor jnt in self.ctrlJnts:\n\t\t\tcmds.parent (jnt, hierarchyCtrlJntGrp)\n\t\t\n\t\t# Skin controllers joints to each driver curve\n\t\t# Upper eyelid\n\t\tcmds.select (cl = 1)\n\t\tcmds.select (self.ctrlJnts[:5])\n\t\tcmds.select (upLidDriverCrv, tgl = 1)\n\t\tcmds.skinCluster ()\n\t\t# Lower eyelid\n\t\tcmds.select (cl = 1)\n\t\tcmds.select (self.ctrlJnts [0])\n\t\tcmds.select (self.ctrlJnts[4:], tgl = 1)\n\t\tcmds.select (lowLidDriverCrv, tgl = 1)\n\t\tcmds.skinCluster ()\n\t\n\t\n\tdef createCrvCtrls (self, eyePrefix, parentCtrl, ctrlJnts):\n\t\t'''Creates controller curve for each controller joint.\n\t\t\n\t\tCalled by 'buildRig' function.\n\t\tCall functions: None '''\n\t\t\n\t\t# Organize rig hierarchy\n\t\thierarchySecondGrp = cmds.group (n = (eyePrefix + \"_Eyelids_CTRL_GRP\"), em = 1)\n\t\t\n\t\thierarchyMainGrp = \"Eyelids_CTRL_GRP\"\n\t\t\n\t\tif parentCtrl != None :\n\t\t\tctrlChildren = cmds.listRelatives (parentCtrl, children = 1)\n\t\t\tif hierarchyMainGrp in ctrlChildren :\n\t\t\t\tcmds.parent (hierarchySecondGrp, (parentCtrl + \"|\" + hierarchyMainGrp))\n\t\t\telse :\n\t\t\t\tcmds.group (n = hierarchyMainGrp, em = 1, p = parentCtrl)\n\t\t\t\tcmds.parent (hierarchySecondGrp, (parentCtrl + \"|\" + hierarchyMainGrp))\n\t\telse :\n\t\t\tif cmds.objExists (\"|\" + hierarchyMainGrp) :\n\t\t\t\tcmds.parent (hierarchySecondGrp, (\"|\" + hierarchyMainGrp))\n\t\t\telse :\n\t\t\t\tcmds.group (n = hierarchyMainGrp, em = 1)\n\t\t\t\tcmds.parent (hierarchySecondGrp, (\"|\" + hierarchyMainGrp))\n\t\t\n\t\t# Creates the controller object\n\t\tcmds.select (cl = 1)\n\t\tTEMP_CTRL1 = cmds.circle (r = 0.15) [0]\n\t\tTEMP_CTRL2 = cmds.duplicate () [0]\n\t\tcmds.setAttr (TEMP_CTRL2 + \".rotateY\", 90)\n\t\tTEMP_CTRL3 = cmds.duplicate () [0]\n\t\tcmds.setAttr (TEMP_CTRL3 + \".rotateX\", 90)\n\t\tcmds.parent (TEMP_CTRL2, TEMP_CTRL3, TEMP_CTRL1)\n\t\tcmds.makeIdentity (apply = 1, t = 1, r = 1, s = 1, n = 0, pn = 1)\n\t\tcmds.pickWalk (d = \"down\")\n\t\tcmds.select (TEMP_CTRL1, tgl = 1)\n\t\tcmds.parent (r = 1, s = 1)\n\t\tcmds.delete (TEMP_CTRL2, TEMP_CTRL3)\n\t\tcmds.select (cl = 1)\n\t\t\n\t\t# Place the controllers and constrain the joints\n\t\tself.ctrlList = []\n\t\tctrlOffsetGrpList = []\n\t\t\n\t\tfor jnt in ctrlJnts:\n\t\t\tctrlName = jnt [:-9]\n\t\t\tctrlName = \"CTRL_\" + ctrlName\n\t\t\tctrl = cmds.duplicate (TEMP_CTRL1, n = ctrlName) [0]\n\t\t\tself.ctrlList.append (ctrl)\n\t\t\tpointC_TEMP = cmds.pointConstraint (jnt, ctrl)\n\t\t\tcmds.delete (pointC_TEMP)\n\t\t\torigName = \"ORIG_\" + ctrlName\n\t\t\torigGrp = cmds.group (n = origName, em = 1)\n\t\t\tparentC_TEMP = cmds.parentConstraint (ctrl, origGrp)\n\t\t\tcmds.delete (parentC_TEMP)\n\t\t\tif ctrl.find (\"_Secondary\") != -1 : # If controller is 'secondary'\n\t\t\t\toffsetGrpName = origName.replace (\"ORIG_\", \"OFFSET_\")\n\t\t\t\toffsetGrp = cmds.duplicate (origGrp, n = offsetGrpName)\n\t\t\t\tcmds.parent (ctrl, offsetGrp)\n\t\t\t\tcmds.parent (offsetGrp, origGrp)\n\t\t\t\tctrlOffsetGrpList.extend (offsetGrp)\n\t\t\telse:\n\t\t\t\tcmds.parent (ctrl, origGrp)\n\t\t\tcmds.parent (origGrp, hierarchySecondGrp)\n\t\t\tcmds.parentConstraint (ctrl, jnt)\n\t\t\n\t\tcmds.delete (TEMP_CTRL1)\n\t\tcmds.select (cl = 1)\n\t\t\n\t\t# Constraints between main controllers and secondary ones\n\t\t\t# self.ctrlList = same order as 'ctrlJnts' list\n\t\t\t# [ctrl_CornerA, ctrl_upLidSecA, ctrl_upLidMain, ctrl_upLidSecB, ctrl_CornerB, ctrl_lowLidSecB, ctrl_lowLidMain, ctrl_lowLidSecA]\n\t\t\t# Index: 0\t\t\t\t1\t\t\t\t2\t\t\t\t3\t\t\t\t4\t\t\t\t5\t\t\t\t6\t\t\t7\n\t\t\t# ctrlOffsetGrpList = [OFFSET_Up_secondaryA, OFFSET_Up_secondaryB, OFFSET_Low_secondaryB, OFFSET_Low_secondaryA]\n\t\t\t# Index: \t\t\t\t\t\t0\t\t\t\t\t1\t\t\t\t\t\t2\t\t\t\t\t\t3\n\t\tcmds.parentConstraint (self.ctrlList[0], ctrlOffsetGrpList[0], mo = 1)\n\t\tcmds.parentConstraint (self.ctrlList[2], ctrlOffsetGrpList[0], mo = 1)\n\t\tcmds.parentConstraint (self.ctrlList[2], ctrlOffsetGrpList[1], mo = 1)\n\t\tcmds.parentConstraint (self.ctrlList[4], ctrlOffsetGrpList[1], mo = 1)\n\t\tcmds.parentConstraint (self.ctrlList[4], ctrlOffsetGrpList[2], mo = 1)\n\t\tcmds.parentConstraint (self.ctrlList[6], ctrlOffsetGrpList[2], mo = 1)\n\t\tcmds.parentConstraint (self.ctrlList[6], ctrlOffsetGrpList[3], mo = 1)\n\t\tcmds.parentConstraint (self.ctrlList[0], ctrlOffsetGrpList[3], mo = 1)\n\t\t\n\t\t# Secondary controllers visibility (drove by main controllers)\n\t\tcmds.select (cl = 1)\n\t\tcmds.select (self.ctrlList[2], self.ctrlList[6])\n\t\tcmds.addAttr (ln = \"SecondaryControls\", at = \"bool\", k = 0)\n\t\tcmds.setAttr ((self.ctrlList[2] + \".SecondaryControls\"), 1, channelBox = 1)\n\t\tcmds.setAttr ((self.ctrlList[6] + \".SecondaryControls\"), 1, channelBox = 1)\n\t\t# Upper lid\n\t\tcmds.connectAttr ((self.ctrlList[2] + \".SecondaryControls\"), (self.ctrlList[1] + \".visibility\"), f = 1)\n\t\tcmds.connectAttr ((self.ctrlList[2] + \".SecondaryControls\"), (self.ctrlList[3] + \".visibility\"), f = 1)\n\t\t# Lower lid\n\t\tcmds.connectAttr ((self.ctrlList[6] + \".SecondaryControls\"), (self.ctrlList[5] + \".visibility\"), f = 1)\n\t\tcmds.connectAttr ((self.ctrlList[6] + \".SecondaryControls\"), (self.ctrlList[7] + \".visibility\"), f = 1)\n\t\t\n\t\t# Lock and hide unused channels\n\t\tfor ctrl in self.ctrlList :\n\t\t\tcmds.setAttr ((ctrl + \".sx\"), lock = 1, keyable = 0, channelBox = 0)\n\t\t\tcmds.setAttr ((ctrl + \".sy\"), lock = 1, keyable = 0, channelBox = 0)\n\t\t\tcmds.setAttr ((ctrl + \".sz\"), lock = 1, keyable = 0, channelBox = 0)\n\t\t\tcmds.setAttr ((ctrl + \".v\"), lock = 1, keyable = 0, channelBox = 0)\n\t\n\t\n\tdef addSmartBlink (self, eyePrefix, upLidBaseCrv, upLidDriverCrv, lowLidBaseCrv, lowLidDriverCrv, ctrlList, rigGrp, upCrvRigGrp, lowCrvRigGrp):\n\t\t'''Add a 'smart blink' feature to the eyelid rig, allowing to blink wherever the controllers are (blendshapes + wire deformers system).\n\t\t\n\t\tCalled by 'buildRig' function.\n\t\tCall functions: None '''\n\t\t\n\t\t# Variables names containing 'SB' = smartBlink\n\t\t\n\t\tctrlUpLidMain = ctrlList[2]\n\t\tctrlLowLidMain = ctrlList[6]\n\t\t\n\t\t# - STEP 1:\n\t\tbothLidsSB_Crv = cmds.duplicate (upLidDriverCrv, n = (eyePrefix + \"_Eyelids_smartBlink_curve\")) [0]\n\t\tcmds.parent (bothLidsSB_Crv, rigGrp)\n\t\tbothLidsSB_BlndShp = cmds.blendShape (upLidDriverCrv, lowLidDriverCrv, bothLidsSB_Crv, n = (eyePrefix + \"_Eyelids_smartBlink_BLENDSHAPE\")) [0]\n\t\tcmds.select (cl = 1)\n\t\tcmds.select (ctrlUpLidMain)\n\t\tcmds.addAttr (ln = \"SmartBlinkHeight\", at = \"float\", min = 0, max = 1, k = 1)\n\t\tcmds.connectAttr ((ctrlUpLidMain + \".SmartBlinkHeight\"), (bothLidsSB_BlndShp + \".\" + upLidDriverCrv), f = 1)\n\t\tSBReverse = cmds.shadingNode (\"reverse\", asUtility = 1, n = (eyePrefix + \"_Eyelids_smartBlink_reverse\"))\n\t\tcmds.connectAttr ((ctrlUpLidMain + \".SmartBlinkHeight\"), (SBReverse + \".inputX\"), f = 1)\n\t\tcmds.connectAttr ((SBReverse + \".outputX\"), (bothLidsSB_BlndShp + \".\" + lowLidDriverCrv), f = 1)\n\t\t\n\t\t# STEP 2:\n\t\tupLidSB_Crv = cmds.duplicate (self.upLidCrv, n = (eyePrefix + \"_UpEyelid_smartBlink_curve\")) [0]\n\t\tlowLidSB_Crv = cmds.duplicate (self.lowLidCrv, n = (eyePrefix + \"_LowEyelid_smartBlink_curve\")) [0]\n\t\tcmds.setAttr ((ctrlUpLidMain + \".SmartBlinkHeight\"), 1)\n\t\tcmds.select (cl = 1)\n\t\twireUpLid = cmds.wire (upLidSB_Crv, n = (eyePrefix + \"_UpEyelid_smartBlink_wire\"), w = bothLidsSB_Crv, gw = 0, en = 1, ce = 0, li = 0)\n\t\tcmds.setAttr ((wireUpLid[0] + \".scale[0]\"), 0)\n\t\tcmds.setAttr ((ctrlUpLidMain + \".SmartBlinkHeight\"), 0)\n\t\tcmds.select (cl = 1)\n\t\twireLowLid = cmds.wire (lowLidSB_Crv, n = (eyePrefix + \"_LowEyelid_smartBlink_wire\"), w = bothLidsSB_Crv, gw = 0, en = 1, ce = 0, li = 0)\n\t\tcmds.setAttr ((wireLowLid[0] + \".scale[0]\"), 0)\n\t\t\n\t\t# STEP 3:\n\t\tupLidSB_BlndShp = cmds.blendShape (upLidSB_Crv, self.upLidCrv, n = (eyePrefix + \"_UpEyelid_smartBlink_BLENDSHAPE\")) [0]\n\t\tlowLidSB_BlndShp = cmds.blendShape (lowLidSB_Crv, self.lowLidCrv, n = (eyePrefix + \"_LowEyelid_smartBlink_BLENDSHAPE\")) [0]\n\t\t\n\t\t# FINAL STEP:\n\t\tcmds.select (ctrlUpLidMain, ctrlLowLidMain)\n\t\tcmds.addAttr (ln = \"SmartBlink\", at = \"float\", min = 0, max = 1, k = 1)\n\t\tcmds.connectAttr ((ctrlUpLidMain + \".SmartBlink\"), (upLidSB_BlndShp + \".\" + upLidSB_Crv), f = 1)\n\t\tcmds.connectAttr ((ctrlLowLidMain + \".SmartBlink\"), (lowLidSB_BlndShp + \".\" + lowLidSB_Crv), f = 1)\n\t\tcmds.setAttr ((ctrlUpLidMain + \".SmartBlinkHeight\"), 0.15)\n\t## FUNCTIONS TO BUILD RIG -end ##\n\t\n\t\n\t## DO BUILD RIG ##\n\tdef buildRig (self, *args):\n\t\t'''Build eyelids rig.\n\t\t\n\t\tCalled by 'UI' function.\n\t\tCall functions: 'vtxToJnt', 'placeRigLoc', 'createEyelidsCrv', 'connectLocToCrv', \n\t\t\t\t\t\t'createDriverCrv', 'createJntCtrls', 'createCrvCtrls', 'addSmartBlink' '''\n\t\t\n\t\tif self.eyeLoc == None or self.eyeName == None or self.upperLidVtx == None or self.lowerLidVtx == None :\n\t\t\tcmds.error (\"Please define eye center and eyelids vertices.\")\n\t\telse : # Call functions to build rig #\n\t\t\t# Step 1: places one joint per eyelid vertex\n\t\t\tself.vtxToJnt (self.eyeLoc, self.eyeName, self.upperLidVtx, self.lowerLidVtx, self.parentJnt)\n\t\t\t# Step 2: places one locator per eyelid vertex and constrain-aim each joint to it (so as it acts like an IK)\n\t\t\tself.placeRigLoc (self.eyeName, self.upLidJntList, self.lowLidJntList)\n\t\t\t# Step 3: creates a \"high-res\" curve for each lid (each vertex is a point of the curve)\n\t\t\tself.createEyelidsCrv (self.eyeName, self.upperLidVtx, self.lowerLidVtx, self.grpTheseEyelidsRig)\n\t\t\t# Step 4: connects each locator to the curve with a pointOnCurve node, so when the CVs of the curve move, the corresponding locator follows (and so does the joint)\n\t\t\tself.connectLocToCrv (self.upLidLocList, self.upLidCrv, self.lowLidLocList, self.lowLidCrv)\n\t\t\t# Step 5: creates a \"low-res\" curve with only 5 control points and makes it drive the high-res curve with a wire deformer\n\t\t\tself.createDriverCrv (self.upLidCrv, self.hierarchyUpCrvGrp, self.lowLidCrv, self.hierarchyLowCrvGrp)\n\t\t\t# Step 6: creates controller joints to drive the 'driver curve'\n\t\t\tself.createJntCtrls (self.eyeName, self.cornerAPos, self.cornerBPos, self.upLidDriverCrv, self.lowLidDriverCrv, self.grpTheseEyelidsRig)\n\t\t\t# Step 7: creates curve controllers, and attached the corresponding joints to them\n\t\t\tself.createCrvCtrls (self.eyeName, self.parentCtrl, self.ctrlJnts)\n\t\t\t# Step 8: if smart blink check box is checked, add smart blink feature\n\t\t\tif cmds.checkBox (self.isSmartBlink, q = 1, v = 1) == 1 :\n\t\t\t\tself.addSmartBlink (self.eyeName, self.upLidCrv, self.upLidDriverCrv, self.lowLidCrv, self.lowLidDriverCrv, self.ctrlList, self.hierarchyCrvGrp, self.hierarchyUpCrvGrp, self.hierarchyLowCrvGrp)\n\t\t\t\n\t\t\t# Clear scene & script variables #\n\t\t\tcmds.delete (self.eyeLoc)\n\t\t\tcmds.select (cl = 1)\n\t\t\t\n\t\t\tself.parentJnt = None\n\t\t\tself.parentCtrl = None\n\t\t\tself.eyeLoc = None\n\t\t\tself.eyeName = None\n\t\t\tself.upperLidVtx = None\n\t\t\tself.lowerLidVtx = None\n\t\t\t\n\t\t\t# Update UI #\n\t\t\tcmds.textField (self.txtfEye, e = 1, tx = \"\")\n\t\t\tcmds.textField (self.txtfJnt, e = 1, tx =\"\")\n\t\t\tcmds.textField (self.txtfCtrl, e = 1, tx =\"\")\n\t\t\tcmds.textField (self.txtfLoc, e = 1, tx = \"\")\n\t\t\tcmds.button (self.btnPlaceCenter, e = 1, en = 1)\n\t\t\tcmds.button (self.btnUndoPlaceCenter, e = 1, en = 0)\n\t\t\tcmds.scrollField (self.scrollfUpLid, e = 1, cl = 1)\n\t\t\tcmds.scrollField (self.scrollfLowLid, e = 1, cl = 1)\n\t\t\tcmds.checkBox (self.isSmartBlink, e = 1, v = 1)\n\t\t\t\n\t\t\t# End message\n\t\t\tif cmds.about (q = 1, version = 1) >= 2014 : # If Maya version is 2014 or more\n\t\t\t\tcmds.inViewMessage(amg = \"<hl>Eyelids have been successfully rigged.</hl> ?UKDP\", pos = \"midCenterTop\", fade = True)\n\t\t\t\tprint(\"Eyelids have been successfully rigged.\")\n\t\t\telse:\n\t\t\t\tprint(\"Eyelids have been successfully rigged.\\n\"),\n\t\n\t\n\t## UI ##\n\tdef UI (self):\n\t\t'''Creates UI - Main function\n\t\t\n\t\tCall functions: 'eyeParentJnt', 'eyeParentCtrl', 'placeEyeCenter', 'placeEyeCenterUndo', \n\t\t\t\t\t\t'upLidVtxSet', 'lowLidVtxSet', 'buildRig' '''\n\n\t\t# Main window\n\t\t\n\t\twinWidth = 290\n\t\t\n\t\tUKDP_mainWin = \"UKDP_WIN_AUTO_EYELIDS_RIG\"\n\n\t\tif cmds.window (\"UKDP_WIN_AUTO_EYELIDS_RIG\", exists = 1):\n\t\t\tcmds.deleteUI (\"UKDP_WIN_AUTO_EYELIDS_RIG\", window = 1)\n\n\t\tcmds.window (\"UKDP_WIN_AUTO_EYELIDS_RIG\", title = \"UKDP - Auto Eyelids Rig\", s = 0, mxb = 0)\n\n\t\t# Main layout\n\t\tcmds.columnLayout (co = (\"both\", 5))\n\t\t\n\t\t# Define eye name\n\t\tcmds.text (h = 5, l = \"\")\n\t\tcmds.rowLayout (numberOfColumns = 2)\n\t\tcmds.text (w = 120, l = \"Eye name (ex.: L_Eye)\")\n\t\tself.txtfEye = cmds.textField (w = 166)\n\t\tcmds.setParent (\"..\")\n\n\t\tcmds.text (h = 10, l = \"\")\n\t\t\n\t\tcmds.frameLayout (w = winWidth, collapsable = 1, collapse = 1, marginWidth = 5, l = \"Define rig hierarchy (optional)\")\n\t\t\n\t\t# Define parent joint\n\t\tcmds.text (h = 10, l = \"\")\n\t\tcmds.text (l = \"Select eyelids parent joint (would be the head joint)\")\n\t\tself.btnEyeParentJnt = cmds.button (l = \"Set\", c = self.eyeParentJnt)\n\t\tself.txtfJnt = cmds.textField (ed = 0)\n\t\t\n\t\tcmds.text (h = 10, l = \"\")\n\t\t\n\t\t# Define parent control\n\t\tcmds.text (l = \"Select eyelids parent control (would be the head control)\")\n\t\tself.btnEyeParentCtrl = cmds.button (w = (winWidth - 50), l = \"Set\", c = self.eyeParentCtrl)\n\t\tself.txtfCtrl = cmds.textField (w = (winWidth - 50), ed = 0)\n\t\t\n\t\tcmds.text (h = 5, l = \"\")\n\t\tcmds.setParent (\"..\")\n\t\t\n\t\tcmds.separator (h = 15, w = winWidth, style = \"in\")\n\t\t\n\t\t# Define eyeball center\n\t\tcmds.text (h = 30, l = \"Select eyeball, then click 'Place center'.\")\n\t\tcmds.rowLayout (numberOfColumns = 2)\n\t\tself.btnPlaceCenter = cmds.button (w = ((winWidth / 2) - 2), l = \"Place center\", c = self.placeEyeCenter)\n\t\tself.btnUndoPlaceCenter = cmds.button (w = ((winWidth / 2) - 2), l = \"Undo\", c = self.placeEyeCenterUndo, en = 0)\n\t\tcmds.setParent (\"..\")\n\t\tcmds.text (h = 5, l = \"\")\n\t\tself.txtfLoc = cmds.textField (w = winWidth, ed = 0)\n\t\t\n\t\tcmds.separator (h = 15, w = winWidth, style = \"in\")\n\n\t\t# List upper lid vertices\n\t\tcmds.text (h = 30, l = \"Select vertices of upper eyelid, then click 'Set'.\")\n\t\tself.btnUpLid = cmds.button (w = winWidth, l = \"Set\", c = self.upLidVtxSet)\n\t\tself.scrollfUpLid = cmds.scrollField (w = winWidth, h = 35, wordWrap = 1, ed = 0, en = 0)\n\t\t\n\t\tcmds.separator (h = 15, w = winWidth, style = \"in\")\n\n\t\t# List lower lid vertices\n\t\tcmds.text (h = 30, l = \"Select vertices of lower eyelid, then click 'Set'.\")\n\t\tself.btnLowLid = cmds.button (w = winWidth, l = \"Set\", c = self.lowLidVtxSet)\n\t\tself.scrollfLowLid = cmds.scrollField (w = winWidth, h = 35, wordWrap = 1, ed = 0, en = 0)\n\t\t\n\t\tcmds.separator (h = 15, w = winWidth, style = \"in\")\n\t\t\n\t\t# Allow/disallow smart blink\n\t\tself.isSmartBlink =  cmds.checkBox (h = 30, l = \"Add smart blink?\", v = 1)\n\t\t\n\t\t# Build final rig\n\t\tself.btnBuild = cmds.button (w = winWidth, h = 60, l = \"BUILD RIG\", c = self.buildRig, bgc = (0.1,0.7,0.7))\n\t\t\n\t\tcmds.text (h = 5, l = \"\")\n\t\t\n\t\t# Script infos\n\t\tcmds.text (en = 0, w = winWidth, l = MadeBy + \" (\" + Contact + \") - \" + ScriptName + \" \" + Version)\n\t\tcmds.text (en = 0, w = winWidth, l = \"Based on Marco Giordano's tutorials\")\n\t\t\n\t\tcmds.text (h = 5, l = \"\")\n\t\t\n\t\tcmds.setParent (\"..\")\n\t\t\n\t\tcmds.showWindow (\"UKDP_WIN_AUTO_EYELIDS_RIG\")\n\n\nautoEyelidsRig = AER ()\nautoEyelidsRig.UI () # load UI" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "ntMuscleCollision_v1.10" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ntMuscleCollision" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "ntMuscleCollider_shelf_32x32.png" 
        -image1 "ntMuscleCollider_shelf_32x32.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "source \"ntMuscleCollision_v1.10.mel\";" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Make custom muscle" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "srbMuscle" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "srbMuscle.png" 
        -image1 "srbMuscle.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import srbMuscle\nimport importlib\nimportlib.reload(srbMuscle)\nsrbMuscle.srbMuscle()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "rjRetargetBlendshape" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "rjRetargetBlendshape" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "rjRetargetBlendshape.png" 
        -image1 "rjRetargetBlendshape.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import rjRetargetBlendshape\nrjRetargetBlendshape.show()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "silhouettepolisher" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "silhouettepolisher" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/home/mgiglioli/maya/2018/extra/silhouettepolisher/icons/silhouettepolisher.png" 
        -image1 "/home/mgiglioli/maya/2018/extra/silhouettepolisher/icons/silhouettepolisher.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport silhouettepolisher\nimportlib.reload(silhouettepolisher)\nsilhouettepolisher.launch()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "mTshaders" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "mTshader" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "mTshader.png" 
        -image1 "mTshader.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import mTshaders as mTs\nimport importlib\nimportlib.reload(mTs)\nmTs.mTshaders_UI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "playback speed change" 
        -enableBackground 1
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "playback speed change" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "pSpeed" 
        -overlayLabelColor 1 0.998455 0.997871 
        -overlayLabelBackColor 0.0887459 0.0886088 0.0885569 0 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "cmds.confirmDialog(t='Select Speed', m='Right Click on the button and pick which speed to apply')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
        -mi "Playspeed 0.1" ( "playbackOptions -by 0.1;" )
        -mi "Playspeed 0.5" ( "playbackOptions -by 0.5;" )
        -mi "Playspeed 1.0" ( "playbackOptions -by 1.0;" )
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Check rig Speed" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "mDgTimer" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "dgTimer.png" 
        -image1 "dgTimer.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import os\ndef mDgTimer():\n    user = os.getenv('USER')\n    scene = cmds.file(q=True, sn=True, shn=True).split('.')[0]\n    ct = cmds.currentTime(q=True)\n    cmds.currentTime(ct)\n    cmds.dgtimer(on=True, reset=True )\n    cmds.currentTime(ct+1)\n    cmds.dgtimer(off=True)\n    outF='/home/mgiglioli/Desktop/'+scene+'_dgtrace.txt'\n    cmds.dgtimer(outputFile=outF, q=True)\n    cmds.currentTime(ct)\n    print(outF)\nmDgTimer()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "SpringPrevis" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SpringPrevis" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "tLMspringFiles/icons/SpringPrevisIcon.png" 
        -image1 "tLMspringFiles/icons/SpringPrevisIcon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "#######################################################################################\n#                                                                                     #\n#                            SPRING PREVIS 1.11.18                                    #\n#                  by Luismi Herrera. Twitter: @luismiherrera                         #\n#                                                                                     #\n# 1. Select something (normaly an animation control, but it could be anything).       #\n# 2. Execute SPRING PREVIS script (by clicking on the shelf icon).                    #\n# 3. Change or animate 'Goal Weight[0]' value (under 'luismiParticleShape') until     #\n#    you are happy with the result.                                                   #\n# 4. Execute SPRING BAKE script (by clicking on the shelf icon).                      #\n#                                                                                     #\n#######################################################################################\n\n\nimport maya.cmds as cmds\n\n\nminTime = cmds.playbackOptions(minTime=True, query=True)\nmaxTime = cmds.playbackOptions(maxTime=True, query=True)\nsel = cmds.ls(selection=True)\n\n\nunits = cmds.currentUnit(query=True, linear=True)\nmodifier = 1.0\nif(units!='cm'):\n    unitsInCm = (cmds.convertUnit(1, fromUnit=units, toUnit='cm'))\n    modifier = float(unitsInCm[:-2])\n\n\nif len(sel) == 0:\n    cmds.warning( \"Nothing Selected\" )\nelse:\n    if(cmds.objExists('LMspring')):\n        cmds.warning('There are existing LMspring particles in the scene! Use Spring Bake or delete the LMspring group.')\n    else:\n        cmds.group(name='LMspring', empty=True)\n        for i in range(len(sel)):\n            cmds.currentTime( minTime, edit=True )\n            selLoc = cmds.spaceLocator(name='OriginalPosition_Loc'+str(i))\n            luismiPart =cmds.particle(p=[(0, 0, 0)], name='luismiParticle'+str(i))\n            tempConst = cmds.parentConstraint(sel[i],selLoc,mo=False)\n            cmds.bakeResults(selLoc, t=(minTime,maxTime))\n            cmds.delete(tempConst)\n            tempConst2 = cmds.parentConstraint(selLoc,'luismiParticle'+str(i),mo=False)\n            cmds.delete(tempConst2)\n            cmds.goal( 'luismiParticle'+str(i), g=selLoc, w=.55)\n            phyLoc = cmds.spaceLocator(name='physicsLoc'+str(i))\n            expression = 'physicsLoc{0}.translateX = luismiParticle{0}Shape.worldCentroidX/{1};physicsLoc{0}.translateY = luismiParticle{0}Shape.worldCentroidY/{1};physicsLoc{0}.translateZ = luismiParticle{0}Shape.worldCentroidZ/{1};'.format(i, modifier)\n            cmds.expression(object='physicsLoc'+str(i),string=expression)\n            tempConst3 = cmds.pointConstraint('physicsLoc'+str(i), sel[i], mo=True)\n            cmds.parent(selLoc, luismiPart, phyLoc, 'LMspring')\n        cmds.select('luismiParticle*')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "SpringBake" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SpringBake" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "tLMspringFiles/icons/SpringBakeIcon.png" 
        -image1 "tLMspringFiles/icons/SpringBakeIcon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "##################################################################\n#                                                                #\n#                      SPRING BAKE 1.11.18                       #\n#            by Luismi Herrera. Twitter: @luismiherrera          #\n#                                                                #\n#  1. Adjust the Range Slider to chose frames to be baked.       #\n#  2. Execute SPRING BAKE by clicking on the shelf icon.         #\n#                                                                #\n##################################################################\n\n\nimport maya.cmds as cmds\n\n\nminTime = cmds.playbackOptions(minTime=True, query=True)\nmaxTime = cmds.playbackOptions(maxTime=True, query=True)\n\n\nLMspringObjects = cmds.ls('LMspring*')\n\n\nif(len(LMspringObjects)>0):\n    cmds.bakeResults(sel, t=(minTime,maxTime), simulation=True)\n    cmds.delete(LMspringObjects)\nelse:\n    cmds.warning( \"Nothing to bake. Use SPRING PREVIS first.\" )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Clean Unknow nodes" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Clean Unknow nodes" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "clUnk" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "sel = cmds.ls(type='unknown')\nfor s in sel:\n    print(s)\n    try:\n        cmds.lockNode(s,l=False)\n        cmds.delete(s)\n    except:\n        continue" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 10
        -enable 1
        -width 13
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "concrete.png" 
        -image1 "concrete.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "xgenToNhair" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "xgenToNhair" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/home/mau/maya/2023/extra/test/icons/xgenToNhair.png" 
        -image1 "/home/mau/maya/2023/extra/test/icons/xgenToNhair.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport xgenToNhair\nimportlib.reload(xgenToNhair)\nxgenToNhair.xUI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "prepareMixamo" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "prepareMixamo" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/icons/prepareMixamo.png" 
        -image1 "/nfs/dev/software/mauTools/LIN/maya/2022/1.4/icons/prepareMixamo.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import prepareMixamo, importlib\nimportlib.reload(prepareMixamo)\nprepareMixamo.mUI()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "History" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Hist" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "DeleteHistory" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;

} 
