

global proc int glTFTranslatorOpts ( string $parent,
									string $action,
									string $initialSettings,
									string $resultCallback )
//
//	Description:
//		This script posts the LEP file translator options.
//		The optionsString is of the form:
//			varName1=value1;varName2=value2;...
//		for the LEP translator, there is only one option named "t",
//		which can have 2 value.  If it is "1" (or true), then on writing
//		Dag node type names are written, otherwise, it is "0" and type
//		names are not written.
//
//	Parameters:
//		$parent	- the elf parent layout for this options layout. It is
//					always a scrollLayout.
//		$action	- the action that is to be performed with this invokation
//					of this proc. Valid options are:
//						"query" - construct the options string and pass it
//									to the resultCallback.
//						"post"	- post all the elf controls.
//		$initialSettings - the current options string in effect at the
//						   time this script is invoked.
//		$resultCallback	-
//				This is the proc to be called with the result string. 
//				resultCallback ( string $optionsString )
//
//	Returns:
//		1 if successfull.
//		0 otherwise.
//
{
	int		$bResult;
	string	$currentOptions;
	string	$optionList[];
	string	$optionBreakDown[];
	int		$index;
	
	if ($action == "post") {
		setParent $parent;

	    formLayout glTFOptsForm;
            //radioButtonGrp
            //        -label "Resources Format:" -vertical
            //        -numberOfRadioButtons 3  -columnWidth4 50 80 110 110
            //        -annotation "Only applies to gltf format (not glb)"
            //        -labelArray3 "Single .bin" "Copy source files" "Embedded" resFormatGrp;
            //formLayout -e -attachPosition  resFormatGrp left -120 25 -attachPosition resFormatGrp right 0 75 -attachPosition resFormatGrp top 0 0 glTFOptsForm;
            optionMenu -label "Resources Format:" -annotation "Only applies to gltf format (not glb)" resFormatOpts;
                menuItem -label "Single .bin";
                menuItem -label "Copy source files";
                menuItem -label "Embedded";
            formLayout -e -attachPosition  resFormatOpts left -77 25  -attachPosition resFormatOpts top 0 0 glTFOptsForm;
            optionMenu -label "Export Animation:" animOpts;
                menuItem -label "None";
                menuItem -label "Keyed";
            formLayout -e -attachPosition  animOpts left -75 25 -attachPosition animOpts top 0 42 glTFOptsForm;
            //checkBox -label "Export Animation" animInclude;
            //formLayout -e -attachPosition  animInclude left 25 25 -attachPosition animInclude right 0 75 -attachPosition animInclude top 0 68 glTFOptsForm;
            checkBox -label "Flip UVs -- V-Flip" vFlip;
            formLayout -e -attachPosition  vFlip left 25 25 -attachPosition vFlip right 0 75 -attachPosition vFlip top 0 75 glTFOptsForm;
                    
		// Now set to current settings.
		if (size($initialSettings) > 0) {
			tokenize($initialSettings, ";", $optionList);
			for ($index = 0; $index < size($optionList); $index++) {
				tokenize($optionList[$index], "=", $optionBreakDown);
				if ($optionBreakDown[0] == "resFormat") {
					if ($optionBreakDown[1] == "bin") {
						optionMenu -edit -select 1 resFormatOpts;
					} else if ($optionBreakDown[1] == "source"){
						optionMenu -edit -select 2 resFormatOpts;
					} else {
                        optionMenu -edit -select 3 resFormatOpts;
                    }
				}
                else if ($optionBreakDown[0] == "anim") {
					if ($optionBreakDown[1] == "none") {
						optionMenu -edit -select 1 animOpts;
					} else {
						optionMenu -edit -select 2 animOpts;
					}
				}
                else if ($optionBreakDown[0] == "vFlip") {
					if ($optionBreakDown[1] == "0") {
						checkBox -edit -value 0 vFlip;
					} else {
						checkBox -edit -value 1 vFlip;
					}
				}
			}
		}
		$result = 1;
	
	} else if ($action == "query") {
		// Set verbose option
        $currentOptions = "";
		if (`optionMenu -q -select resFormatOpts` == 1) {
			$currentOptions = $currentOptions + "resFormat=bin;";
		} else if(`optionMenu -q -select resFormatOpts` == 2) {
            $currentOptions = $currentOptions + "resFormat=source;";
        } else {
			$currentOptions = $currentOptions + "resFormat=embedded;";
		}
        if (`optionMenu -q -select animOpts` == 1) {
			$currentOptions = $currentOptions + "anim=none;";
		} else {
			$currentOptions = $currentOptions + "anim=keyed;";
		}
        if (`checkBox -q -value vFlip` == 0) {
			$currentOptions = $currentOptions + "vFlip=0;";
		} else {
			$currentOptions = $currentOptions + "vFlip=1;";
		}
		eval($resultCallback+" \""+$currentOptions+"\"");
		$result = 1;
	} else {
		$bResult = 0;
	}
	
	return $bResult;
}
